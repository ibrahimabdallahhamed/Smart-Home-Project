

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 24 23:43:24 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83   000000                     
    84                           ; Generated 23/03/2023 GMT
    85                           ; 
    86                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F4620 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118   000000                     
   119                           	psect	idataCOMRAM
   120   0038A2                     __pidataCOMRAM:
   121                           	callstack 0
   122                           
   123                           ;initializer for _RB7_flag
   124   0038A2  01                 	db	1
   125                           
   126                           ;initializer for _RB6_flag
   127   0038A3  01                 	db	1
   128                           
   129                           ;initializer for _RB5_flag
   130   0038A4  01                 	db	1
   131                           
   132                           ;initializer for _RB4_flag
   133   0038A5  01                 	db	1
   134                           
   135                           ;initializer for _ACK_STATUS
   136   0038A6  01                 	db	1
   137                           
   138                           ;initializer for _LCD_1
   139   0038A7  03                 	db	3
   140   0038A8  0B                 	db	11
   141   0038A9  13                 	db	19
   142   0038AA  23                 	db	35
   143   0038AB  2B                 	db	43
   144   0038AC  33                 	db	51
   145   0038AD  3B                 	db	59
   146                           
   147                           ;initializer for _i2c_obj
   148   0038AE  86A0               	dw	34464
   149   0038B0  08                 	db	8
   150   0038B1  00                 	db	0
   151   0038B2  03                 	db	3
   152                           
   153                           ;initializer for _Data
   154   0038B3  00                 	db	0
   155   0038B4  5A                 	db	90
   156   0038B5  00                 	db	0
   157   0038B6  00                 	db	0
   158                           
   159                           ;initializer for _LED_LOCK
   160   0038B7  02                 	db	2
   161   0038B8  00                 	db	0
   162   0038B9  01                 	db	1
   163                           
   164                           	psect	idataBANK0
   165   003450                     __pidataBANK0:
   166                           	callstack 0
   167                           
   168                           ;initializer for _Au8elements
   169   003450  07                 	db	7
   170   003451  08                 	db	8
   171   003452  09                 	db	9
   172   003453  2F                 	db	47
   173   003454  04                 	db	4
   174   003455  05                 	db	5
   175   003456  06                 	db	6
   176   003457  2A                 	db	42
   177   003458  01                 	db	1
   178   003459  02                 	db	2
   179   00345A  03                 	db	3
   180   00345B  2D                 	db	45
   181   00345C  63                 	db	99
   182   00345D  00                 	db	0
   183   00345E  3D                 	db	61
   184   00345F  2B                 	db	43
   185                           
   186                           ;initializer for _port_registers
   187   003460  80                 	db	128
   188   003461  0F                 	db	15
   189   003462  81                 	db	129
   190   003463  0F                 	db	15
   191   003464  82                 	db	130
   192   003465  0F                 	db	15
   193   003466  83                 	db	131
   194   003467  0F                 	db	15
   195   003468  84                 	db	132
   196   003469  0F                 	db	15
   197                           
   198                           ;initializer for _lat_registers
   199   00346A  89                 	db	137
   200   00346B  0F                 	db	15
   201   00346C  8A                 	db	138
   202   00346D  0F                 	db	15
   203   00346E  8B                 	db	139
   204   00346F  0F                 	db	15
   205   003470  8C                 	db	140
   206   003471  0F                 	db	15
   207   003472  8D                 	db	141
   208   003473  0F                 	db	15
   209                           
   210                           ;initializer for _tris_registers
   211   003474  92                 	db	146
   212   003475  0F                 	db	15
   213   003476  93                 	db	147
   214   003477  0F                 	db	15
   215   003478  94                 	db	148
   216   003479  0F                 	db	15
   217   00347A  95                 	db	149
   218   00347B  0F                 	db	15
   219   00347C  96                 	db	150
   220   00347D  0F                 	db	15
   221                           
   222                           ;initializer for _KeyPad_1
   223   00347E  01                 	db	1
   224   00347F  00                 	db	0
   225   003480  01                 	db	1
   226   003481  01                 	db	1
   227   003482  01                 	db	1
   228   003483  02                 	db	2
   229   003484  01                 	db	1
   230   003485  03                 	db	3
   231   003486  01                 	db	1
   232   003487  04                 	db	4
   233   003488  01                 	db	1
   234   003489  05                 	db	5
   235   00348A  01                 	db	1
   236   00348B  06                 	db	6
   237   00348C  01                 	db	1
   238   00348D  07                 	db	7
   239                           
   240                           ;initializer for _DC_MotorCCP
   241   00348E  02                 	db	2
   242   00348F  00                 	db	0
   243   003490  00                 	db	0
   244   003491  4E20               	dw	20000
   245   003493  01                 	db	1
   246   003494  01                 	db	1
   247                           
   248                           ;initializer for _uart_TX
   249   003495  2580               	dw	9600
   250   003497  00                 	db	0
   251   003498  01                 	db	1
   252   003499  01                 	db	1
   253   00349A  00                 	db	0
   254                           
   255                           ;initializer for _ADC
   256   00349B  01                 	db	1
   257   00349C  04                 	db	4
   258   00349D  00                 	db	0
   259   00349E  02                 	db	2
   260   000000                     _SPBRGH	set	4016
   261   000000                     _SPBRG	set	4015
   262   000000                     _TXSTAbits	set	4012
   263   000000                     _TXREG	set	4013
   264   000000                     _RCREG	set	4014
   265   000000                     _RCSTAbits	set	4011
   266   000000                     _TMR3L	set	4018
   267   000000                     _TMR3H	set	4019
   268   000000                     _T3CONbits	set	4017
   269   000000                     _TMR2	set	4044
   270   000000                     _T2CONbits	set	4042
   271   000000                     _TMR1L	set	4046
   272   000000                     _TMR1H	set	4047
   273   000000                     _T1CONbits	set	4045
   274   000000                     _TMR0L	set	4054
   275   000000                     _TMR0H	set	4055
   276   000000                     _RCONbits	set	4048
   277   000000                     _SSPBUF	set	4041
   278   000000                     _SSPADD	set	4040
   279   000000                     _SSPCON1bits	set	4038
   280   000000                     _EECON2	set	4007
   281   000000                     _PR2	set	4043
   282   000000                     _ADCON1bits	set	4033
   283   000000                     _ADRESL	set	4035
   284   000000                     _ADRESH	set	4036
   285   000000                     _CCP2CONbits	set	4026
   286   000000                     _CCP1CONbits	set	4029
   287   000000                     _SSPSTATbits	set	4039
   288   000000                     _SSPCON2bits	set	4037
   289   000000                     _WDTCONbits	set	4049
   290   000000                     _PORTD	set	3971
   291   000000                     _PORTC	set	3970
   292   000000                     _PORTB	set	3969
   293   000000                     _PORTE	set	3972
   294   000000                     _PORTA	set	3968
   295   000000                     _TRISCbits	set	3988
   296   000000                     _OSCCONbits	set	4051
   297   000000                     _T0CONbits	set	4053
   298   000000                     _INTCONbits	set	4082
   299   000000                     _CCPR1L	set	4030
   300   000000                     _ADCON2bits	set	4032
   301   000000                     _ADCON0bits	set	4034
   302   000000                     _CCPR2L	set	4027
   303   000000                     _PIE1bits	set	3997
   304   000000                     _LATA	set	3977
   305   000000                     _TRISA	set	3986
   306   000000                     _PIR1bits	set	3998
   307   000000                     _PIE2bits	set	4000
   308   000000                     _EECON1bits	set	4006
   309   000000                     _EEDATA	set	4008
   310   000000                     _EEADR	set	4009
   311   000000                     _EEADRH	set	4010
   312   000000                     _PIR2bits	set	4001
   313   000000                     _TRISE	set	3990
   314   000000                     _TRISD	set	3989
   315   000000                     _TRISC	set	3988
   316   000000                     _TRISB	set	3987
   317   000000                     _LATE	set	3981
   318   000000                     _LATD	set	3980
   319   000000                     _LATC	set	3979
   320   000000                     _LATB	set	3978
   321   000000                     _BAUDCONbits	set	4024
   322                           
   323                           	psect	mediumconst
   324   00FE86                     __pmediumconst:
   325                           	callstack 0
   326   00FE86  00                 	db	0
   327   00FE87                     STR_3:
   328   00FE87  4C                 	db	76	;'L'
   329   00FE88  6F                 	db	111	;'o'
   330   00FE89  67                 	db	103	;'g'
   331   00FE8A  69                 	db	105	;'i'
   332   00FE8B  6E                 	db	110	;'n'
   333   00FE8C  20                 	db	32
   334   00FE8D  66                 	db	102	;'f'
   335   00FE8E  6F                 	db	111	;'o'
   336   00FE8F  72                 	db	114	;'r'
   337   00FE90  20                 	db	32
   338   00FE91  66                 	db	102	;'f'
   339   00FE92  69                 	db	105	;'i'
   340   00FE93  72                 	db	114	;'r'
   341   00FE94  73                 	db	115	;'s'
   342   00FE95  74                 	db	116	;'t'
   343   00FE96  20                 	db	32
   344   00FE97  74                 	db	116	;'t'
   345   00FE98  69                 	db	105	;'i'
   346   00FE99  6D                 	db	109	;'m'
   347   00FE9A  65                 	db	101	;'e'
   348   00FE9B  00                 	db	0
   349   00FE9C                     STR_5:
   350   00FE9C  45                 	db	69	;'E'
   351   00FE9D  6E                 	db	110	;'n'
   352   00FE9E  74                 	db	116	;'t'
   353   00FE9F  65                 	db	101	;'e'
   354   00FEA0  72                 	db	114	;'r'
   355   00FEA1  20                 	db	32
   356   00FEA2  70                 	db	112	;'p'
   357   00FEA3  61                 	db	97	;'a'
   358   00FEA4  73                 	db	115	;'s'
   359   00FEA5  73                 	db	115	;'s'
   360   00FEA6  77                 	db	119	;'w'
   361   00FEA7  6F                 	db	111	;'o'
   362   00FEA8  72                 	db	114	;'r'
   363   00FEA9  64                 	db	100	;'d'
   364   00FEAA  20                 	db	32
   365   00FEAB  3A                 	db	58	;':'
   366   00FEAC  20                 	db	32
   367   00FEAD  00                 	db	0
   368   00FEAE                     STR_10:
   369   00FEAE  42                 	db	66	;'B'
   370   00FEAF  6C                 	db	108	;'l'
   371   00FEB0  6F                 	db	111	;'o'
   372   00FEB1  63                 	db	99	;'c'
   373   00FEB2  6B                 	db	107	;'k'
   374   00FEB3  20                 	db	32
   375   00FEB4  66                 	db	102	;'f'
   376   00FEB5  6F                 	db	111	;'o'
   377   00FEB6  72                 	db	114	;'r'
   378   00FEB7  20                 	db	32
   379   00FEB8  35                 	db	53	;'5'
   380   00FEB9  20                 	db	32
   381   00FEBA  73                 	db	115	;'s'
   382   00FEBB  65                 	db	101	;'e'
   383   00FEBC  63                 	db	99	;'c'
   384   00FEBD  20                 	db	32
   385   00FEBE  00                 	db	0
   386   00FEBF                     STR_6:
   387   00FEBF  43                 	db	67	;'C'
   388   00FEC0  6F                 	db	111	;'o'
   389   00FEC1  72                 	db	114	;'r'
   390   00FEC2  72                 	db	114	;'r'
   391   00FEC3  65                 	db	101	;'e'
   392   00FEC4  63                 	db	99	;'c'
   393   00FEC5  74                 	db	116	;'t'
   394   00FEC6  20                 	db	32
   395   00FEC7  70                 	db	112	;'p'
   396   00FEC8  61                 	db	97	;'a'
   397   00FEC9  73                 	db	115	;'s'
   398   00FECA  73                 	db	115	;'s'
   399   00FECB  77                 	db	119	;'w'
   400   00FECC  6F                 	db	111	;'o'
   401   00FECD  72                 	db	114	;'r'
   402   00FECE  64                 	db	100	;'d'
   403   00FECF  00                 	db	0
   404   00FED0                     STR_22:
   405   00FED0  43                 	db	67	;'C'
   406   00FED1  68                 	db	104	;'h'
   407   00FED2  6F                 	db	111	;'o'
   408   00FED3  6F                 	db	111	;'o'
   409   00FED4  73                 	db	115	;'s'
   410   00FED5  65                 	db	101	;'e'
   411   00FED6  20                 	db	32
   412   00FED7  6F                 	db	111	;'o'
   413   00FED8  70                 	db	112	;'p'
   414   00FED9  65                 	db	101	;'e'
   415   00FEDA  72                 	db	114	;'r'
   416   00FEDB  61                 	db	97	;'a'
   417   00FEDC  74                 	db	116	;'t'
   418   00FEDD  69                 	db	105	;'i'
   419   00FEDE  6F                 	db	111	;'o'
   420   00FEDF  6E                 	db	110	;'n'
   421   00FEE0  00                 	db	0
   422   00FEE1                     STR_9:
   423   00FEE1  33                 	db	51	;'3'
   424   00FEE2  20                 	db	32
   425   00FEE3  77                 	db	119	;'w'
   426   00FEE4  72                 	db	114	;'r'
   427   00FEE5  6F                 	db	111	;'o'
   428   00FEE6  6E                 	db	110	;'n'
   429   00FEE7  67                 	db	103	;'g'
   430   00FEE8  20                 	db	32
   431   00FEE9  61                 	db	97	;'a'
   432   00FEEA  74                 	db	116	;'t'
   433   00FEEB  74                 	db	116	;'t'
   434   00FEEC  65                 	db	101	;'e'
   435   00FEED  6D                 	db	109	;'m'
   436   00FEEE  70                 	db	112	;'p'
   437   00FEEF  74                 	db	116	;'t'
   438   00FEF0  73                 	db	115	;'s'
   439   00FEF1  00                 	db	0
   440   00FEF2                     STR_1:
   441   00FEF2  57                 	db	87	;'W'
   442   00FEF3  65                 	db	101	;'e'
   443   00FEF4  6C                 	db	108	;'l'
   444   00FEF5  63                 	db	99	;'c'
   445   00FEF6  6F                 	db	111	;'o'
   446   00FEF7  6D                 	db	109	;'m'
   447   00FEF8  65                 	db	101	;'e'
   448   00FEF9  20                 	db	32
   449   00FEFA  74                 	db	116	;'t'
   450   00FEFB  6F                 	db	111	;'o'
   451   00FEFC  20                 	db	32
   452   00FEFD  53                 	db	83	;'S'
   453   00FEFE  6D                 	db	109	;'m'
   454   00FEFF  61                 	db	97	;'a'
   455   00FF00  72                 	db	114	;'r'
   456   00FF01  74                 	db	116	;'t'
   457   00FF02  00                 	db	0
   458   00FF03                     STR_30:
   459   00FF03  53                 	db	83	;'S'
   460   00FF04  65                 	db	101	;'e'
   461   00FF05  74                 	db	116	;'t'
   462   00FF06  20                 	db	32
   463   00FF07  54                 	db	84	;'T'
   464   00FF08  65                 	db	101	;'e'
   465   00FF09  6D                 	db	109	;'m'
   466   00FF0A  70                 	db	112	;'p'
   467   00FF0B  65                 	db	101	;'e'
   468   00FF0C  72                 	db	114	;'r'
   469   00FF0D  61                 	db	97	;'a'
   470   00FF0E  74                 	db	116	;'t'
   471   00FF0F  75                 	db	117	;'u'
   472   00FF10  72                 	db	114	;'r'
   473   00FF11  65                 	db	101	;'e'
   474   00FF12  00                 	db	0
   475   00FF13                     STR_7:
   476   00FF13  57                 	db	87	;'W'
   477   00FF14  72                 	db	114	;'r'
   478   00FF15  6F                 	db	111	;'o'
   479   00FF16  6E                 	db	110	;'n'
   480   00FF17  67                 	db	103	;'g'
   481   00FF18  20                 	db	32
   482   00FF19  70                 	db	112	;'p'
   483   00FF1A  61                 	db	97	;'a'
   484   00FF1B  73                 	db	115	;'s'
   485   00FF1C  73                 	db	115	;'s'
   486   00FF1D  77                 	db	119	;'w'
   487   00FF1E  6F                 	db	111	;'o'
   488   00FF1F  72                 	db	114	;'r'
   489   00FF20  64                 	db	100	;'d'
   490   00FF21  20                 	db	32
   491   00FF22  00                 	db	0
   492   00FF23                     STR_33:
   493   00FF23  43                 	db	67	;'C'
   494   00FF24  68                 	db	104	;'h'
   495   00FF25  6F                 	db	111	;'o'
   496   00FF26  6F                 	db	111	;'o'
   497   00FF27  73                 	db	115	;'s'
   498   00FF28  65                 	db	101	;'e'
   499   00FF29  20                 	db	32
   500   00FF2A  6F                 	db	111	;'o'
   501   00FF2B  70                 	db	112	;'p'
   502   00FF2C  74                 	db	116	;'t'
   503   00FF2D  69                 	db	105	;'i'
   504   00FF2E  6F                 	db	111	;'o'
   505   00FF2F  6E                 	db	110	;'n'
   506   00FF30  20                 	db	32
   507   00FF31  00                 	db	0
   508   00FF32                     STR_28:
   509   00FF32  49                 	db	73	;'I'
   510   00FF33  6E                 	db	110	;'n'
   511   00FF34  76                 	db	118	;'v'
   512   00FF35  61                 	db	97	;'a'
   513   00FF36  6C                 	db	108	;'l'
   514   00FF37  69                 	db	105	;'i'
   515   00FF38  64                 	db	100	;'d'
   516   00FF39  20                 	db	32
   517   00FF3A  4E                 	db	78	;'N'
   518   00FF3B  75                 	db	117	;'u'
   519   00FF3C  6D                 	db	109	;'m'
   520   00FF3D  62                 	db	98	;'b'
   521   00FF3E  65                 	db	101	;'e'
   522   00FF3F  72                 	db	114	;'r'
   523   00FF40  00                 	db	0
   524   00FF41                     STR_4:
   525   00FF41  53                 	db	83	;'S'
   526   00FF42  65                 	db	101	;'e'
   527   00FF43  74                 	db	116	;'t'
   528   00FF44  20                 	db	32
   529   00FF45  70                 	db	112	;'p'
   530   00FF46  61                 	db	97	;'a'
   531   00FF47  73                 	db	115	;'s'
   532   00FF48  73                 	db	115	;'s'
   533   00FF49  77                 	db	119	;'w'
   534   00FF4A  6F                 	db	111	;'o'
   535   00FF4B  72                 	db	114	;'r'
   536   00FF4C  64                 	db	100	;'d'
   537   00FF4D  00                 	db	0
   538   00FF4E                     STR_15:
   539   00FF4E  32                 	db	50	;'2'
   540   00FF4F  2D                 	db	45
   541   00FF50  43                 	db	67	;'C'
   542   00FF51  6C                 	db	108	;'l'
   543   00FF52  6F                 	db	111	;'o'
   544   00FF53  73                 	db	115	;'s'
   545   00FF54  65                 	db	101	;'e'
   546   00FF55  20                 	db	32
   547   00FF56  44                 	db	68	;'D'
   548   00FF57  6F                 	db	111	;'o'
   549   00FF58  6F                 	db	111	;'o'
   550   00FF59  72                 	db	114	;'r'
   551   00FF5A  00                 	db	0
   552   00FF5B                     STR_23:
   553   00FF5B  31                 	db	49	;'1'
   554   00FF5C  2D                 	db	45
   555   00FF5D  41                 	db	65	;'A'
   556   00FF5E  75                 	db	117	;'u'
   557   00FF5F  74                 	db	116	;'t'
   558   00FF60  6F                 	db	111	;'o'
   559   00FF61  6D                 	db	109	;'m'
   560   00FF62  61                 	db	97	;'a'
   561   00FF63  74                 	db	116	;'t'
   562   00FF64  69                 	db	105	;'i'
   563   00FF65  63                 	db	99	;'c'
   564   00FF66  00                 	db	0
   565   00FF67                     STR_2:
   566   00FF67  48                 	db	72	;'H'
   567   00FF68  6F                 	db	111	;'o'
   568   00FF69  6D                 	db	109	;'m'
   569   00FF6A  65                 	db	101	;'e'
   570   00FF6B  20                 	db	32
   571   00FF6C  53                 	db	83	;'S'
   572   00FF6D  79                 	db	121	;'y'
   573   00FF6E  73                 	db	115	;'s'
   574   00FF6F  74                 	db	116	;'t'
   575   00FF70  65                 	db	101	;'e'
   576   00FF71  6D                 	db	109	;'m'
   577   00FF72  00                 	db	0
   578   00FF73                     STR_14:
   579   00FF73  31                 	db	49	;'1'
   580   00FF74  2D                 	db	45
   581   00FF75  4F                 	db	79	;'O'
   582   00FF76  70                 	db	112	;'p'
   583   00FF77  65                 	db	101	;'e'
   584   00FF78  6E                 	db	110	;'n'
   585   00FF79  20                 	db	32
   586   00FF7A  44                 	db	68	;'D'
   587   00FF7B  6F                 	db	111	;'o'
   588   00FF7C  6F                 	db	111	;'o'
   589   00FF7D  72                 	db	114	;'r'
   590   00FF7E  00                 	db	0
   591   00FF7F                     STR_8:
   592   00FF7F  54                 	db	84	;'T'
   593   00FF80  72                 	db	114	;'r'
   594   00FF81  79                 	db	121	;'y'
   595   00FF82  20                 	db	32
   596   00FF83  61                 	db	97	;'a'
   597   00FF84  67                 	db	103	;'g'
   598   00FF85  61                 	db	97	;'a'
   599   00FF86  69                 	db	105	;'i'
   600   00FF87  6E                 	db	110	;'n'
   601   00FF88  20                 	db	32
   602   00FF89  00                 	db	0
   603   00FF8A                     STR_19:
   604   00FF8A  32                 	db	50	;'2'
   605   00FF8B  2D                 	db	45
   606   00FF8C  43                 	db	67	;'C'
   607   00FF8D  6C                 	db	108	;'l'
   608   00FF8E  6F                 	db	111	;'o'
   609   00FF8F  73                 	db	115	;'s'
   610   00FF90  65                 	db	101	;'e'
   611   00FF91  20                 	db	32
   612   00FF92  54                 	db	84	;'T'
   613   00FF93  56                 	db	86	;'V'
   614   00FF94  00                 	db	0
   615   00FF95                     STR_18:
   616   00FF95  31                 	db	49	;'1'
   617   00FF96  2D                 	db	45
   618   00FF97  4F                 	db	79	;'O'
   619   00FF98  70                 	db	112	;'p'
   620   00FF99  65                 	db	101	;'e'
   621   00FF9A  6E                 	db	110	;'n'
   622   00FF9B  20                 	db	32
   623   00FF9C  54                 	db	84	;'T'
   624   00FF9D  56                 	db	86	;'V'
   625   00FF9E  00                 	db	0
   626   00FF9F                     STR_37:
   627   00FF9F  34                 	db	52	;'4'
   628   00FFA0  2D                 	db	45
   629   00FFA1  4C                 	db	76	;'L'
   630   00FFA2  69                 	db	105	;'i'
   631   00FFA3  67                 	db	103	;'g'
   632   00FFA4  68                 	db	104	;'h'
   633   00FFA5  74                 	db	116	;'t'
   634   00FFA6  73                 	db	115	;'s'
   635   00FFA7  00                 	db	0
   636   00FFA8                     STR_29:
   637   00FFA8  57                 	db	87	;'W'
   638   00FFA9  72                 	db	114	;'r'
   639   00FFAA  6F                 	db	111	;'o'
   640   00FFAB  6E                 	db	110	;'n'
   641   00FFAC  67                 	db	103	;'g'
   642   00FFAD  20                 	db	32
   643   00FFAE  49                 	db	73	;'I'
   644   00FFAF  64                 	db	100	;'d'
   645   00FFB0  00                 	db	0
   646   00FFB1                     STR_24:
   647   00FFB1  32                 	db	50	;'2'
   648   00FFB2  2D                 	db	45
   649   00FFB3  4D                 	db	77	;'M'
   650   00FFB4  61                 	db	97	;'a'
   651   00FFB5  6E                 	db	110	;'n'
   652   00FFB6  75                 	db	117	;'u'
   653   00FFB7  61                 	db	97	;'a'
   654   00FFB8  6C                 	db	108	;'l'
   655   00FFB9  00                 	db	0
   656   00FFBA                     STR_31:
   657   00FFBA  4C                 	db	76	;'L'
   658   00FFBB  6F                 	db	111	;'o'
   659   00FFBC  61                 	db	97	;'a'
   660   00FFBD  64                 	db	100	;'d'
   661   00FFBE  69                 	db	105	;'i'
   662   00FFBF  6E                 	db	110	;'n'
   663   00FFC0  67                 	db	103	;'g'
   664   00FFC1  00                 	db	0
   665   00FFC2                     STR_11:
   666   00FFC2  54                 	db	84	;'T'
   667   00FFC3  65                 	db	101	;'e'
   668   00FFC4  6D                 	db	109	;'m'
   669   00FFC5  70                 	db	112	;'p'
   670   00FFC6  20                 	db	32
   671   00FFC7  3A                 	db	58	;':'
   672   00FFC8  20                 	db	32
   673   00FFC9  00                 	db	0
   674   00FFCA                     STR_26:
   675   00FFCA  4C                 	db	76	;'L'
   676   00FFCB  6F                 	db	111	;'o'
   677   00FFCC  6F                 	db	111	;'o'
   678   00FFCD  64                 	db	100	;'d'
   679   00FFCE  69                 	db	105	;'i'
   680   00FFCF  6E                 	db	110	;'n'
   681   00FFD0  67                 	db	103	;'g'
   682   00FFD1  00                 	db	0
   683   00FFD2                     STR_34:
   684   00FFD2  31                 	db	49	;'1'
   685   00FFD3  2D                 	db	45
   686   00FFD4  54                 	db	84	;'T'
   687   00FFD5  65                 	db	101	;'e'
   688   00FFD6  6D                 	db	109	;'m'
   689   00FFD7  70                 	db	112	;'p'
   690   00FFD8  00                 	db	0
   691   00FFD9                     STR_35:
   692   00FFD9  32                 	db	50	;'2'
   693   00FFDA  2D                 	db	45
   694   00FFDB  44                 	db	68	;'D'
   695   00FFDC  6F                 	db	111	;'o'
   696   00FFDD  6F                 	db	111	;'o'
   697   00FFDE  72                 	db	114	;'r'
   698   00FFDF  00                 	db	0
   699   00FFE0                     STR_25:
   700   00FFE0  39                 	db	57	;'9'
   701   00FFE1  2D                 	db	45
   702   00FFE2  52                 	db	82	;'R'
   703   00FFE3  65                 	db	101	;'e'
   704   00FFE4  74                 	db	116	;'t'
   705   00FFE5  00                 	db	0
   706   00FFE6                     STR_12:
   707   00FFE6  39                 	db	57	;'9'
   708   00FFE7  5F                 	db	95	;'_'
   709   00FFE8  52                 	db	82	;'R'
   710   00FFE9  65                 	db	101	;'e'
   711   00FFEA  74                 	db	116	;'t'
   712   00FFEB  00                 	db	0
   713   00FFEC                     STR_36:
   714   00FFEC  33                 	db	51	;'3'
   715   00FFED  2D                 	db	45
   716   00FFEE  54                 	db	84	;'T'
   717   00FFEF  56                 	db	86	;'V'
   718   00FFF0  00                 	db	0
   719   00FFF1                     STR_32:
   720   00FFF1  44                 	db	68	;'D'
   721   00FFF2  6F                 	db	111	;'o'
   722   00FFF3  6E                 	db	110	;'n'
   723   00FFF4  65                 	db	101	;'e'
   724   00FFF5  00                 	db	0
   725   00FFF6                     STR_13:
   726   00FFF6  20                 	db	32
   727   00FFF7  20                 	db	32
   728   00FFF8  20                 	db	32
   729   00FFF9  20                 	db	32
   730   00FFFA  00                 	db	0
   731   00FFFB                     STR_38:
   732   00FFFB  25                 	db	37
   733   00FFFC  69                 	db	105	;'i'
   734   00FFFD  00                 	db	0
   735   00FFFE  00                 	db	0	; dummy byte at the end
   736   000000                     
   737                           ; #config settings
   738                           
   739                           	psect	cinit
   740   003084                     __pcinit:
   741                           	callstack 0
   742   003084                     start_initialization:
   743                           	callstack 0
   744   003084                     __initialization:
   745                           	callstack 0
   746                           
   747                           ; Initialize objects allocated to BANK0 (79 bytes)
   748                           ; load TBLPTR registers with __pidataBANK0
   749   003084  0E50               	movlw	low __pidataBANK0
   750   003086  6EF6               	movwf	tblptrl,c
   751   003088  0E34               	movlw	high __pidataBANK0
   752   00308A  6EF7               	movwf	tblptrh,c
   753   00308C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   754   00308E  6EF8               	movwf	tblptru,c
   755   003090  EE00  F080         	lfsr	0,__pdataBANK0
   756   003094  EE10 F04F          	lfsr	1,79
   757   003098                     copy_data0:
   758   003098  0009               	tblrd		*+
   759   00309A  CFF5 FFEE          	movff	tablat,postinc0
   760   00309E  50E5               	movf	postdec1,w,c
   761   0030A0  50E1               	movf	fsr1l,w,c
   762   0030A2  E1FA               	bnz	copy_data0
   763                           
   764                           ; Initialize objects allocated to COMRAM (24 bytes)
   765                           ; load TBLPTR registers with __pidataCOMRAM
   766   0030A4  0EA2               	movlw	low __pidataCOMRAM
   767   0030A6  6EF6               	movwf	tblptrl,c
   768   0030A8  0E38               	movlw	high __pidataCOMRAM
   769   0030AA  6EF7               	movwf	tblptrh,c
   770   0030AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   771   0030AE  6EF8               	movwf	tblptru,c
   772   0030B0  EE00  F050         	lfsr	0,__pdataCOMRAM
   773   0030B4  EE10 F018          	lfsr	1,24
   774   0030B8                     copy_data1:
   775   0030B8  0009               	tblrd		*+
   776   0030BA  CFF5 FFEE          	movff	tablat,postinc0
   777   0030BE  50E5               	movf	postdec1,w,c
   778   0030C0  50E1               	movf	fsr1l,w,c
   779   0030C2  E1FA               	bnz	copy_data1
   780                           
   781                           ; Clear objects allocated to BANK1 (32 bytes)
   782   0030C4  EE01  F000         	lfsr	0,__pbssBANK1
   783   0030C8  0E20               	movlw	32
   784   0030CA                     clear_0:
   785   0030CA  6AEE               	clrf	postinc0,c
   786   0030CC  06E8               	decf	wreg,f,c
   787   0030CE  E1FD               	bnz	clear_0
   788                           
   789                           ; Clear objects allocated to BANK0 (49 bytes)
   790   0030D0  EE00  F0CF         	lfsr	0,__pbssBANK0
   791   0030D4  0E31               	movlw	49
   792   0030D6                     clear_1:
   793   0030D6  6AEE               	clrf	postinc0,c
   794   0030D8  06E8               	decf	wreg,f,c
   795   0030DA  E1FD               	bnz	clear_1
   796                           
   797                           ; Clear objects allocated to COMRAM (22 bytes)
   798   0030DC  EE00  F068         	lfsr	0,__pbssCOMRAM
   799   0030E0  0E16               	movlw	22
   800   0030E2                     clear_2:
   801   0030E2  6AEE               	clrf	postinc0,c
   802   0030E4  06E8               	decf	wreg,f,c
   803   0030E6  E1FD               	bnz	clear_2
   804   0030E8                     end_of_initialization:
   805                           	callstack 0
   806   0030E8                     __end_of__initialization:
   807                           	callstack 0
   808   0030E8  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   809   0030EA  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   810   0030EC  0100               	movlb	0
   811   0030EE  EF09  F000         	goto	_main	;jump to C main() function
   812                           
   813                           	psect	bssCOMRAM
   814   000068                     __pbssCOMRAM:
   815                           	callstack 0
   816   000068                     _GLOP_u16Timer3Preload:
   817                           	callstack 0
   818   000068                     	ds	2
   819   00006A                     _PreloadVlaue:
   820                           	callstack 0
   821   00006A                     	ds	2
   822   00006C                     _preload:
   823                           	callstack 0
   824   00006C                     	ds	2
   825   00006E                     CCP_voidCompareSetValue@F2635:
   826                           	callstack 0
   827   00006E                     	ds	2
   828   000070                     CCP_u16CaptureReadValue@F2628:
   829                           	callstack 0
   830   000070                     	ds	2
   831   000072                     _Set_Password:
   832                           	callstack 0
   833   000072                     	ds	2
   834   000074                     _KeyPadNumber:
   835                           	callstack 0
   836   000074                     	ds	2
   837   000076                     _flags:
   838                           	callstack 0
   839   000076                     	ds	1
   840   000077                     _GLOP_u8Timer2Preload:
   841                           	callstack 0
   842   000077                     	ds	1
   843   000078                     _uart_flag:
   844                           	callstack 0
   845   000078                     	ds	1
   846   000079                     _flag_1:
   847                           	callstack 0
   848   000079                     	ds	1
   849   00007A                     _User:
   850                           	callstack 0
   851   00007A                     	ds	1
   852   00007B                     _PASSWORD_STATUS:
   853                           	callstack 0
   854   00007B                     	ds	1
   855   00007C                     _ID_STATUS:
   856                           	callstack 0
   857   00007C                     	ds	1
   858   00007D                     _Counter_Try:
   859                           	callstack 0
   860   00007D                     	ds	1
   861                           
   862                           	psect	dataCOMRAM
   863   000050                     __pdataCOMRAM:
   864                           	callstack 0
   865   000050                     _RB7_flag:
   866                           	callstack 0
   867   000050                     	ds	1
   868   000051                     _RB6_flag:
   869                           	callstack 0
   870   000051                     	ds	1
   871   000052                     _RB5_flag:
   872                           	callstack 0
   873   000052                     	ds	1
   874   000053                     _RB4_flag:
   875                           	callstack 0
   876   000053                     	ds	1
   877   000054                     _ACK_STATUS:
   878                           	callstack 0
   879   000054                     	ds	1
   880   000055                     _LCD_1:
   881                           	callstack 0
   882   000055                     	ds	7
   883   00005C                     _i2c_obj:
   884                           	callstack 0
   885   00005C                     	ds	5
   886   000061                     _Data:
   887                           	callstack 0
   888   000061                     	ds	4
   889   000065                     _LED_LOCK:
   890                           	callstack 0
   891   000065                     	ds	3
   892                           
   893                           	psect	bssBANK0
   894   0000CF                     __pbssBANK0:
   895                           	callstack 0
   896   0000CF                     	ds	10
   897   0000D9                     	ds	6
   898   0000DF                     	ds	6
   899   0000E5                     	ds	6
   900   0000EB                     _width:
   901                           	callstack 0
   902   0000EB                     	ds	2
   903   0000ED                     _prec:
   904                           	callstack 0
   905   0000ED                     	ds	2
   906   0000EF                     _Timer3InterruptHandeler:
   907                           	callstack 0
   908   0000EF                     	ds	2
   909   0000F1                     _Timer2InterruptHandeler:
   910                           	callstack 0
   911   0000F1                     	ds	2
   912   0000F3                     _Timer1InterruptHandeler:
   913                           	callstack 0
   914   0000F3                     	ds	2
   915   0000F5                     _TIMER0_InterruptHandeler:
   916                           	callstack 0
   917   0000F5                     	ds	2
   918   0000F7                     _SPI_INTERRUPT_HANDELER:
   919                           	callstack 0
   920   0000F7                     	ds	2
   921   0000F9                     _CCP2_InterruptHandeler:
   922                           	callstack 0
   923   0000F9                     	ds	2
   924   0000FB                     _CCP1_InterruptHandeler:
   925                           	callstack 0
   926   0000FB                     	ds	2
   927   0000FD                     _t2:
   928                           	callstack 0
   929   0000FD                     	ds	3
   930                           
   931                           	psect	dataBANK0
   932   000080                     __pdataBANK0:
   933                           	callstack 0
   934   000080                     _Au8elements:
   935                           	callstack 0
   936   000080                     	ds	16
   937   000090                     _port_registers:
   938                           	callstack 0
   939   000090                     	ds	10
   940   00009A                     _lat_registers:
   941                           	callstack 0
   942   00009A                     	ds	10
   943   0000A4                     _tris_registers:
   944                           	callstack 0
   945   0000A4                     	ds	10
   946   0000AE                     _KeyPad_1:
   947                           	callstack 0
   948   0000AE                     	ds	16
   949   0000BE                     _DC_MotorCCP:
   950                           	callstack 0
   951   0000BE                     	ds	7
   952   0000C5                     _uart_TX:
   953                           	callstack 0
   954   0000C5                     	ds	6
   955   0000CB                     _ADC:
   956                           	callstack 0
   957   0000CB                     	ds	4
   958                           
   959                           	psect	bssBANK1
   960   000100                     __pbssBANK1:
   961                           	callstack 0
   962   000100                     _dbuf:
   963                           	callstack 0
   964   000100                     	ds	32
   965                           
   966                           	psect	cstackCOMRAM
   967   000001                     __pcstackCOMRAM:
   968                           	callstack 0
   969   000001                     ?_ADC_u16GetConversionResult:
   970                           	callstack 0
   971   000001                     ?___wmul:
   972                           	callstack 0
   973   000001                     ?___awdiv:
   974                           	callstack 0
   975   000001                     ?___awmod:
   976                           	callstack 0
   977   000001                     ?___xxtofl:
   978                           	callstack 0
   979   000001                     ADC_voidStatrtConversion@Copy_stADC:
   980                           	callstack 0
   981   000001                     ADC_u16GetConversionResult@Copy_stADC:
   982                           	callstack 0
   983   000001                     ADC_ConversionResultConfig@Copy_stADC:
   984                           	callstack 0
   985   000001                     ADC_VoltageRefConfig@Copy_stADC:
   986                           	callstack 0
   987   000001                     GPIO_VoidSetPinDirection@Copy_u8Pin:
   988                           	callstack 0
   989   000001                     GPIO_u8ReadPin@Copy_u8Pin:
   990                           	callstack 0
   991   000001                     GPIO_VoidSetPinMode@Copy_u8Pin:
   992                           	callstack 0
   993   000001                     I2C_voidSendStartCond@Copy_stI2C:
   994                           	callstack 0
   995   000001                     I2C_voidSendRebeatStartCond@Copy_stI2C:
   996                           	callstack 0
   997   000001                     I2C_voidSendStopCond@Copy_stI2C:
   998                           	callstack 0
   999   000001                     I2C_u8WriteByteBlocking@Copy_stI2C:
  1000                           	callstack 0
  1001   000001                     I2C_u8ReadByteBlocking@Copy_stI2C:
  1002                           	callstack 0
  1003   000001                     I2C_SlaveMode_CFG@Copy_stI2C:
  1004                           	callstack 0
  1005   000001                     Tx_config@Copy_stUsart:
  1006                           	callstack 0
  1007   000001                     rx_config@Copy_stUsart:
  1008                           	callstack 0
  1009   000001                     memset@dest:
  1010                           	callstack 0
  1011   000001                     EEPROM_voidWrite@Copy_u16Address:
  1012                           	callstack 0
  1013   000001                     EEPROM_u8Read@Copy_u16Address:
  1014                           	callstack 0
  1015   000001                     ___wmul@multiplier:
  1016                           	callstack 0
  1017   000001                     ___awdiv@dividend:
  1018                           	callstack 0
  1019   000001                     ___awmod@dividend:
  1020                           	callstack 0
  1021   000001                     fputc@c:
  1022                           	callstack 0
  1023   000001                     ___xxtofl@val:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x0
  1027   000001                     	ds	1
  1028   000002                     ??_GPIO_u8ReadPin:
  1029   000002                     ??_I2C_SlaveMode_CFG:
  1030   000002                     ??_Tx_config:
  1031   000002                     ??_rx_config:
  1032   000002                     GPIO_VoidSetPinDirection@Copy_u8Direction:
  1033                           	callstack 0
  1034   000002                     GPIO_VoidSetPinMode@Copy_u8Mode:
  1035                           	callstack 0
  1036   000002                     I2C_u8WriteByteBlocking@Copy_u8Data:
  1037                           	callstack 0
  1038   000002                     I2C_u8ReadByteBlocking@Copy_u8Ack:
  1039                           	callstack 0
  1040   000002                     memset@c:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x1
  1044   000002                     	ds	1
  1045   000003                     ??_GPIO_VoidSetPinDirection:
  1046   000003                     ??_GPIO_VoidSetPinMode:
  1047   000003                     ??_ADC_u16GetConversionResult:
  1048   000003                     EEPROM_voidWrite@Copy_u8Data:
  1049                           	callstack 0
  1050   000003                     I2C_u8WriteByteBlocking@Local_u8Return:
  1051                           	callstack 0
  1052   000003                     I2C_u8ReadByteBlocking@Local_u8Return:
  1053                           	callstack 0
  1054   000003                     fputc@fp:
  1055                           	callstack 0
  1056   000003                     ___wmul@multiplicand:
  1057                           	callstack 0
  1058   000003                     ___awdiv@divisor:
  1059                           	callstack 0
  1060   000003                     ___awmod@divisor:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x2
  1064   000003                     	ds	1
  1065   000004                     ??_fputc:
  1066   000004                     I2C_SendStuct@MyData:
  1067                           	callstack 0
  1068   000004                     EEPROM_voidWrite@Local_u8GlobalInterruptStatus:
  1069                           	callstack 0
  1070   000004                     I2C_u8ReadRegByte@Copy_stI2C:
  1071                           	callstack 0
  1072   000004                     memset@n:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x3
  1076   000004                     	ds	1
  1077   000005                     ??_I2C_SendStuct:
  1078   000005                     ??___xxtofl:
  1079   000005                     I2C_u8ReadRegByte@Copy_u8I2C_Address:
  1080                           	callstack 0
  1081   000005                     ___awdiv@counter:
  1082                           	callstack 0
  1083   000005                     ___awmod@counter:
  1084                           	callstack 0
  1085   000005                     ___wmul@product:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x4
  1089   000005                     	ds	1
  1090   000006                     GPIO_u8ReadPin@Copy_u8Port:
  1091                           	callstack 0
  1092   000006                     I2C_u8ReadRegByte@Copy_u8Byte_Address:
  1093                           	callstack 0
  1094   000006                     ___awdiv@sign:
  1095                           	callstack 0
  1096   000006                     ___awmod@sign:
  1097                           	callstack 0
  1098   000006                     memset@p:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x5
  1102   000006                     	ds	1
  1103   000007                     ?_abs:
  1104                           	callstack 0
  1105   000007                     I2C_SendStuct@ptr:
  1106                           	callstack 0
  1107   000007                     GPIO_u8ReadPin@Localu8Returned:
  1108                           	callstack 0
  1109   000007                     I2C_u8ReadRegByte@returnedData:
  1110                           	callstack 0
  1111   000007                     ___awdiv@quotient:
  1112                           	callstack 0
  1113   000007                     abs@a:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x6
  1117   000007                     	ds	1
  1118   000008                     I2C_SendStuct@SizeOfStruct:
  1119                           	callstack 0
  1120   000008                     GPIO_VoidSetPinDirection@Copy_u8Port:
  1121                           	callstack 0
  1122   000008                     GPIO_VoidSetPinMode@Copy_u8Port:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x7
  1126   000008                     	ds	1
  1127   000009                     ??_ADC_ChannelConfig:
  1128   000009                     ??_abs:
  1129   000009                     I2C_SendStuct@i:
  1130                           	callstack 0
  1131   000009                     KEYPAD_voidKeyPadInt@Copy_stKeyPad:
  1132                           	callstack 0
  1133   000009                     KEYPAD_u8KeyPadPressed@Copy_stKeyPad:
  1134                           	callstack 0
  1135   000009                     LCD_voidSend4bit@Copy_stLCD4Bit:
  1136                           	callstack 0
  1137   000009                     LCD_voidSendEnable_4Bit@Copy_stLCD4Bit:
  1138                           	callstack 0
  1139   000009                     LED_voidLedInt@Copy_stLed:
  1140                           	callstack 0
  1141   000009                     LED_voidLedOn@Copy_stLed:
  1142                           	callstack 0
  1143   000009                     LED_voidLedOff@Copy_stLed:
  1144                           	callstack 0
  1145   000009                     ___xxtofl@sign:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x8
  1149   000009                     	ds	1
  1150   00000A                     ??_LED_voidLedOn:
  1151   00000A                     ??_LED_voidLedOff:
  1152   00000A                     ??_KEYPAD_u8KeyPadPressed:
  1153   00000A                     ??_LED_voidLedInt:
  1154   00000A                     KEYPAD_voidKeyPadInt@i:
  1155                           	callstack 0
  1156   00000A                     LCD_voidSend4bit@Copy_u8Command_Data:
  1157                           	callstack 0
  1158   00000A                     ___xxtofl@exp:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x9
  1162   00000A                     	ds	1
  1163   00000B                     KEYPAD_voidKeyPadInt@i_958:
  1164                           	callstack 0
  1165   00000B                     KEYPAD_u8KeyPadPressed@Local_u8KeypadPressed:
  1166                           	callstack 0
  1167   00000B                     LCD4Bit_voidSendCommand@Copy_stLCD4Bit:
  1168                           	callstack 0
  1169   00000B                     LCD4Bit_voidSendChar@Copy_stLCD4Bit:
  1170                           	callstack 0
  1171   00000B                     ADC_ChannelConfig@channel:
  1172                           	callstack 0
  1173   00000B                     vfpfcnvrt@fp:
  1174                           	callstack 0
  1175   00000B                     ___xxtofl@arg:
  1176                           	callstack 0
  1177                           
  1178                           ; 4 bytes @ 0xA
  1179   00000B                     	ds	1
  1180   00000C                     ?_ADC_u16GetConversion:
  1181                           	callstack 0
  1182   00000C                     KEYPAD_u8KeyPadPressed@Local_u8GPIOReturned:
  1183                           	callstack 0
  1184   00000C                     LCD4Bit_voidSendCommand@Copy_u8Command:
  1185                           	callstack 0
  1186   00000C                     LCD4Bit_voidSendChar@Copy_u8Char:
  1187                           	callstack 0
  1188   00000C                     ADC_voidADCInit@Copy_stADC:
  1189                           	callstack 0
  1190   00000C                     ADC_u16GetConversion@Copy_stADC:
  1191                           	callstack 0
  1192   00000C                     vfpfcnvrt@fmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 1 bytes @ 0xB
  1196   00000C                     	ds	1
  1197   00000D                     ??_ADC_voidADCInit:
  1198   00000D                     KEYPAD_u8KeyPadPressed@q:
  1199                           	callstack 0
  1200   00000D                     LCD4Bit_voidLCD_Init@Copy_stLCD4Bit:
  1201                           	callstack 0
  1202   00000D                     LCD4Bit_voidSendString@Copy_stLCD4Bit:
  1203                           	callstack 0
  1204   00000D                     LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit:
  1205                           	callstack 0
  1206   00000D                     ADC_u16GetConversion@channel:
  1207                           	callstack 0
  1208   00000D                     vfpfcnvrt@ap:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0xC
  1212   00000D                     	ds	1
  1213   00000E                     ??_LCD4Bit_voidLCD_Init:
  1214   00000E                     ??_vfpfcnvrt:
  1215   00000E                     KEYPAD_u8KeyPadPressed@i:
  1216                           	callstack 0
  1217   00000E                     LCD_voidSetCursorPos_4Bit@Copy_u8Row:
  1218                           	callstack 0
  1219   00000E                     LCD4Bit_voidSendString@Copy_Pu8Str:
  1220                           	callstack 0
  1221   00000E                     ADC_u16GetConversion@result:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0xD
  1225   00000E                     	ds	1
  1226   00000F                     ?___fldiv:
  1227                           	callstack 0
  1228   00000F                     KEYPAD_u8KeyPadPressed@j:
  1229                           	callstack 0
  1230   00000F                     LCD_voidSetCursorPos_4Bit@Copy_u8Column:
  1231                           	callstack 0
  1232   00000F                     ___fldiv@b:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0xE
  1236   00000F                     	ds	1
  1237   000010                     ??_LCD_voidSetCursorPos_4Bit:
  1238   000010                     APP_CheckLights@MyData:
  1239                           	callstack 0
  1240   000010                     vfpfcnvrt@done:
  1241                           	callstack 0
  1242                           
  1243                           ; 1 bytes @ 0xF
  1244   000010                     	ds	1
  1245   000011                     APP_CheckLights@Adc_result:
  1246                           	callstack 0
  1247   000011                     vfpfcnvrt@cp:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x10
  1251   000011                     	ds	1
  1252   000012                     LCD4Bit_voidSendChar_Pos@Copy_stLCD4Bit:
  1253                           	callstack 0
  1254   000012                     LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x11
  1258   000012                     	ds	1
  1259   000013                     LCD4Bit_voidSendChar_Pos@Copy_u8Row:
  1260                           	callstack 0
  1261   000013                     LCD4Bit_voidSendString_Pos@Copy_u8Row:
  1262                           	callstack 0
  1263   000013                     ___fldiv@a:
  1264                           	callstack 0
  1265   000013                     vfpfcnvrt@convarg:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x12
  1269   000013                     	ds	1
  1270   000014                     LCD4Bit_voidSendChar_Pos@Copy_u8Column:
  1271                           	callstack 0
  1272   000014                     LCD4Bit_voidSendString_Pos@Copy_u8Column:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x13
  1276   000014                     	ds	1
  1277   000015                     LCD4Bit_voidSendChar_Pos@Copy_u8Char:
  1278                           	callstack 0
  1279   000015                     LCD4Bit_voidSendString_Pos@Copy_Pu8Str:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x14
  1283   000015                     	ds	1
  1284   000016                     
  1285                           ; 1 bytes @ 0x15
  1286   000016                     	ds	1
  1287   000017                     ??___fldiv:
  1288   000017                     vfpfcnvrt@c:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x16
  1292   000017                     	ds	1
  1293   000018                     ?_vfprintf:
  1294                           	callstack 0
  1295   000018                     vfprintf@fp:
  1296                           	callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x17
  1299   000018                     	ds	1
  1300   000019                     vfprintf@fmt:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x18
  1304   000019                     	ds	2
  1305   00001B                     vfprintf@ap:
  1306                           	callstack 0
  1307   00001B                     ___fldiv@rem:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x1A
  1311   00001B                     	ds	1
  1312   00001C                     vfprintf@cfmt:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x1B
  1316   00001C                     	ds	2
  1317   00001E                     ?_sprintf:
  1318                           	callstack 0
  1319   00001E                     sprintf@s:
  1320                           	callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x1D
  1323   00001E                     	ds	1
  1324   00001F                     ___fldiv@sign:
  1325                           	callstack 0
  1326   00001F                     sprintf@fmt:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x1E
  1330   00001F                     	ds	1
  1331   000020                     ___fldiv@new_exp:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x1F
  1335   000020                     	ds	2
  1336   000022                     ___fldiv@grs:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x21
  1340   000022                     	ds	1
  1341   000023                     sprintf@ap:
  1342                           	callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x22
  1345   000023                     	ds	1
  1346   000024                     sprintf@f:
  1347                           	callstack 0
  1348                           
  1349                           ; 12 bytes @ 0x23
  1350   000024                     	ds	2
  1351   000026                     ___fldiv@bexp:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x25
  1355   000026                     	ds	1
  1356   000027                     ___fldiv@aexp:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x26
  1360   000027                     	ds	1
  1361   000028                     ?___fladd:
  1362                           	callstack 0
  1363   000028                     ___fladd@b:
  1364                           	callstack 0
  1365                           
  1366                           ; 4 bytes @ 0x27
  1367   000028                     	ds	4
  1368   00002C                     ___fladd@a:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x2B
  1372   00002C                     	ds	4
  1373   000030                     ??___fladd:
  1374   000030                     LCD4Bit_voidSendNumber@Copy_stLCD4Bit:
  1375                           	callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x2F
  1378   000030                     	ds	1
  1379   000031                     LCD4Bit_voidSendNumber@Copy_u16Number:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x30
  1383   000031                     	ds	2
  1384   000033                     LCD4Bit_voidSendNumber@Copy_u8Row:
  1385                           	callstack 0
  1386                           
  1387                           ; 1 bytes @ 0x32
  1388   000033                     	ds	1
  1389   000034                     LCD4Bit_voidSendNumber@Copy_u8Column:
  1390                           	callstack 0
  1391   000034                     ___fladd@signs:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x33
  1395   000034                     	ds	1
  1396   000035                     ___fladd@aexp:
  1397                           	callstack 0
  1398   000035                     LCD4Bit_voidSendNumber@Number2:
  1399                           	callstack 0
  1400                           
  1401                           ; 6 bytes @ 0x34
  1402   000035                     	ds	1
  1403   000036                     ___fladd@bexp:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x35
  1407   000036                     	ds	1
  1408   000037                     ___fladd@grs:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x36
  1412   000037                     	ds	1
  1413   000038                     ?___fltol:
  1414                           	callstack 0
  1415   000038                     ___fltol@f1:
  1416                           	callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x37
  1419   000038                     	ds	3
  1420   00003B                     LCD4Bit_voidSendNumber@Number:
  1421                           	callstack 0
  1422                           
  1423                           ; 6 bytes @ 0x3A
  1424   00003B                     	ds	1
  1425   00003C                     ??___fltol:
  1426                           
  1427                           ; 1 bytes @ 0x3B
  1428   00003C                     	ds	4
  1429   000040                     ___fltol@sign1:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x3F
  1433   000040                     	ds	1
  1434   000041                     LCD4Bit_voidSendNumber@i:
  1435                           	callstack 0
  1436   000041                     ___fltol@exp1:
  1437                           	callstack 0
  1438                           
  1439                           ; 1 bytes @ 0x40
  1440   000041                     	ds	1
  1441   000042                     ?_APP_Get_Number:
  1442                           	callstack 0
  1443   000042                     APP_Get_Number@y:
  1444                           	callstack 0
  1445   000042                     I2C_MasterMode_CFG@Copy_stI2C:
  1446                           	callstack 0
  1447   000042                     BaudRateConfig@Copy_stUsart:
  1448                           	callstack 0
  1449                           
  1450                           ; 1 bytes @ 0x41
  1451   000042                     	ds	1
  1452   000043                     ??_I2C_MasterMode_CFG:
  1453   000043                     ??_BaudRateConfig:
  1454                           
  1455                           ; 1 bytes @ 0x42
  1456   000043                     	ds	1
  1457   000044                     ??_APP_Get_Number:
  1458                           
  1459                           ; 1 bytes @ 0x43
  1460   000044                     	ds	1
  1461   000045                     I2C_voidI2CInit@Copy_stI2C:
  1462                           	callstack 0
  1463   000045                     BaudRateConfig@Local_f32BaudRateTemp:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x44
  1467   000045                     	ds	1
  1468   000046                     ??_I2C_voidI2CInit:
  1469   000046                     APP_Get_Number@x:
  1470                           	callstack 0
  1471                           
  1472                           ; 1 bytes @ 0x45
  1473   000046                     	ds	1
  1474   000047                     APP_Get_Number@counter_KEY:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0x46
  1478   000047                     	ds	1
  1479   000048                     APP_Get_Number@number:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x47
  1483   000048                     	ds	1
  1484   000049                     _BaudRateConfig$4564:
  1485                           	callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x48
  1488   000049                     	ds	1
  1489   00004A                     APP_Get_Number@pressed:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x49
  1493   00004A                     	ds	1
  1494   00004B                     ??_App_SetTemperature:
  1495   00004B                     LCD_ChoisePrint@User_choise:
  1496                           	callstack 0
  1497                           
  1498                           ; 1 bytes @ 0x4A
  1499   00004B                     	ds	2
  1500   00004D                     App_SetTemperature@RequiredTemp:
  1501                           	callstack 0
  1502   00004D                     USART_voidAsynchUsartInit@Copy_stUsart:
  1503                           	callstack 0
  1504                           
  1505                           ; 1 bytes @ 0x4C
  1506   00004D                     	ds	1
  1507   00004E                     ??_main:
  1508                           
  1509                           ; 1 bytes @ 0x4D
  1510   00004E                     	ds	2
  1511                           
  1512 ;;
  1513 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1514 ;;
  1515 ;; *************** function _main *****************
  1516 ;; Defined at:
  1517 ;;		line 30 in file "main.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;		None
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2   72[None  ] int 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        2 bytes
  1536 ;; Hardware stack levels required when called: 9
  1537 ;; This function calls:
  1538 ;;		_APP_CheckLights
  1539 ;;		_APP_Get_Number
  1540 ;;		_App_SetTemperature
  1541 ;;		_Application_Init
  1542 ;;		_EEPROM_u8Read
  1543 ;;		_EEPROM_voidWrite
  1544 ;;		_I2C_SendStuct
  1545 ;;		_I2C_u8ReadRegByte
  1546 ;;		_KEYPAD_u8KeyPadPressed
  1547 ;;		_LCD4Bit_voidSendCommand
  1548 ;;		_LCD4Bit_voidSendNumber
  1549 ;;		_LCD4Bit_voidSendString_Pos
  1550 ;;		_LCD_ChoisePrint
  1551 ;;		_LCD_voidSetCursorPos_4Bit
  1552 ;;		_LED_voidLedOff
  1553 ;;		_LED_voidLedOn
  1554 ;; This function is called by:
  1555 ;;		Startup code after reset
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text0
  1560   000012                     __ptext0:
  1561                           	callstack 0
  1562   000012                     _main:
  1563                           	callstack 22
  1564   000012                     
  1565                           ;main.c: 32:     Application_Init();
  1566   000012  EC5E  F01B         	call	_Application_Init	;wreg free
  1567                           
  1568                           ;main.c: 34:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1569   000016  0E55               	movlw	low _LCD_1
  1570   000018  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1571   00001A  0E01               	movlw	1
  1572   00001C  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1573   00001E  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1574                           
  1575                           ;main.c: 35:     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 3);
  1576   000022  0E55               	movlw	low _LCD_1
  1577   000024  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1578   000026  0E01               	movlw	1
  1579   000028  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1580   00002A  0E03               	movlw	3
  1581   00002C  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1582   00002E  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1583   000032                     
  1584                           ;main.c: 36:     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 3, "Welcome to Smart");
  1585   000032  0E55               	movlw	low _LCD_1
  1586   000034  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1587   000036  0E01               	movlw	1
  1588   000038  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1589   00003A  0E03               	movlw	3
  1590   00003C  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1591   00003E  0EF2               	movlw	low STR_1
  1592   000040  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1593   000042  0EFE               	movlw	high STR_1
  1594   000044  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1595   000046  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1596   00004A                     
  1597                           ;main.c: 37:     LCD_voidSetCursorPos_4Bit(&LCD_1, 2, 3);
  1598   00004A  0E55               	movlw	low _LCD_1
  1599   00004C  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1600   00004E  0E02               	movlw	2
  1601   000050  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1602   000052  0E03               	movlw	3
  1603   000054  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1604   000056  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1605                           
  1606                           ;main.c: 38:     LCD4Bit_voidSendString_Pos(&LCD_1, 2, 3, "Home System");
  1607   00005A  0E55               	movlw	low _LCD_1
  1608   00005C  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1609   00005E  0E02               	movlw	2
  1610   000060  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1611   000062  0E03               	movlw	3
  1612   000064  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1613   000066  0E67               	movlw	low STR_2
  1614   000068  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1615   00006A  0EFF               	movlw	high STR_2
  1616   00006C  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1617   00006E  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1618   000072                     
  1619                           ;main.c: 39:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1620   000072  0E0B               	movlw	11
  1621   000074  6E4F               	movwf	(??_main+1)^0,c
  1622   000076  0E26               	movlw	38
  1623   000078  6E4E               	movwf	??_main^0,c
  1624   00007A  0E5E               	movlw	94
  1625   00007C                     u6287:
  1626   00007C  2EE8               	decfsz	wreg,f,c
  1627   00007E  D7FE               	bra	u6287
  1628   000080  2E4E               	decfsz	??_main^0,f,c
  1629   000082  D7FC               	bra	u6287
  1630   000084  2E4F               	decfsz	(??_main+1)^0,f,c
  1631   000086  D7FA               	bra	u6287
  1632   000088                     
  1633                           ;main.c: 40:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1634   000088  0E55               	movlw	low _LCD_1
  1635   00008A  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1636   00008C  0E01               	movlw	1
  1637   00008E  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1638   000090  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1639   000094                     
  1640                           ;main.c: 54:     if (EEPROM_u8Read(0x0100) == 0XFF)
  1641   000094  0E01               	movlw	1
  1642   000096  6E02               	movwf	(EEPROM_u8Read@Copy_u16Address+1)^0,c
  1643   000098  0E00               	movlw	0
  1644   00009A  6E01               	movwf	EEPROM_u8Read@Copy_u16Address^0,c
  1645   00009C  EC37  F01C         	call	_EEPROM_u8Read	;wreg free
  1646   0000A0  0AFF               	xorlw	255
  1647   0000A2  A4D8               	btfss	status,2,c
  1648   0000A4  EF56  F000         	goto	u5311
  1649   0000A8  EF58  F000         	goto	u5310
  1650   0000AC                     u5311:
  1651   0000AC  EFC9  F000         	goto	l6064
  1652   0000B0                     u5310:
  1653   0000B0                     
  1654                           ;main.c: 55:     {;main.c: 57:         LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  1655   0000B0  0E55               	movlw	low _LCD_1
  1656   0000B2  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1657   0000B4  0E01               	movlw	1
  1658   0000B6  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1659   0000B8  0E01               	movlw	1
  1660   0000BA  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1661   0000BC  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1662   0000C0                     
  1663                           ;main.c: 58:         LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "Login for first time");
  1664   0000C0  0E55               	movlw	low _LCD_1
  1665   0000C2  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1666   0000C4  0E01               	movlw	1
  1667   0000C6  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1668   0000C8  0E01               	movlw	1
  1669   0000CA  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1670   0000CC  0E87               	movlw	low STR_3
  1671   0000CE  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1672   0000D0  0EFE               	movlw	high STR_3
  1673   0000D2  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1674   0000D4  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1675   0000D8                     
  1676                           ;main.c: 59:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1677   0000D8  0E0B               	movlw	11
  1678   0000DA  6E4F               	movwf	(??_main+1)^0,c
  1679   0000DC  0E26               	movlw	38
  1680   0000DE  6E4E               	movwf	??_main^0,c
  1681   0000E0  0E5E               	movlw	94
  1682   0000E2                     u6297:
  1683   0000E2  2EE8               	decfsz	wreg,f,c
  1684   0000E4  D7FE               	bra	u6297
  1685   0000E6  2E4E               	decfsz	??_main^0,f,c
  1686   0000E8  D7FC               	bra	u6297
  1687   0000EA  2E4F               	decfsz	(??_main+1)^0,f,c
  1688   0000EC  D7FA               	bra	u6297
  1689   0000EE                     
  1690                           ;main.c: 60:         LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1691   0000EE  0E55               	movlw	low _LCD_1
  1692   0000F0  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1693   0000F2  0E01               	movlw	1
  1694   0000F4  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1695   0000F6  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1696   0000FA                     
  1697                           ;main.c: 61:         LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  1698   0000FA  0E55               	movlw	low _LCD_1
  1699   0000FC  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1700   0000FE  0E01               	movlw	1
  1701   000100  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1702   000102  0E01               	movlw	1
  1703   000104  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1704   000106  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1705   00010A                     
  1706                           ;main.c: 62:         LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "Set password");
  1707   00010A  0E55               	movlw	low _LCD_1
  1708   00010C  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1709   00010E  0E01               	movlw	1
  1710   000110  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1711   000112  0E01               	movlw	1
  1712   000114  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1713   000116  0E41               	movlw	low STR_4
  1714   000118  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1715   00011A  0EFF               	movlw	high STR_4
  1716   00011C  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1717   00011E  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1718   000122                     
  1719                           ;main.c: 64:         KeyPadNumber = APP_Get_Number(2, 1);
  1720   000122  0E01               	movlw	1
  1721   000124  6E42               	movwf	APP_Get_Number@y^0,c
  1722   000126  0E02               	movlw	2
  1723   000128  ECFA  F013         	call	_APP_Get_Number
  1724   00012C  C042  F074         	movff	?_APP_Get_Number,_KeyPadNumber
  1725   000130  C043  F075         	movff	?_APP_Get_Number+1,_KeyPadNumber+1
  1726   000134                     
  1727                           ;main.c: 66:         Set_Password = KeyPadNumber;
  1728   000134  C074  F072         	movff	_KeyPadNumber,_Set_Password
  1729   000138  C075  F073         	movff	_KeyPadNumber+1,_Set_Password+1
  1730   00013C                     
  1731                           ;main.c: 67:         EEPROM_voidWrite(0x0200, Set_Password >> 8);
  1732   00013C  0E02               	movlw	2
  1733   00013E  6E02               	movwf	(EEPROM_voidWrite@Copy_u16Address+1)^0,c
  1734   000140  0E00               	movlw	0
  1735   000142  6E01               	movwf	EEPROM_voidWrite@Copy_u16Address^0,c
  1736   000144  5073               	movf	(_Set_Password+1)^0,w,c
  1737   000146  6E03               	movwf	EEPROM_voidWrite@Copy_u8Data^0,c
  1738   000148  ECC3  F01A         	call	_EEPROM_voidWrite	;wreg free
  1739   00014C                     
  1740                           ;main.c: 68:         EEPROM_voidWrite(0x0201, (u8) Set_Password);
  1741   00014C  0E02               	movlw	2
  1742   00014E  6E02               	movwf	(EEPROM_voidWrite@Copy_u16Address+1)^0,c
  1743   000150  0E01               	movlw	1
  1744   000152  6E01               	movwf	EEPROM_voidWrite@Copy_u16Address^0,c
  1745   000154  C072  F003         	movff	_Set_Password,EEPROM_voidWrite@Copy_u8Data
  1746   000158  ECC3  F01A         	call	_EEPROM_voidWrite	;wreg free
  1747   00015C                     
  1748                           ;main.c: 69:         EEPROM_voidWrite(0x0100, 0x00);
  1749   00015C  0E01               	movlw	1
  1750   00015E  6E02               	movwf	(EEPROM_voidWrite@Copy_u16Address+1)^0,c
  1751   000160  0E00               	movlw	0
  1752   000162  6E01               	movwf	EEPROM_voidWrite@Copy_u16Address^0,c
  1753   000164  0E00               	movlw	0
  1754   000166  6E03               	movwf	EEPROM_voidWrite@Copy_u8Data^0,c
  1755   000168  ECC3  F01A         	call	_EEPROM_voidWrite	;wreg free
  1756   00016C                     
  1757                           ;main.c: 70:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1758   00016C  0E0B               	movlw	11
  1759   00016E  6E4F               	movwf	(??_main+1)^0,c
  1760   000170  0E26               	movlw	38
  1761   000172  6E4E               	movwf	??_main^0,c
  1762   000174  0E5E               	movlw	94
  1763   000176                     u6307:
  1764   000176  2EE8               	decfsz	wreg,f,c
  1765   000178  D7FE               	bra	u6307
  1766   00017A  2E4E               	decfsz	??_main^0,f,c
  1767   00017C  D7FC               	bra	u6307
  1768   00017E  2E4F               	decfsz	(??_main+1)^0,f,c
  1769   000180  D7FA               	bra	u6307
  1770   000182                     
  1771                           ;main.c: 71:         LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1772   000182  0E55               	movlw	low _LCD_1
  1773   000184  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1774   000186  0E01               	movlw	1
  1775   000188  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1776   00018A  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1777                           
  1778                           ;main.c: 72:     } else if (EEPROM_u8Read(0x0100) == 0X00) {
  1779   00018E  EFEA  F000         	goto	l6068
  1780   000192                     l6064:
  1781   000192  0E01               	movlw	1
  1782   000194  6E02               	movwf	(EEPROM_u8Read@Copy_u16Address+1)^0,c
  1783   000196  0E00               	movlw	0
  1784   000198  6E01               	movwf	EEPROM_u8Read@Copy_u16Address^0,c
  1785   00019A  EC37  F01C         	call	_EEPROM_u8Read	;wreg free
  1786   00019E  0900               	iorlw	0
  1787   0001A0  A4D8               	btfss	status,2,c
  1788   0001A2  EFD5  F000         	goto	u5321
  1789   0001A6  EFD7  F000         	goto	u5320
  1790   0001AA                     u5321:
  1791   0001AA  EFEA  F000         	goto	l6068
  1792   0001AE                     u5320:
  1793   0001AE                     
  1794                           ;main.c: 73:         Set_Password = EEPROM_u8Read(0x0200) * 256;
  1795   0001AE  0E02               	movlw	2
  1796   0001B0  6E02               	movwf	(EEPROM_u8Read@Copy_u16Address+1)^0,c
  1797   0001B2  0E00               	movlw	0
  1798   0001B4  6E01               	movwf	EEPROM_u8Read@Copy_u16Address^0,c
  1799   0001B6  EC37  F01C         	call	_EEPROM_u8Read	;wreg free
  1800   0001BA  6E73               	movwf	(_Set_Password+1)^0,c
  1801   0001BC  6A72               	clrf	_Set_Password^0,c
  1802                           
  1803                           ;main.c: 74:         Set_Password += EEPROM_u8Read(0x0201);
  1804   0001BE  0E02               	movlw	2
  1805   0001C0  6E02               	movwf	(EEPROM_u8Read@Copy_u16Address+1)^0,c
  1806   0001C2  0E01               	movlw	1
  1807   0001C4  6E01               	movwf	EEPROM_u8Read@Copy_u16Address^0,c
  1808   0001C6  EC37  F01C         	call	_EEPROM_u8Read	;wreg free
  1809   0001CA  6E4E               	movwf	??_main^0,c
  1810   0001CC  504E               	movf	??_main^0,w,c
  1811   0001CE  2672               	addwf	_Set_Password^0,f,c
  1812   0001D0  0E00               	movlw	0
  1813   0001D2  2273               	addwfc	(_Set_Password+1)^0,f,c
  1814   0001D4                     l6068:
  1815                           
  1816                           ;main.c: 77:         Counter_Try = 0;
  1817   0001D4  0E00               	movlw	0
  1818   0001D6  6E7D               	movwf	_Counter_Try^0,c
  1819   0001D8                     l6070:
  1820                           
  1821                           ;main.c: 79:             LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  1822   0001D8  0E55               	movlw	low _LCD_1
  1823   0001DA  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1824   0001DC  0E01               	movlw	1
  1825   0001DE  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1826   0001E0  0E01               	movlw	1
  1827   0001E2  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1828   0001E4  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1829   0001E8                     
  1830                           ;main.c: 80:             LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "Enter password : ");
  1831   0001E8  0E55               	movlw	low _LCD_1
  1832   0001EA  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1833   0001EC  0E01               	movlw	1
  1834   0001EE  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1835   0001F0  0E01               	movlw	1
  1836   0001F2  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1837   0001F4  0E9C               	movlw	low STR_5
  1838   0001F6  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1839   0001F8  0EFE               	movlw	high STR_5
  1840   0001FA  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1841   0001FC  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1842   000200                     
  1843                           ;main.c: 81:             KeyPadNumber = APP_Get_Number(2, 1);
  1844   000200  0E01               	movlw	1
  1845   000202  6E42               	movwf	APP_Get_Number@y^0,c
  1846   000204  0E02               	movlw	2
  1847   000206  ECFA  F013         	call	_APP_Get_Number
  1848   00020A  C042  F074         	movff	?_APP_Get_Number,_KeyPadNumber
  1849   00020E  C043  F075         	movff	?_APP_Get_Number+1,_KeyPadNumber+1
  1850   000212                     
  1851                           ;main.c: 82:             if (Set_Password == KeyPadNumber)
  1852   000212  5074               	movf	_KeyPadNumber^0,w,c
  1853   000214  1872               	xorwf	_Set_Password^0,w,c
  1854   000216  E107               	bnz	u5331
  1855   000218  5075               	movf	(_KeyPadNumber+1)^0,w,c
  1856   00021A  1873               	xorwf	(_Set_Password+1)^0,w,c
  1857   00021C  A4D8               	btfss	status,2,c
  1858   00021E  EF13  F001         	goto	u5331
  1859   000222  EF15  F001         	goto	u5330
  1860   000226                     u5331:
  1861   000226  EF3E  F001         	goto	l6090
  1862   00022A                     u5330:
  1863   00022A                     
  1864                           ;main.c: 83:             {;main.c: 84:                 PASSWORD_STATUS = 1;
  1865   00022A  0E01               	movlw	1
  1866   00022C  6E7B               	movwf	_PASSWORD_STATUS^0,c
  1867   00022E                     
  1868                           ;main.c: 85:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 3, 1);
  1869   00022E  0E55               	movlw	low _LCD_1
  1870   000230  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1871   000232  0E03               	movlw	3
  1872   000234  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1873   000236  0E01               	movlw	1
  1874   000238  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1875   00023A  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1876   00023E                     
  1877                           ;main.c: 86:                 LCD4Bit_voidSendString_Pos(&LCD_1, 3, 1, "Correct password"
      +                          );
  1878   00023E  0E55               	movlw	low _LCD_1
  1879   000240  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1880   000242  0E03               	movlw	3
  1881   000244  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1882   000246  0E01               	movlw	1
  1883   000248  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1884   00024A  0EBF               	movlw	low STR_6
  1885   00024C  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1886   00024E  0EFE               	movlw	high STR_6
  1887   000250  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1888   000252  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1889   000256                     
  1890                           ;main.c: 87:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  1891   000256  0E0B               	movlw	11
  1892   000258  6E4F               	movwf	(??_main+1)^0,c
  1893   00025A  0E26               	movlw	38
  1894   00025C  6E4E               	movwf	??_main^0,c
  1895   00025E  0E5E               	movlw	94
  1896   000260                     u6317:
  1897   000260  2EE8               	decfsz	wreg,f,c
  1898   000262  D7FE               	bra	u6317
  1899   000264  2E4E               	decfsz	??_main^0,f,c
  1900   000266  D7FC               	bra	u6317
  1901   000268  2E4F               	decfsz	(??_main+1)^0,f,c
  1902   00026A  D7FA               	bra	u6317
  1903   00026C                     l6086:
  1904                           
  1905                           ;main.c: 88:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1906   00026C  0E55               	movlw	low _LCD_1
  1907   00026E  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1908   000270  0E01               	movlw	1
  1909   000272  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1910   000274  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1911                           
  1912                           ;main.c: 89:                 break;
  1913   000278  EFBB  F001         	goto	l6116
  1914   00027C                     l6090:
  1915                           
  1916                           ;main.c: 91:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 3, 1);
  1917   00027C  0E55               	movlw	low _LCD_1
  1918   00027E  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1919   000280  0E03               	movlw	3
  1920   000282  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1921   000284  0E01               	movlw	1
  1922   000286  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1923   000288  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1924   00028C                     
  1925                           ;main.c: 92:                 LCD4Bit_voidSendString_Pos(&LCD_1, 3, 1, "Wrong password ")
      +                          ;
  1926   00028C  0E55               	movlw	low _LCD_1
  1927   00028E  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1928   000290  0E03               	movlw	3
  1929   000292  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1930   000294  0E01               	movlw	1
  1931   000296  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1932   000298  0E13               	movlw	low STR_7
  1933   00029A  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1934   00029C  0EFF               	movlw	high STR_7
  1935   00029E  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1936   0002A0  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1937   0002A4                     
  1938                           ;main.c: 93:                 LCD4Bit_voidSendString_Pos(&LCD_1, 4, 1, "Try again ");
  1939   0002A4  0E55               	movlw	low _LCD_1
  1940   0002A6  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  1941   0002A8  0E04               	movlw	4
  1942   0002AA  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  1943   0002AC  0E01               	movlw	1
  1944   0002AE  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  1945   0002B0  0E7F               	movlw	low STR_8
  1946   0002B2  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  1947   0002B4  0EFF               	movlw	high STR_8
  1948   0002B6  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  1949   0002B8  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  1950   0002BC                     
  1951                           ;main.c: 94:                 Counter_Try++;
  1952   0002BC  2A7D               	incf	_Counter_Try^0,f,c
  1953   0002BE                     
  1954                           ;main.c: 95:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  1955   0002BE  0E0B               	movlw	11
  1956   0002C0  6E4F               	movwf	(??_main+1)^0,c
  1957   0002C2  0E26               	movlw	38
  1958   0002C4  6E4E               	movwf	??_main^0,c
  1959   0002C6  0E5E               	movlw	94
  1960   0002C8                     u6327:
  1961   0002C8  2EE8               	decfsz	wreg,f,c
  1962   0002CA  D7FE               	bra	u6327
  1963   0002CC  2E4E               	decfsz	??_main^0,f,c
  1964   0002CE  D7FC               	bra	u6327
  1965   0002D0  2E4F               	decfsz	(??_main+1)^0,f,c
  1966   0002D2  D7FA               	bra	u6327
  1967   0002D4                     
  1968                           ;main.c: 96:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1969   0002D4  0E55               	movlw	low _LCD_1
  1970   0002D6  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1971   0002D8  0E01               	movlw	1
  1972   0002DA  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1973   0002DC  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1974   0002E0                     
  1975                           ;main.c: 98:             if (Counter_Try > 0x02) {
  1976   0002E0  0E02               	movlw	2
  1977   0002E2  647D               	cpfsgt	_Counter_Try^0,c
  1978   0002E4  EF76  F001         	goto	u5341
  1979   0002E8  EF78  F001         	goto	u5340
  1980   0002EC                     u5341:
  1981   0002EC  EFB3  F001         	goto	l6114
  1982   0002F0                     u5340:
  1983   0002F0                     
  1984                           ;main.c: 103:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  1985   0002F0  0E55               	movlw	low _LCD_1
  1986   0002F2  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  1987   0002F4  0E01               	movlw	1
  1988   0002F6  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  1989   0002F8  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  1990                           
  1991                           ;main.c: 104:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  1992   0002FC  0E55               	movlw	low _LCD_1
  1993   0002FE  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  1994   000300  0E01               	movlw	1
  1995   000302  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  1996   000304  0E01               	movlw	1
  1997   000306  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  1998   000308  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  1999   00030C                     
  2000                           ;main.c: 105:                 LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "3 wrong attempts
      +                          ");
  2001   00030C  0E55               	movlw	low _LCD_1
  2002   00030E  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2003   000310  0E01               	movlw	1
  2004   000312  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2005   000314  0E01               	movlw	1
  2006   000316  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2007   000318  0EE1               	movlw	low STR_9
  2008   00031A  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2009   00031C  0EFE               	movlw	high STR_9
  2010   00031E  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2011   000320  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2012   000324                     
  2013                           ;main.c: 106:                 LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "Block for 5 sec 
      +                          ");
  2014   000324  0E55               	movlw	low _LCD_1
  2015   000326  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2016   000328  0E02               	movlw	2
  2017   00032A  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2018   00032C  0E01               	movlw	1
  2019   00032E  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2020   000330  0EAE               	movlw	low STR_10
  2021   000332  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2022   000334  0EFE               	movlw	high STR_10
  2023   000336  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2024   000338  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2025                           
  2026                           ;main.c: 107:                 LED_voidLedOn(&LED_LOCK);
  2027   00033C  0E65               	movlw	low _LED_LOCK
  2028   00033E  6E09               	movwf	LED_voidLedOn@Copy_stLed^0,c
  2029   000340  EC8A  F017         	call	_LED_voidLedOn	;wreg free
  2030   000344                     
  2031                           ;main.c: 108:                 _delay((unsigned long)((5000)*(8000000/4000.0)));
  2032   000344  0E33               	movlw	51
  2033   000346  6E4F               	movwf	(??_main+1)^0,c
  2034   000348  0EBB               	movlw	187
  2035   00034A  6E4E               	movwf	??_main^0,c
  2036   00034C  0EE0               	movlw	224
  2037   00034E                     u6337:
  2038   00034E  2EE8               	decfsz	wreg,f,c
  2039   000350  D7FE               	bra	u6337
  2040   000352  2E4E               	decfsz	??_main^0,f,c
  2041   000354  D7FC               	bra	u6337
  2042   000356  2E4F               	decfsz	(??_main+1)^0,f,c
  2043   000358  D7FA               	bra	u6337
  2044   00035A                     
  2045                           ;main.c: 109:                 LED_voidLedOff(&LED_LOCK);
  2046   00035A  0E65               	movlw	low _LED_LOCK
  2047   00035C  6E09               	movwf	LED_voidLedOff@Copy_stLed^0,c
  2048   00035E  ECC9  F017         	call	_LED_voidLedOff	;wreg free
  2049   000362  EF36  F001         	goto	l6086
  2050   000366                     l6114:
  2051                           
  2052                           ;main.c: 113:         } while (Counter_Try <= 2);
  2053   000366  0E02               	movlw	2
  2054   000368  647D               	cpfsgt	_Counter_Try^0,c
  2055   00036A  EFB9  F001         	goto	u5351
  2056   00036E  EFBB  F001         	goto	u5350
  2057   000372                     u5351:
  2058   000372  EFEC  F000         	goto	l6070
  2059   000376                     u5350:
  2060   000376                     l6116:
  2061                           
  2062                           ;main.c: 114:         if (1 == PASSWORD_STATUS) {
  2063   000376  047B               	decf	_PASSWORD_STATUS^0,w,c
  2064   000378  A4D8               	btfss	status,2,c
  2065   00037A  EFC1  F001         	goto	u5361
  2066   00037E  EFC3  F001         	goto	u5360
  2067   000382                     u5361:
  2068   000382  EFEA  F000         	goto	l6068
  2069   000386                     u5360:
  2070   000386                     
  2071                           ;main.c: 118:     if (1 == PASSWORD_STATUS) {
  2072   000386  047B               	decf	_PASSWORD_STATUS^0,w,c
  2073   000388  A4D8               	btfss	status,2,c
  2074   00038A  EFC9  F001         	goto	u5371
  2075   00038E  EFCB  F001         	goto	u5370
  2076   000392                     u5371:
  2077   000392  EF77  F005         	goto	l127
  2078   000396                     u5370:
  2079   000396                     
  2080                           ;main.c: 120:         {(WDTCONbits.SWDTEN = 1); __asm(" clrwdt"); (OSCCONbits.IRCF = 0);
      +                          };
  2081   000396  80D1               	bsf	209,0,c	;volatile
  2082   000398  0004               	clrwdt		;# 
  2083   00039A  0E8F               	movlw	-113
  2084   00039C  16D3               	andwf	211,f,c	;volatile
  2085   00039E                     l6126:
  2086                           
  2087                           ;main.c: 122:             {(WDTCONbits.SWDTEN = 1); __asm(" clrwdt"); (OSCCONbits.IRCF =
      +                           0);};
  2088   00039E  80D1               	bsf	209,0,c	;volatile
  2089   0003A0  0004               	clrwdt		;# 
  2090   0003A2  0E8F               	movlw	-113
  2091   0003A4  16D3               	andwf	211,f,c	;volatile
  2092   0003A6                     
  2093                           ;main.c: 125:             Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0x00);
  2094   0003A6  0E5C               	movlw	low _i2c_obj
  2095   0003A8  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2096   0003AA  0E9E               	movlw	158
  2097   0003AC  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2098   0003AE  0E00               	movlw	0
  2099   0003B0  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2100   0003B2  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2101   0003B6  6E61               	movwf	_Data^0,c	;volatile
  2102   0003B8                     
  2103                           ;main.c: 126:             APP_CheckLights(&Data);
  2104   0003B8  0E61               	movlw	low _Data
  2105   0003BA  6E10               	movwf	APP_CheckLights@MyData^0,c
  2106   0003BC  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2107   0003C0                     
  2108                           ;main.c: 127:             I2C_SendStuct(&Data);
  2109   0003C0  0E61               	movlw	low _Data
  2110   0003C2  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2111   0003C4  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2112   0003C8                     
  2113                           ;main.c: 128:             _delay((unsigned long)((200)*(8000000/4000.0)));
  2114   0003C8  0E03               	movlw	3
  2115   0003CA  6E4F               	movwf	(??_main+1)^0,c
  2116   0003CC  0E08               	movlw	8
  2117   0003CE  6E4E               	movwf	??_main^0,c
  2118   0003D0  0E77               	movlw	119
  2119   0003D2                     u6347:
  2120   0003D2  2EE8               	decfsz	wreg,f,c
  2121   0003D4  D7FE               	bra	u6347
  2122   0003D6  2E4E               	decfsz	??_main^0,f,c
  2123   0003D8  D7FC               	bra	u6347
  2124   0003DA  2E4F               	decfsz	(??_main+1)^0,f,c
  2125   0003DC  D7FA               	bra	u6347
  2126   0003DE  0000               	nop	
  2127   0003E0                     
  2128                           ;main.c: 130:             User = LCD_ChoisePrint();
  2129   0003E0  EC9C  F013         	call	_LCD_ChoisePrint	;wreg free
  2130   0003E4  6E7A               	movwf	_User^0,c
  2131   0003E6                     
  2132                           ;main.c: 136:             if (User == 1) {
  2133   0003E6  047A               	decf	_User^0,w,c
  2134   0003E8  A4D8               	btfss	status,2,c
  2135   0003EA  EFF9  F001         	goto	u5381
  2136   0003EE  EFFB  F001         	goto	u5380
  2137   0003F2                     u5381:
  2138   0003F2  EF63  F002         	goto	l6168
  2139   0003F6                     u5380:
  2140   0003F6                     
  2141                           ;main.c: 137:                 (WDTCONbits.SWDTEN = 0);
  2142   0003F6  90D1               	bcf	209,0,c	;volatile
  2143   0003F8                     
  2144                           ;main.c: 139:                 Data.Set_TEMP = App_SetTemperature();
  2145   0003F8  EC46  F011         	call	_App_SetTemperature	;wreg free
  2146   0003FC  6E62               	movwf	(_Data+1)^0,c	;volatile
  2147   0003FE                     
  2148                           ;main.c: 140:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2149   0003FE  0E55               	movlw	low _LCD_1
  2150   000400  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2151   000402  0E01               	movlw	1
  2152   000404  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2153   000406  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2154   00040A                     
  2155                           ;main.c: 141:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2156   00040A  0E55               	movlw	low _LCD_1
  2157   00040C  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2158   00040E  0E01               	movlw	1
  2159   000410  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2160   000412  0E01               	movlw	1
  2161   000414  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2162   000416  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2163   00041A                     
  2164                           ;main.c: 142:                 LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "Temp : ");
  2165   00041A  0E55               	movlw	low _LCD_1
  2166   00041C  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2167   00041E  0E01               	movlw	1
  2168   000420  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2169   000422  0E01               	movlw	1
  2170   000424  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2171   000426  0EC2               	movlw	low STR_11
  2172   000428  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2173   00042A  0EFF               	movlw	high STR_11
  2174   00042C  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2175   00042E  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2176   000432                     
  2177                           ;main.c: 143:                 LCD4Bit_voidSendString_Pos(&LCD_1, 4, 3, "9_Ret");
  2178   000432  0E55               	movlw	low _LCD_1
  2179   000434  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2180   000436  0E04               	movlw	4
  2181   000438  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2182   00043A  0E03               	movlw	3
  2183   00043C  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2184   00043E  0EE6               	movlw	low STR_12
  2185   000440  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2186   000442  0EFF               	movlw	high STR_12
  2187   000444  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2188   000446  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2189   00044A                     l6152:
  2190                           
  2191                           ;main.c: 147:                     Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0
      +                          x00);
  2192   00044A  0E5C               	movlw	low _i2c_obj
  2193   00044C  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2194   00044E  0E9E               	movlw	158
  2195   000450  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2196   000452  0E00               	movlw	0
  2197   000454  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2198   000456  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2199   00045A  6E61               	movwf	_Data^0,c	;volatile
  2200   00045C                     
  2201                           ;main.c: 149:                     APP_CheckLights(&Data);
  2202   00045C  0E61               	movlw	low _Data
  2203   00045E  6E10               	movwf	APP_CheckLights@MyData^0,c
  2204   000460  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2205   000464                     
  2206                           ;main.c: 150:                     I2C_SendStuct(&Data);
  2207   000464  0E61               	movlw	low _Data
  2208   000466  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2209   000468  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2210   00046C                     
  2211                           ;main.c: 151:                     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 6, "    ");
  2212   00046C  0E55               	movlw	low _LCD_1
  2213   00046E  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2214   000470  0E01               	movlw	1
  2215   000472  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2216   000474  0E06               	movlw	6
  2217   000476  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2218   000478  0EF6               	movlw	low STR_13
  2219   00047A  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2220   00047C  0EFF               	movlw	high STR_13
  2221   00047E  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2222   000480  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2223   000484                     
  2224                           ;main.c: 152:                     LCD4Bit_voidSendNumber(&LCD_1, Data.sensor_TEMP, 1, 6)
      +                          ;
  2225   000484  0E55               	movlw	low _LCD_1
  2226   000486  6E30               	movwf	LCD4Bit_voidSendNumber@Copy_stLCD4Bit^0,c
  2227   000488  C061  F031         	movff	_Data,LCD4Bit_voidSendNumber@Copy_u16Number	;volatile
  2228   00048C  6A32               	clrf	(LCD4Bit_voidSendNumber@Copy_u16Number+1)^0,c
  2229   00048E  0E01               	movlw	1
  2230   000490  6E33               	movwf	LCD4Bit_voidSendNumber@Copy_u8Row^0,c
  2231   000492  0E06               	movlw	6
  2232   000494  6E34               	movwf	LCD4Bit_voidSendNumber@Copy_u8Column^0,c
  2233   000496  ECB5  F016         	call	_LCD4Bit_voidSendNumber	;wreg free
  2234   00049A                     
  2235                           ;main.c: 153:                     flag_1 = KEYPAD_u8KeyPadPressed(&KeyPad_1);
  2236   00049A  0EAE               	movlw	low _KeyPad_1
  2237   00049C  6E09               	movwf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,c
  2238   00049E  EC52  F012         	call	_KEYPAD_u8KeyPadPressed	;wreg free
  2239   0004A2  6E79               	movwf	_flag_1^0,c
  2240   0004A4                     
  2241                           ;main.c: 154:                     if (flag_1 == 9) {
  2242   0004A4  0E09               	movlw	9
  2243   0004A6  1879               	xorwf	_flag_1^0,w,c
  2244   0004A8  A4D8               	btfss	status,2,c
  2245   0004AA  EF59  F002         	goto	u5391
  2246   0004AE  EF5B  F002         	goto	u5390
  2247   0004B2                     u5391:
  2248   0004B2  EF25  F002         	goto	l6152
  2249   0004B6                     u5390:
  2250   0004B6                     
  2251                           ;main.c: 155:                         LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2252   0004B6  0E55               	movlw	low _LCD_1
  2253   0004B8  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2254   0004BA  0E01               	movlw	1
  2255   0004BC  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2256   0004BE  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2257                           
  2258                           ;main.c: 156:                         break;
  2259   0004C2  EFCF  F001         	goto	l6126
  2260   0004C6                     l6168:
  2261   0004C6  0E02               	movlw	2
  2262   0004C8  187A               	xorwf	_User^0,w,c
  2263   0004CA  A4D8               	btfss	status,2,c
  2264   0004CC  EF6A  F002         	goto	u5401
  2265   0004D0  EF6C  F002         	goto	u5400
  2266   0004D4                     u5401:
  2267   0004D4  EF42  F003         	goto	l6228
  2268   0004D8                     u5400:
  2269   0004D8                     
  2270                           ;main.c: 166:                 (WDTCONbits.SWDTEN = 0);
  2271   0004D8  90D1               	bcf	209,0,c	;volatile
  2272   0004DA                     
  2273                           ;main.c: 168:                 Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0x00)
      +                          ;
  2274   0004DA  0E5C               	movlw	low _i2c_obj
  2275   0004DC  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2276   0004DE  0E9E               	movlw	158
  2277   0004E0  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2278   0004E2  0E00               	movlw	0
  2279   0004E4  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2280   0004E6  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2281   0004EA  6E61               	movwf	_Data^0,c	;volatile
  2282   0004EC                     
  2283                           ;main.c: 169:                 APP_CheckLights(&Data);
  2284   0004EC  0E61               	movlw	low _Data
  2285   0004EE  6E10               	movwf	APP_CheckLights@MyData^0,c
  2286   0004F0  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2287   0004F4                     
  2288                           ;main.c: 170:                 I2C_SendStuct(&Data);
  2289   0004F4  0E61               	movlw	low _Data
  2290   0004F6  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2291   0004F8  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2292   0004FC                     
  2293                           ;main.c: 171:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  2294   0004FC  0E03               	movlw	3
  2295   0004FE  6E4F               	movwf	(??_main+1)^0,c
  2296   000500  0E08               	movlw	8
  2297   000502  6E4E               	movwf	??_main^0,c
  2298   000504  0E77               	movlw	119
  2299   000506                     u6357:
  2300   000506  2EE8               	decfsz	wreg,f,c
  2301   000508  D7FE               	bra	u6357
  2302   00050A  2E4E               	decfsz	??_main^0,f,c
  2303   00050C  D7FC               	bra	u6357
  2304   00050E  2E4F               	decfsz	(??_main+1)^0,f,c
  2305   000510  D7FA               	bra	u6357
  2306   000512  0000               	nop	
  2307   000514                     
  2308                           ;main.c: 172:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2309   000514  0E55               	movlw	low _LCD_1
  2310   000516  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2311   000518  0E01               	movlw	1
  2312   00051A  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2313   00051C  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2314   000520                     
  2315                           ;main.c: 173:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2316   000520  0E55               	movlw	low _LCD_1
  2317   000522  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2318   000524  0E01               	movlw	1
  2319   000526  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2320   000528  0E01               	movlw	1
  2321   00052A  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2322   00052C  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2323   000530                     
  2324                           ;main.c: 174:                 LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "1-Open Door");
  2325   000530  0E55               	movlw	low _LCD_1
  2326   000532  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2327   000534  0E01               	movlw	1
  2328   000536  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2329   000538  0E01               	movlw	1
  2330   00053A  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2331   00053C  0E73               	movlw	low STR_14
  2332   00053E  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2333   000540  0EFF               	movlw	high STR_14
  2334   000542  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2335   000544  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2336   000548                     
  2337                           ;main.c: 175:                 LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "2-Close Door");
  2338   000548  0E55               	movlw	low _LCD_1
  2339   00054A  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2340   00054C  0E02               	movlw	2
  2341   00054E  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2342   000550  0E01               	movlw	1
  2343   000552  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2344   000554  0E4E               	movlw	low STR_15
  2345   000556  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2346   000558  0EFF               	movlw	high STR_15
  2347   00055A  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2348   00055C  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2349   000560                     
  2350                           ;main.c: 176:                 LCD4Bit_voidSendString_Pos(&LCD_1, 3, 1, "9_Ret");
  2351   000560  0E55               	movlw	low _LCD_1
  2352   000562  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2353   000564  0E03               	movlw	3
  2354   000566  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2355   000568  0E01               	movlw	1
  2356   00056A  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2357   00056C  0EE6               	movlw	low STR_12
  2358   00056E  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2359   000570  0EFF               	movlw	high STR_12
  2360   000572  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2361   000574  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2362   000578                     l6190:
  2363                           
  2364                           ;main.c: 178:                     flag_1 = KEYPAD_u8KeyPadPressed(&KeyPad_1);
  2365   000578  0EAE               	movlw	low _KeyPad_1
  2366   00057A  6E09               	movwf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,c
  2367   00057C  EC52  F012         	call	_KEYPAD_u8KeyPadPressed	;wreg free
  2368   000580  6E79               	movwf	_flag_1^0,c
  2369   000582                     
  2370                           ;main.c: 179:                     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2371   000582  0E55               	movlw	low _LCD_1
  2372   000584  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2373   000586  0E01               	movlw	1
  2374   000588  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2375   00058A  0E01               	movlw	1
  2376   00058C  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2377   00058E  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2378   000592                     
  2379                           ;main.c: 180:                     Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0
      +                          x00);
  2380   000592  0E5C               	movlw	low _i2c_obj
  2381   000594  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2382   000596  0E9E               	movlw	158
  2383   000598  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2384   00059A  0E00               	movlw	0
  2385   00059C  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2386   00059E  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2387   0005A2  6E61               	movwf	_Data^0,c	;volatile
  2388   0005A4                     
  2389                           ;main.c: 181:                     APP_CheckLights(&Data);
  2390   0005A4  0E61               	movlw	low _Data
  2391   0005A6  6E10               	movwf	APP_CheckLights@MyData^0,c
  2392   0005A8  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2393   0005AC                     
  2394                           ;main.c: 182:                     I2C_SendStuct(&Data);
  2395   0005AC  0E61               	movlw	low _Data
  2396   0005AE  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2397   0005B0  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2398   0005B4                     
  2399                           ;main.c: 184:                     if (flag_1 == 1 || flag_1 == 2 || flag_1 == 9) {
  2400   0005B4  0479               	decf	_flag_1^0,w,c
  2401   0005B6  B4D8               	btfsc	status,2,c
  2402   0005B8  EFE0  F002         	goto	u5411
  2403   0005BC  EFE2  F002         	goto	u5410
  2404   0005C0                     u5411:
  2405   0005C0  EFF4  F002         	goto	l6206
  2406   0005C4                     u5410:
  2407   0005C4  0E02               	movlw	2
  2408   0005C6  1879               	xorwf	_flag_1^0,w,c
  2409   0005C8  B4D8               	btfsc	status,2,c
  2410   0005CA  EFE9  F002         	goto	u5421
  2411   0005CE  EFEB  F002         	goto	u5420
  2412   0005D2                     u5421:
  2413   0005D2  EFF4  F002         	goto	l6206
  2414   0005D6                     u5420:
  2415   0005D6  0E09               	movlw	9
  2416   0005D8  1879               	xorwf	_flag_1^0,w,c
  2417   0005DA  A4D8               	btfss	status,2,c
  2418   0005DC  EFF2  F002         	goto	u5431
  2419   0005E0  EFF4  F002         	goto	u5430
  2420   0005E4                     u5431:
  2421   0005E4  EFBC  F002         	goto	l6190
  2422   0005E8                     u5430:
  2423   0005E8                     l6206:
  2424                           
  2425                           ;main.c: 185:                         LCD_voidSetCursorPos_4Bit(&LCD_1, 4, 1);
  2426   0005E8  0E55               	movlw	low _LCD_1
  2427   0005EA  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2428   0005EC  0E04               	movlw	4
  2429   0005EE  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2430   0005F0  0E01               	movlw	1
  2431   0005F2  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2432   0005F4  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2433   0005F8                     
  2434                           ;main.c: 186:                         LCD4Bit_voidSendNumber(&LCD_1, flag_1, 4, 1);
  2435   0005F8  0E55               	movlw	low _LCD_1
  2436   0005FA  6E30               	movwf	LCD4Bit_voidSendNumber@Copy_stLCD4Bit^0,c
  2437   0005FC  C079  F031         	movff	_flag_1,LCD4Bit_voidSendNumber@Copy_u16Number
  2438   000600  6A32               	clrf	(LCD4Bit_voidSendNumber@Copy_u16Number+1)^0,c
  2439   000602  0E04               	movlw	4
  2440   000604  6E33               	movwf	LCD4Bit_voidSendNumber@Copy_u8Row^0,c
  2441   000606  0E01               	movlw	1
  2442   000608  6E34               	movwf	LCD4Bit_voidSendNumber@Copy_u8Column^0,c
  2443   00060A  ECB5  F016         	call	_LCD4Bit_voidSendNumber	;wreg free
  2444   00060E                     
  2445                           ;main.c: 187:                         _delay((unsigned long)((200)*(8000000/4000.0)));
  2446   00060E  0E03               	movlw	3
  2447   000610  6E4F               	movwf	(??_main+1)^0,c
  2448   000612  0E08               	movlw	8
  2449   000614  6E4E               	movwf	??_main^0,c
  2450   000616  0E77               	movlw	119
  2451   000618                     u6367:
  2452   000618  2EE8               	decfsz	wreg,f,c
  2453   00061A  D7FE               	bra	u6367
  2454   00061C  2E4E               	decfsz	??_main^0,f,c
  2455   00061E  D7FC               	bra	u6367
  2456   000620  2E4F               	decfsz	(??_main+1)^0,f,c
  2457   000622  D7FA               	bra	u6367
  2458   000624  0000               	nop	
  2459   000626                     
  2460                           ;main.c: 188:                         LCD4Bit_voidSendString_Pos(&LCD_1, 4, 1, "  ");
  2461   000626  0E55               	movlw	low _LCD_1
  2462   000628  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2463   00062A  0E04               	movlw	4
  2464   00062C  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2465   00062E  0E01               	movlw	1
  2466   000630  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2467   000632  0EF8               	movlw	low (STR_13+2)
  2468   000634  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2469   000636  0EFF               	movlw	high (STR_13+2)
  2470   000638  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2471   00063A  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2472   00063E                     
  2473                           ;main.c: 189:                         if (flag_1 == 9) {
  2474   00063E  0E09               	movlw	9
  2475   000640  1879               	xorwf	_flag_1^0,w,c
  2476   000642  A4D8               	btfss	status,2,c
  2477   000644  EF26  F003         	goto	u5441
  2478   000648  EF28  F003         	goto	u5440
  2479   00064C                     u5441:
  2480   00064C  EF2A  F003         	goto	l6220
  2481   000650                     u5440:
  2482   000650  EFCF  F001         	goto	l6126
  2483   000654                     l6220:
  2484                           
  2485                           ;main.c: 192:                             Data.Door = flag_1;
  2486   000654  5063               	movf	(_Data+2)^0,w,c	;volatile
  2487   000656  1879               	xorwf	_flag_1^0,w,c
  2488   000658  0BFC               	andlw	-4
  2489   00065A  1879               	xorwf	_flag_1^0,w,c
  2490   00065C  6E63               	movwf	(_Data+2)^0,c	;volatile
  2491   00065E                     
  2492                           ;main.c: 193:                             Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj,
      +                           0x9E, 0x00);
  2493   00065E  0E5C               	movlw	low _i2c_obj
  2494   000660  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2495   000662  0E9E               	movlw	158
  2496   000664  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2497   000666  0E00               	movlw	0
  2498   000668  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2499   00066A  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2500   00066E  6E61               	movwf	_Data^0,c	;volatile
  2501   000670                     
  2502                           ;main.c: 194:                             APP_CheckLights(&Data);
  2503   000670  0E61               	movlw	low _Data
  2504   000672  6E10               	movwf	APP_CheckLights@MyData^0,c
  2505   000674  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2506   000678                     
  2507                           ;main.c: 195:                             I2C_SendStuct(&Data);
  2508   000678  0E61               	movlw	low _Data
  2509   00067A  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2510   00067C  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2511   000680  EFBC  F002         	goto	l6190
  2512   000684                     l6228:
  2513   000684  0E03               	movlw	3
  2514   000686  187A               	xorwf	_User^0,w,c
  2515   000688  A4D8               	btfss	status,2,c
  2516   00068A  EF49  F003         	goto	u5451
  2517   00068E  EF4B  F003         	goto	u5450
  2518   000692                     u5451:
  2519   000692  EF21  F004         	goto	l6286
  2520   000696                     u5450:
  2521   000696                     
  2522                           ;main.c: 206:                 (WDTCONbits.SWDTEN = 0);
  2523   000696  90D1               	bcf	209,0,c	;volatile
  2524   000698                     
  2525                           ;main.c: 208:                 Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0x00)
      +                          ;
  2526   000698  0E5C               	movlw	low _i2c_obj
  2527   00069A  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2528   00069C  0E9E               	movlw	158
  2529   00069E  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2530   0006A0  0E00               	movlw	0
  2531   0006A2  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2532   0006A4  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2533   0006A8  6E61               	movwf	_Data^0,c	;volatile
  2534   0006AA                     
  2535                           ;main.c: 209:                 APP_CheckLights(&Data);
  2536   0006AA  0E61               	movlw	low _Data
  2537   0006AC  6E10               	movwf	APP_CheckLights@MyData^0,c
  2538   0006AE  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2539   0006B2                     
  2540                           ;main.c: 211:                 I2C_SendStuct(&Data);
  2541   0006B2  0E61               	movlw	low _Data
  2542   0006B4  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2543   0006B6  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2544   0006BA                     
  2545                           ;main.c: 212:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  2546   0006BA  0E03               	movlw	3
  2547   0006BC  6E4F               	movwf	(??_main+1)^0,c
  2548   0006BE  0E08               	movlw	8
  2549   0006C0  6E4E               	movwf	??_main^0,c
  2550   0006C2  0E77               	movlw	119
  2551   0006C4                     u6377:
  2552   0006C4  2EE8               	decfsz	wreg,f,c
  2553   0006C6  D7FE               	bra	u6377
  2554   0006C8  2E4E               	decfsz	??_main^0,f,c
  2555   0006CA  D7FC               	bra	u6377
  2556   0006CC  2E4F               	decfsz	(??_main+1)^0,f,c
  2557   0006CE  D7FA               	bra	u6377
  2558   0006D0  0000               	nop	
  2559   0006D2                     
  2560                           ;main.c: 213:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2561   0006D2  0E55               	movlw	low _LCD_1
  2562   0006D4  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2563   0006D6  0E01               	movlw	1
  2564   0006D8  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2565   0006DA  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2566   0006DE                     
  2567                           ;main.c: 214:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2568   0006DE  0E55               	movlw	low _LCD_1
  2569   0006E0  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2570   0006E2  0E01               	movlw	1
  2571   0006E4  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2572   0006E6  0E01               	movlw	1
  2573   0006E8  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2574   0006EA  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2575   0006EE                     
  2576                           ;main.c: 215:                 LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "1-Open TV");
  2577   0006EE  0E55               	movlw	low _LCD_1
  2578   0006F0  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2579   0006F2  0E01               	movlw	1
  2580   0006F4  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2581   0006F6  0E01               	movlw	1
  2582   0006F8  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2583   0006FA  0E95               	movlw	low STR_18
  2584   0006FC  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2585   0006FE  0EFF               	movlw	high STR_18
  2586   000700  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2587   000702  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2588   000706                     
  2589                           ;main.c: 216:                 LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "2-Close TV");
  2590   000706  0E55               	movlw	low _LCD_1
  2591   000708  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2592   00070A  0E02               	movlw	2
  2593   00070C  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2594   00070E  0E01               	movlw	1
  2595   000710  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2596   000712  0E8A               	movlw	low STR_19
  2597   000714  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2598   000716  0EFF               	movlw	high STR_19
  2599   000718  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2600   00071A  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2601   00071E                     
  2602                           ;main.c: 217:                 LCD4Bit_voidSendString_Pos(&LCD_1, 3, 1, "9_Ret");
  2603   00071E  0E55               	movlw	low _LCD_1
  2604   000720  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2605   000722  0E03               	movlw	3
  2606   000724  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2607   000726  0E01               	movlw	1
  2608   000728  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2609   00072A  0EE6               	movlw	low STR_12
  2610   00072C  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2611   00072E  0EFF               	movlw	high STR_12
  2612   000730  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2613   000732  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2614   000736                     l6250:
  2615                           
  2616                           ;main.c: 219:                     Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0
      +                          x00);
  2617   000736  0E5C               	movlw	low _i2c_obj
  2618   000738  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2619   00073A  0E9E               	movlw	158
  2620   00073C  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2621   00073E  0E00               	movlw	0
  2622   000740  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2623   000742  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2624   000746  6E61               	movwf	_Data^0,c	;volatile
  2625   000748                     
  2626                           ;main.c: 221:                     I2C_SendStuct(&Data);
  2627   000748  0E61               	movlw	low _Data
  2628   00074A  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2629   00074C  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2630   000750                     
  2631                           ;main.c: 222:                     flag_1 = KEYPAD_u8KeyPadPressed(&KeyPad_1);
  2632   000750  0EAE               	movlw	low _KeyPad_1
  2633   000752  6E09               	movwf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,c
  2634   000754  EC52  F012         	call	_KEYPAD_u8KeyPadPressed	;wreg free
  2635   000758  6E79               	movwf	_flag_1^0,c
  2636   00075A                     
  2637                           ;main.c: 223:                     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2638   00075A  0E55               	movlw	low _LCD_1
  2639   00075C  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2640   00075E  0E01               	movlw	1
  2641   000760  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2642   000762  0E01               	movlw	1
  2643   000764  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2644   000766  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2645   00076A                     
  2646                           ;main.c: 225:                     if (flag_1 == 1 || flag_1 == 2 || flag_1 == 9) {
  2647   00076A  0479               	decf	_flag_1^0,w,c
  2648   00076C  B4D8               	btfsc	status,2,c
  2649   00076E  EFBB  F003         	goto	u5461
  2650   000772  EFBD  F003         	goto	u5460
  2651   000776                     u5461:
  2652   000776  EFCF  F003         	goto	l6264
  2653   00077A                     u5460:
  2654   00077A  0E02               	movlw	2
  2655   00077C  1879               	xorwf	_flag_1^0,w,c
  2656   00077E  B4D8               	btfsc	status,2,c
  2657   000780  EFC4  F003         	goto	u5471
  2658   000784  EFC6  F003         	goto	u5470
  2659   000788                     u5471:
  2660   000788  EFCF  F003         	goto	l6264
  2661   00078C                     u5470:
  2662   00078C  0E09               	movlw	9
  2663   00078E  1879               	xorwf	_flag_1^0,w,c
  2664   000790  A4D8               	btfss	status,2,c
  2665   000792  EFCD  F003         	goto	u5481
  2666   000796  EFCF  F003         	goto	u5480
  2667   00079A                     u5481:
  2668   00079A  EF9B  F003         	goto	l6250
  2669   00079E                     u5480:
  2670   00079E                     l6264:
  2671                           
  2672                           ;main.c: 226:                         LCD_voidSetCursorPos_4Bit(&LCD_1, 4, 1);
  2673   00079E  0E55               	movlw	low _LCD_1
  2674   0007A0  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2675   0007A2  0E04               	movlw	4
  2676   0007A4  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2677   0007A6  0E01               	movlw	1
  2678   0007A8  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2679   0007AA  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2680   0007AE                     
  2681                           ;main.c: 227:                         LCD4Bit_voidSendNumber(&LCD_1, flag_1, 4, 1);
  2682   0007AE  0E55               	movlw	low _LCD_1
  2683   0007B0  6E30               	movwf	LCD4Bit_voidSendNumber@Copy_stLCD4Bit^0,c
  2684   0007B2  C079  F031         	movff	_flag_1,LCD4Bit_voidSendNumber@Copy_u16Number
  2685   0007B6  6A32               	clrf	(LCD4Bit_voidSendNumber@Copy_u16Number+1)^0,c
  2686   0007B8  0E04               	movlw	4
  2687   0007BA  6E33               	movwf	LCD4Bit_voidSendNumber@Copy_u8Row^0,c
  2688   0007BC  0E01               	movlw	1
  2689   0007BE  6E34               	movwf	LCD4Bit_voidSendNumber@Copy_u8Column^0,c
  2690   0007C0  ECB5  F016         	call	_LCD4Bit_voidSendNumber	;wreg free
  2691   0007C4                     
  2692                           ;main.c: 228:                         _delay((unsigned long)((200)*(8000000/4000.0)));
  2693   0007C4  0E03               	movlw	3
  2694   0007C6  6E4F               	movwf	(??_main+1)^0,c
  2695   0007C8  0E08               	movlw	8
  2696   0007CA  6E4E               	movwf	??_main^0,c
  2697   0007CC  0E77               	movlw	119
  2698   0007CE                     u6387:
  2699   0007CE  2EE8               	decfsz	wreg,f,c
  2700   0007D0  D7FE               	bra	u6387
  2701   0007D2  2E4E               	decfsz	??_main^0,f,c
  2702   0007D4  D7FC               	bra	u6387
  2703   0007D6  2E4F               	decfsz	(??_main+1)^0,f,c
  2704   0007D8  D7FA               	bra	u6387
  2705   0007DA  0000               	nop	
  2706   0007DC                     
  2707                           ;main.c: 229:                         LCD4Bit_voidSendString_Pos(&LCD_1, 4, 1, "  ");
  2708   0007DC  0E55               	movlw	low _LCD_1
  2709   0007DE  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2710   0007E0  0E04               	movlw	4
  2711   0007E2  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2712   0007E4  0E01               	movlw	1
  2713   0007E6  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2714   0007E8  0EF8               	movlw	low (STR_13+2)
  2715   0007EA  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2716   0007EC  0EFF               	movlw	high (STR_13+2)
  2717   0007EE  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2718   0007F0  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2719   0007F4                     
  2720                           ;main.c: 230:                         if (flag_1 == 9) {
  2721   0007F4  0E09               	movlw	9
  2722   0007F6  1879               	xorwf	_flag_1^0,w,c
  2723   0007F8  A4D8               	btfss	status,2,c
  2724   0007FA  EF01  F004         	goto	u5491
  2725   0007FE  EF03  F004         	goto	u5490
  2726   000802                     u5491:
  2727   000802  EF05  F004         	goto	l6278
  2728   000806                     u5490:
  2729   000806  EFCF  F001         	goto	l6126
  2730   00080A                     l6278:
  2731                           
  2732                           ;main.c: 233:                             Data.TV = flag_1;
  2733   00080A  C079  F04E         	movff	_flag_1,??_main
  2734   00080E  464E               	rlncf	??_main^0,f,c
  2735   000810  464E               	rlncf	??_main^0,f,c
  2736   000812  5063               	movf	(_Data+2)^0,w,c	;volatile
  2737   000814  184E               	xorwf	??_main^0,w,c
  2738   000816  0BF3               	andlw	-13
  2739   000818  184E               	xorwf	??_main^0,w,c
  2740   00081A  6E63               	movwf	(_Data+2)^0,c	;volatile
  2741   00081C                     
  2742                           ;main.c: 234:                             Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj,
      +                           0x9E, 0x00);
  2743   00081C  0E5C               	movlw	low _i2c_obj
  2744   00081E  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2745   000820  0E9E               	movlw	158
  2746   000822  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2747   000824  0E00               	movlw	0
  2748   000826  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2749   000828  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2750   00082C  6E61               	movwf	_Data^0,c	;volatile
  2751   00082E                     
  2752                           ;main.c: 235:                             APP_CheckLights(&Data);
  2753   00082E  0E61               	movlw	low _Data
  2754   000830  6E10               	movwf	APP_CheckLights@MyData^0,c
  2755   000832  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2756   000836                     
  2757                           ;main.c: 237:                             I2C_SendStuct(&Data);
  2758   000836  0E61               	movlw	low _Data
  2759   000838  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2760   00083A  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2761   00083E  EF9B  F003         	goto	l6250
  2762   000842                     l6286:
  2763   000842  0E04               	movlw	4
  2764   000844  187A               	xorwf	_User^0,w,c
  2765   000846  A4D8               	btfss	status,2,c
  2766   000848  EF28  F004         	goto	u5501
  2767   00084C  EF2A  F004         	goto	u5500
  2768   000850                     u5501:
  2769   000850  EF4F  F005         	goto	l6358
  2770   000854                     u5500:
  2771   000854                     
  2772                           ;main.c: 247:                 (WDTCONbits.SWDTEN = 0);
  2773   000854  90D1               	bcf	209,0,c	;volatile
  2774   000856                     l6290:
  2775                           
  2776                           ;main.c: 250:                     Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0
      +                          x00);
  2777   000856  0E5C               	movlw	low _i2c_obj
  2778   000858  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2779   00085A  0E9E               	movlw	158
  2780   00085C  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2781   00085E  0E00               	movlw	0
  2782   000860  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2783   000862  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2784   000866  6E61               	movwf	_Data^0,c	;volatile
  2785   000868                     
  2786                           ;main.c: 252:                     I2C_SendStuct(&Data);
  2787   000868  0E61               	movlw	low _Data
  2788   00086A  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2789   00086C  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2790   000870                     
  2791                           ;main.c: 253:                     _delay((unsigned long)((200)*(8000000/4000.0)));
  2792   000870  0E03               	movlw	3
  2793   000872  6E4F               	movwf	(??_main+1)^0,c
  2794   000874  0E08               	movlw	8
  2795   000876  6E4E               	movwf	??_main^0,c
  2796   000878  0E77               	movlw	119
  2797   00087A                     u6397:
  2798   00087A  2EE8               	decfsz	wreg,f,c
  2799   00087C  D7FE               	bra	u6397
  2800   00087E  2E4E               	decfsz	??_main^0,f,c
  2801   000880  D7FC               	bra	u6397
  2802   000882  2E4F               	decfsz	(??_main+1)^0,f,c
  2803   000884  D7FA               	bra	u6397
  2804   000886  0000               	nop	
  2805   000888                     
  2806                           ;main.c: 254:                     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2807   000888  0E55               	movlw	low _LCD_1
  2808   00088A  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2809   00088C  0E01               	movlw	1
  2810   00088E  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2811   000890  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2812   000894                     
  2813                           ;main.c: 255:                     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2814   000894  0E55               	movlw	low _LCD_1
  2815   000896  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2816   000898  0E01               	movlw	1
  2817   00089A  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2818   00089C  0E01               	movlw	1
  2819   00089E  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2820   0008A0  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2821   0008A4                     
  2822                           ;main.c: 256:                     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "Choose opera
      +                          tion");
  2823   0008A4  0E55               	movlw	low _LCD_1
  2824   0008A6  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2825   0008A8  0E01               	movlw	1
  2826   0008AA  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2827   0008AC  0E01               	movlw	1
  2828   0008AE  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2829   0008B0  0ED0               	movlw	low STR_22
  2830   0008B2  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2831   0008B4  0EFE               	movlw	high STR_22
  2832   0008B6  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2833   0008B8  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2834   0008BC                     
  2835                           ;main.c: 257:                     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2836   0008BC  0E55               	movlw	low _LCD_1
  2837   0008BE  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2838   0008C0  0E01               	movlw	1
  2839   0008C2  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2840   0008C4  0E01               	movlw	1
  2841   0008C6  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2842   0008C8  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2843   0008CC                     
  2844                           ;main.c: 258:                     LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "1-Automatic"
      +                          );
  2845   0008CC  0E55               	movlw	low _LCD_1
  2846   0008CE  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2847   0008D0  0E02               	movlw	2
  2848   0008D2  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2849   0008D4  0E01               	movlw	1
  2850   0008D6  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2851   0008D8  0E5B               	movlw	low STR_23
  2852   0008DA  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2853   0008DC  0EFF               	movlw	high STR_23
  2854   0008DE  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2855   0008E0  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2856   0008E4                     
  2857                           ;main.c: 259:                     LCD4Bit_voidSendString_Pos(&LCD_1, 3, 1, "2-Manual");
  2858   0008E4  0E55               	movlw	low _LCD_1
  2859   0008E6  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2860   0008E8  0E03               	movlw	3
  2861   0008EA  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2862   0008EC  0E01               	movlw	1
  2863   0008EE  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2864   0008F0  0EB1               	movlw	low STR_24
  2865   0008F2  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2866   0008F4  0EFF               	movlw	high STR_24
  2867   0008F6  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2868   0008F8  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2869   0008FC                     
  2870                           ;main.c: 260:                     LCD4Bit_voidSendString_Pos(&LCD_1, 4, 15, "9-Ret");
  2871   0008FC  0E55               	movlw	low _LCD_1
  2872   0008FE  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2873   000900  0E04               	movlw	4
  2874   000902  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2875   000904  0E0F               	movlw	15
  2876   000906  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2877   000908  0EE0               	movlw	low STR_25
  2878   00090A  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2879   00090C  0EFF               	movlw	high STR_25
  2880   00090E  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2881   000910  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2882   000914                     
  2883                           ;main.c: 261:                     Data.sensor_TEMP = I2C_u8ReadRegByte(&i2c_obj, 0x9E, 0
      +                          x00);
  2884   000914  0E5C               	movlw	low _i2c_obj
  2885   000916  6E04               	movwf	I2C_u8ReadRegByte@Copy_stI2C^0,c
  2886   000918  0E9E               	movlw	158
  2887   00091A  6E05               	movwf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,c
  2888   00091C  0E00               	movlw	0
  2889   00091E  6E06               	movwf	I2C_u8ReadRegByte@Copy_u8Byte_Address^0,c
  2890   000920  EC48  F019         	call	_I2C_u8ReadRegByte	;wreg free
  2891   000924  6E61               	movwf	_Data^0,c	;volatile
  2892   000926                     
  2893                           ;main.c: 262:                     I2C_SendStuct(&Data);
  2894   000926  0E61               	movlw	low _Data
  2895   000928  6E04               	movwf	I2C_SendStuct@MyData^0,c
  2896   00092A  EC13  F016         	call	_I2C_SendStuct	;wreg free
  2897   00092E                     
  2898                           ;main.c: 263:                     flag_1 = KEYPAD_u8KeyPadPressed(&KeyPad_1);
  2899   00092E  0EAE               	movlw	low _KeyPad_1
  2900   000930  6E09               	movwf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,c
  2901   000932  EC52  F012         	call	_KEYPAD_u8KeyPadPressed	;wreg free
  2902   000936  6E79               	movwf	_flag_1^0,c
  2903   000938                     
  2904                           ;main.c: 264:                     if (0xff != flag_1) {
  2905   000938  2879               	incf	_flag_1^0,w,c
  2906   00093A  B4D8               	btfsc	status,2,c
  2907   00093C  EFA2  F004         	goto	u5511
  2908   000940  EFA4  F004         	goto	u5510
  2909   000944                     u5511:
  2910   000944  EF41  F005         	goto	l6354
  2911   000948                     u5510:
  2912   000948                     
  2913                           ;main.c: 265:                         if (1 == flag_1) {
  2914   000948  0479               	decf	_flag_1^0,w,c
  2915   00094A  A4D8               	btfss	status,2,c
  2916   00094C  EFAA  F004         	goto	u5521
  2917   000950  EFAC  F004         	goto	u5520
  2918   000954                     u5521:
  2919   000954  EFDB  F004         	goto	l6330
  2920   000958                     u5520:
  2921   000958                     
  2922                           ;main.c: 266:                             LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2923   000958  0E55               	movlw	low _LCD_1
  2924   00095A  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2925   00095C  0E01               	movlw	1
  2926   00095E  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2927   000960  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2928                           
  2929                           ;main.c: 267:                             LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2930   000964  0E55               	movlw	low _LCD_1
  2931   000966  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2932   000968  0E01               	movlw	1
  2933   00096A  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  2934   00096C  0E01               	movlw	1
  2935   00096E  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  2936   000970  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  2937   000974                     
  2938                           ;main.c: 268:                             LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "Lood
      +                          ing");
  2939   000974  0E55               	movlw	low _LCD_1
  2940   000976  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  2941   000978  0E02               	movlw	2
  2942   00097A  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  2943   00097C  0E01               	movlw	1
  2944   00097E  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  2945   000980  0ECA               	movlw	low STR_26
  2946   000982  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  2947   000984  0EFF               	movlw	high STR_26
  2948   000986  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  2949   000988  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  2950   00098C                     
  2951                           ;main.c: 269:                             _delay((unsigned long)((500)*(8000000/4000.0))
      +                          );
  2952   00098C  0E06               	movlw	6
  2953   00098E  6E4F               	movwf	(??_main+1)^0,c
  2954   000990  0E13               	movlw	19
  2955   000992  6E4E               	movwf	??_main^0,c
  2956   000994  0EAE               	movlw	174
  2957   000996                     u6407:
  2958   000996  2EE8               	decfsz	wreg,f,c
  2959   000998  D7FE               	bra	u6407
  2960   00099A  2E4E               	decfsz	??_main^0,f,c
  2961   00099C  D7FC               	bra	u6407
  2962   00099E  2E4F               	decfsz	(??_main+1)^0,f,c
  2963   0009A0  D7FA               	bra	u6407
  2964   0009A2                     
  2965                           ;main.c: 271:                             Data.Light_Status = 1;
  2966   0009A2  5063               	movf	(_Data+2)^0,w,c	;volatile
  2967   0009A4  0BCF               	andlw	-49
  2968   0009A6  0910               	iorlw	16
  2969   0009A8  6E63               	movwf	(_Data+2)^0,c	;volatile
  2970   0009AA                     
  2971                           ;main.c: 272:                             APP_CheckLights(&Data);
  2972   0009AA  0E61               	movlw	low _Data
  2973   0009AC  6E10               	movwf	APP_CheckLights@MyData^0,c
  2974   0009AE  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  2975                           
  2976                           ;main.c: 273:                         } else if (2 == flag_1) {
  2977   0009B2  EF41  F005         	goto	l6354
  2978   0009B6                     l6330:
  2979   0009B6  0E02               	movlw	2
  2980   0009B8  1879               	xorwf	_flag_1^0,w,c
  2981   0009BA  A4D8               	btfss	status,2,c
  2982   0009BC  EFE2  F004         	goto	u5531
  2983   0009C0  EFE4  F004         	goto	u5530
  2984   0009C4                     u5531:
  2985   0009C4  EF11  F005         	goto	l6342
  2986   0009C8                     u5530:
  2987   0009C8                     
  2988                           ;main.c: 274:                             LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  2989   0009C8  0E55               	movlw	low _LCD_1
  2990   0009CA  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  2991   0009CC  0E01               	movlw	1
  2992   0009CE  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  2993   0009D0  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  2994                           
  2995                           ;main.c: 275:                             LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  2996   0009D4  0E55               	movlw	low _LCD_1
  2997   0009D6  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  2998   0009D8  0E01               	movlw	1
  2999   0009DA  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  3000   0009DC  0E01               	movlw	1
  3001   0009DE  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  3002   0009E0  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  3003   0009E4                     
  3004                           ;main.c: 276:                             LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "Lood
      +                          ing");
  3005   0009E4  0E55               	movlw	low _LCD_1
  3006   0009E6  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3007   0009E8  0E02               	movlw	2
  3008   0009EA  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3009   0009EC  0E01               	movlw	1
  3010   0009EE  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3011   0009F0  0ECA               	movlw	low STR_26
  3012   0009F2  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3013   0009F4  0EFF               	movlw	high STR_26
  3014   0009F6  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3015   0009F8  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3016   0009FC                     
  3017                           ;main.c: 277:                             _delay((unsigned long)((500)*(8000000/4000.0))
      +                          );
  3018   0009FC  0E06               	movlw	6
  3019   0009FE  6E4F               	movwf	(??_main+1)^0,c
  3020   000A00  0E13               	movlw	19
  3021   000A02  6E4E               	movwf	??_main^0,c
  3022   000A04  0EAE               	movlw	174
  3023   000A06                     u6417:
  3024   000A06  2EE8               	decfsz	wreg,f,c
  3025   000A08  D7FE               	bra	u6417
  3026   000A0A  2E4E               	decfsz	??_main^0,f,c
  3027   000A0C  D7FC               	bra	u6417
  3028   000A0E  2E4F               	decfsz	(??_main+1)^0,f,c
  3029   000A10  D7FA               	bra	u6417
  3030   000A12                     
  3031                           ;main.c: 278:                             Data.Light_Status = 2;
  3032   000A12  5063               	movf	(_Data+2)^0,w,c	;volatile
  3033   000A14  0BCF               	andlw	-49
  3034   000A16  0920               	iorlw	32
  3035   000A18  6E63               	movwf	(_Data+2)^0,c	;volatile
  3036   000A1A                     
  3037                           ;main.c: 279:                             Data.Light = 15;
  3038   000A1A  0E0F               	movlw	15
  3039   000A1C  6E64               	movwf	(_Data+3)^0,c	;volatile
  3040                           
  3041                           ;main.c: 280:                         } else if (9 == flag_1) {
  3042   000A1E  EF41  F005         	goto	l6354
  3043   000A22                     l6342:
  3044   000A22  0E09               	movlw	9
  3045   000A24  1879               	xorwf	_flag_1^0,w,c
  3046   000A26  A4D8               	btfss	status,2,c
  3047   000A28  EF18  F005         	goto	u5541
  3048   000A2C  EF1A  F005         	goto	u5540
  3049   000A30                     u5541:
  3050   000A30  EF1C  F005         	goto	l6348
  3051   000A34                     u5540:
  3052   000A34  EFCF  F001         	goto	l6126
  3053   000A38                     l6348:
  3054                           
  3055                           ;main.c: 283:                             LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  3056   000A38  0E55               	movlw	low _LCD_1
  3057   000A3A  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  3058   000A3C  0E01               	movlw	1
  3059   000A3E  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  3060   000A40  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  3061                           
  3062                           ;main.c: 284:                             LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  3063   000A44  0E55               	movlw	low _LCD_1
  3064   000A46  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  3065   000A48  0E01               	movlw	1
  3066   000A4A  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  3067   000A4C  0E01               	movlw	1
  3068   000A4E  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  3069   000A50  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  3070   000A54                     
  3071                           ;main.c: 285:                             LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "Inva
      +                          lid Number");
  3072   000A54  0E55               	movlw	low _LCD_1
  3073   000A56  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3074   000A58  0E02               	movlw	2
  3075   000A5A  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3076   000A5C  0E01               	movlw	1
  3077   000A5E  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3078   000A60  0E32               	movlw	low STR_28
  3079   000A62  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3080   000A64  0EFF               	movlw	high STR_28
  3081   000A66  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3082   000A68  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3083   000A6C                     
  3084                           ;main.c: 286:                             _delay((unsigned long)((1000)*(8000000/4000.0)
      +                          ));
  3085   000A6C  0E0B               	movlw	11
  3086   000A6E  6E4F               	movwf	(??_main+1)^0,c
  3087   000A70  0E26               	movlw	38
  3088   000A72  6E4E               	movwf	??_main^0,c
  3089   000A74  0E5E               	movlw	94
  3090   000A76                     u6427:
  3091   000A76  2EE8               	decfsz	wreg,f,c
  3092   000A78  D7FE               	bra	u6427
  3093   000A7A  2E4E               	decfsz	??_main^0,f,c
  3094   000A7C  D7FC               	bra	u6427
  3095   000A7E  2E4F               	decfsz	(??_main+1)^0,f,c
  3096   000A80  D7FA               	bra	u6427
  3097   000A82                     l6354:
  3098                           
  3099                           ;main.c: 289:                     APP_CheckLights(&Data);
  3100   000A82  0E61               	movlw	low _Data
  3101   000A84  6E10               	movwf	APP_CheckLights@MyData^0,c
  3102   000A86  EC1E  F00C         	call	_APP_CheckLights	;wreg free
  3103   000A8A                     
  3104                           ;main.c: 291:                     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  3105   000A8A  0E55               	movlw	low _LCD_1
  3106   000A8C  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  3107   000A8E  0E01               	movlw	1
  3108   000A90  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  3109   000A92  0E01               	movlw	1
  3110   000A94  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  3111   000A96  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  3112   000A9A  EF2B  F004         	goto	l6290
  3113   000A9E                     l6358:
  3114                           
  3115                           ;main.c: 294:                 LCD_voidSetCursorPos_4Bit(&LCD_1, 4, 1);
  3116   000A9E  0E55               	movlw	low _LCD_1
  3117   000AA0  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  3118   000AA2  0E04               	movlw	4
  3119   000AA4  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  3120   000AA6  0E01               	movlw	1
  3121   000AA8  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  3122   000AAA  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  3123   000AAE                     
  3124                           ;main.c: 295:                 LCD4Bit_voidSendString_Pos(&LCD_1, 4, 1, "Wrong Id");
  3125   000AAE  0E55               	movlw	low _LCD_1
  3126   000AB0  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3127   000AB2  0E04               	movlw	4
  3128   000AB4  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3129   000AB6  0E01               	movlw	1
  3130   000AB8  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3131   000ABA  0EA8               	movlw	low STR_29
  3132   000ABC  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3133   000ABE  0EFF               	movlw	high STR_29
  3134   000AC0  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3135   000AC2  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3136   000AC6                     
  3137                           ;main.c: 296:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  3138   000AC6  0E06               	movlw	6
  3139   000AC8  6E4F               	movwf	(??_main+1)^0,c
  3140   000ACA  0E13               	movlw	19
  3141   000ACC  6E4E               	movwf	??_main^0,c
  3142   000ACE  0EAE               	movlw	174
  3143   000AD0                     u6437:
  3144   000AD0  2EE8               	decfsz	wreg,f,c
  3145   000AD2  D7FE               	bra	u6437
  3146   000AD4  2E4E               	decfsz	??_main^0,f,c
  3147   000AD6  D7FC               	bra	u6437
  3148   000AD8  2E4F               	decfsz	(??_main+1)^0,f,c
  3149   000ADA  D7FA               	bra	u6437
  3150   000ADC                     
  3151                           ;main.c: 297:                 LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  3152   000ADC  0E55               	movlw	low _LCD_1
  3153   000ADE  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  3154   000AE0  0E01               	movlw	1
  3155   000AE2  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  3156   000AE4  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  3157   000AE8                     
  3158                           ;main.c: 298:                 (WDTCONbits.SWDTEN = 0);
  3159   000AE8  90D1               	bcf	209,0,c	;volatile
  3160   000AEA  EFCF  F001         	goto	l6126
  3161   000AEE                     l127:
  3162   000AEE  EF07  F000         	goto	start
  3163   000AF2                     __end_of_main:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _LED_voidLedOn *****************
  3167 ;; Defined at:
  3168 ;;		line 19 in file "HAL/LED/LED_program.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  Copy_stLed      1    8[COMRAM] PTR struct .
  3171 ;;		 -> LED_LOCK(3), 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:        3 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 2
  3190 ;; This function calls:
  3191 ;;		_GPIO_VoidSetPinMode
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text1
  3198   002F14                     __ptext1:
  3199                           	callstack 0
  3200   002F14                     _LED_voidLedOn:
  3201                           	callstack 28
  3202   002F14                     
  3203                           ;HAL/LED/LED_program.c: 19: void LED_voidLedOn(LED_T *Copy_stLed);HAL/LED/LED_program.c:
      +                           20: {;HAL/LED/LED_program.c: 21:     switch (Copy_stLed->Stauts)
  3204   002F14  EFAE  F017         	goto	l5840
  3205   002F18                     l5834:
  3206                           
  3207                           ;HAL/LED/LED_program.c: 24:         GPIO_VoidSetPinMode(Copy_stLed->Port, Copy_stLed->Pi
      +                          n, 0);
  3208   002F18  5009               	movf	LED_voidLedOn@Copy_stLed^0,w,c
  3209   002F1A  6ED9               	movwf	fsr2l,c
  3210   002F1C  6ADA               	clrf	fsr2h,c
  3211   002F1E  0E01               	movlw	1
  3212   002F20  26D9               	addwf	fsr2l,f,c
  3213   002F22  50DF               	movf	indf2,w,c
  3214   002F24  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
  3215   002F26  0E00               	movlw	0
  3216   002F28  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
  3217   002F2A  5009               	movf	LED_voidLedOn@Copy_stLed^0,w,c
  3218   002F2C  6ED9               	movwf	fsr2l,c
  3219   002F2E  6ADA               	clrf	fsr2h,c
  3220   002F30  50DF               	movf	indf2,w,c
  3221   002F32  EC0E  F015         	call	_GPIO_VoidSetPinMode
  3222                           
  3223                           ;HAL/LED/LED_program.c: 25:         break;
  3224   002F36  EFC8  F017         	goto	l467
  3225   002F3A                     l5836:
  3226                           
  3227                           ;HAL/LED/LED_program.c: 28:         GPIO_VoidSetPinMode(Copy_stLed->Port, Copy_stLed->Pi
      +                          n, 1);
  3228   002F3A  5009               	movf	LED_voidLedOn@Copy_stLed^0,w,c
  3229   002F3C  6ED9               	movwf	fsr2l,c
  3230   002F3E  6ADA               	clrf	fsr2h,c
  3231   002F40  0E01               	movlw	1
  3232   002F42  26D9               	addwf	fsr2l,f,c
  3233   002F44  50DF               	movf	indf2,w,c
  3234   002F46  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
  3235   002F48  0E01               	movlw	1
  3236   002F4A  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
  3237   002F4C  5009               	movf	LED_voidLedOn@Copy_stLed^0,w,c
  3238   002F4E  6ED9               	movwf	fsr2l,c
  3239   002F50  6ADA               	clrf	fsr2h,c
  3240   002F52  50DF               	movf	indf2,w,c
  3241   002F54  EC0E  F015         	call	_GPIO_VoidSetPinMode
  3242                           
  3243                           ;HAL/LED/LED_program.c: 30:         break;
  3244   002F58  EFC8  F017         	goto	l467
  3245   002F5C                     l5840:
  3246   002F5C  5009               	movf	LED_voidLedOn@Copy_stLed^0,w,c
  3247   002F5E  6ED9               	movwf	fsr2l,c
  3248   002F60  6ADA               	clrf	fsr2h,c
  3249   002F62  0E02               	movlw	2
  3250   002F64  26D9               	addwf	fsr2l,f,c
  3251   002F66  50DF               	movf	indf2,w,c
  3252   002F68  6E0A               	movwf	??_LED_voidLedOn^0,c
  3253   002F6A  6A0B               	clrf	(??_LED_voidLedOn+1)^0,c
  3254                           
  3255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3256                           ; Switch size 1, requested type "simple"
  3257                           ; Number of cases is 1, Range of values is 0 to 0
  3258                           ; switch strategies available:
  3259                           ; Name         Instructions Cycles
  3260                           ; simple_byte            4     3 (average)
  3261                           ;	Chosen strategy is simple_byte
  3262   002F6C  500B               	movf	(??_LED_voidLedOn+1)^0,w,c
  3263   002F6E  0A00               	xorlw	0	; case 0
  3264   002F70  B4D8               	btfsc	status,2,c
  3265   002F72  EFBD  F017         	goto	l7198
  3266   002F76  EFC8  F017         	goto	l467
  3267   002F7A                     l7198:
  3268                           
  3269                           ; Switch size 1, requested type "simple"
  3270                           ; Number of cases is 2, Range of values is 0 to 1
  3271                           ; switch strategies available:
  3272                           ; Name         Instructions Cycles
  3273                           ; simple_byte            7     4 (average)
  3274                           ;	Chosen strategy is simple_byte
  3275   002F7A  500A               	movf	??_LED_voidLedOn^0,w,c
  3276   002F7C  0A00               	xorlw	0	; case 0
  3277   002F7E  B4D8               	btfsc	status,2,c
  3278   002F80  EF9D  F017         	goto	l5836
  3279   002F84  0A01               	xorlw	1	; case 1
  3280   002F86  B4D8               	btfsc	status,2,c
  3281   002F88  EF8C  F017         	goto	l5834
  3282   002F8C  EFC8  F017         	goto	l467
  3283   002F90                     l467:
  3284   002F90  0012               	return		;funcret
  3285   002F92                     __end_of_LED_voidLedOn:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _LED_voidLedOff *****************
  3289 ;; Defined at:
  3290 ;;		line 37 in file "HAL/LED/LED_program.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  Copy_stLed      1    8[COMRAM] PTR struct .
  3293 ;;		 -> LED_LOCK(3), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  1    wreg      void 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3305 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;Total ram usage:        3 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 2
  3312 ;; This function calls:
  3313 ;;		_GPIO_VoidSetPinMode
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           	psect	text2
  3320   002F92                     __ptext2:
  3321                           	callstack 0
  3322   002F92                     _LED_voidLedOff:
  3323                           	callstack 28
  3324   002F92                     
  3325                           ;HAL/LED/LED_program.c: 37: void LED_voidLedOff(LED_T *Copy_stLed);HAL/LED/LED_program.c
      +                          : 38: {;HAL/LED/LED_program.c: 39:     switch (Copy_stLed->Stauts)
  3326   002F92  EFED  F017         	goto	l5854
  3327   002F96                     l5848:
  3328                           
  3329                           ;HAL/LED/LED_program.c: 42:         GPIO_VoidSetPinMode(Copy_stLed->Port, Copy_stLed->Pi
      +                          n, 1);
  3330   002F96  5009               	movf	LED_voidLedOff@Copy_stLed^0,w,c
  3331   002F98  6ED9               	movwf	fsr2l,c
  3332   002F9A  6ADA               	clrf	fsr2h,c
  3333   002F9C  0E01               	movlw	1
  3334   002F9E  26D9               	addwf	fsr2l,f,c
  3335   002FA0  50DF               	movf	indf2,w,c
  3336   002FA2  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
  3337   002FA4  0E01               	movlw	1
  3338   002FA6  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
  3339   002FA8  5009               	movf	LED_voidLedOff@Copy_stLed^0,w,c
  3340   002FAA  6ED9               	movwf	fsr2l,c
  3341   002FAC  6ADA               	clrf	fsr2h,c
  3342   002FAE  50DF               	movf	indf2,w,c
  3343   002FB0  EC0E  F015         	call	_GPIO_VoidSetPinMode
  3344                           
  3345                           ;HAL/LED/LED_program.c: 43:         break;
  3346   002FB4  EF07  F018         	goto	l475
  3347   002FB8                     l5850:
  3348                           
  3349                           ;HAL/LED/LED_program.c: 46:         GPIO_VoidSetPinMode(Copy_stLed->Port, Copy_stLed->Pi
      +                          n, 0);
  3350   002FB8  5009               	movf	LED_voidLedOff@Copy_stLed^0,w,c
  3351   002FBA  6ED9               	movwf	fsr2l,c
  3352   002FBC  6ADA               	clrf	fsr2h,c
  3353   002FBE  0E01               	movlw	1
  3354   002FC0  26D9               	addwf	fsr2l,f,c
  3355   002FC2  50DF               	movf	indf2,w,c
  3356   002FC4  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
  3357   002FC6  0E00               	movlw	0
  3358   002FC8  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
  3359   002FCA  5009               	movf	LED_voidLedOff@Copy_stLed^0,w,c
  3360   002FCC  6ED9               	movwf	fsr2l,c
  3361   002FCE  6ADA               	clrf	fsr2h,c
  3362   002FD0  50DF               	movf	indf2,w,c
  3363   002FD2  EC0E  F015         	call	_GPIO_VoidSetPinMode
  3364                           
  3365                           ;HAL/LED/LED_program.c: 47:         break;
  3366   002FD6  EF07  F018         	goto	l475
  3367   002FDA                     l5854:
  3368   002FDA  5009               	movf	LED_voidLedOff@Copy_stLed^0,w,c
  3369   002FDC  6ED9               	movwf	fsr2l,c
  3370   002FDE  6ADA               	clrf	fsr2h,c
  3371   002FE0  0E02               	movlw	2
  3372   002FE2  26D9               	addwf	fsr2l,f,c
  3373   002FE4  50DF               	movf	indf2,w,c
  3374   002FE6  6E0A               	movwf	??_LED_voidLedOff^0,c
  3375   002FE8  6A0B               	clrf	(??_LED_voidLedOff+1)^0,c
  3376                           
  3377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3378                           ; Switch size 1, requested type "simple"
  3379                           ; Number of cases is 1, Range of values is 0 to 0
  3380                           ; switch strategies available:
  3381                           ; Name         Instructions Cycles
  3382                           ; simple_byte            4     3 (average)
  3383                           ;	Chosen strategy is simple_byte
  3384   002FEA  500B               	movf	(??_LED_voidLedOff+1)^0,w,c
  3385   002FEC  0A00               	xorlw	0	; case 0
  3386   002FEE  B4D8               	btfsc	status,2,c
  3387   002FF0  EFFC  F017         	goto	l7200
  3388   002FF4  EF07  F018         	goto	l475
  3389   002FF8                     l7200:
  3390                           
  3391                           ; Switch size 1, requested type "simple"
  3392                           ; Number of cases is 2, Range of values is 0 to 1
  3393                           ; switch strategies available:
  3394                           ; Name         Instructions Cycles
  3395                           ; simple_byte            7     4 (average)
  3396                           ;	Chosen strategy is simple_byte
  3397   002FF8  500A               	movf	??_LED_voidLedOff^0,w,c
  3398   002FFA  0A00               	xorlw	0	; case 0
  3399   002FFC  B4D8               	btfsc	status,2,c
  3400   002FFE  EFDC  F017         	goto	l5850
  3401   003002  0A01               	xorlw	1	; case 1
  3402   003004  B4D8               	btfsc	status,2,c
  3403   003006  EFCB  F017         	goto	l5848
  3404   00300A  EF07  F018         	goto	l475
  3405   00300E                     l475:
  3406   00300E  0012               	return		;funcret
  3407   003010                     __end_of_LED_voidLedOff:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _LCD_ChoisePrint *****************
  3411 ;; Defined at:
  3412 ;;		line 124 in file "appliction.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  User_choise     1   74[COMRAM] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      unsigned char 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 8
  3433 ;; This function calls:
  3434 ;;		_APP_Get_Number
  3435 ;;		_LCD4Bit_voidSendCommand
  3436 ;;		_LCD4Bit_voidSendNumber
  3437 ;;		_LCD4Bit_voidSendString_Pos
  3438 ;;		_LCD_voidSetCursorPos_4Bit
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text3
  3445   002738                     __ptext3:
  3446                           	callstack 0
  3447   002738                     _LCD_ChoisePrint:
  3448                           	callstack 22
  3449   002738                     
  3450                           ;appliction.c: 127:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  3451   002738  0E55               	movlw	low _LCD_1
  3452   00273A  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  3453   00273C  0E01               	movlw	1
  3454   00273E  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  3455   002740  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  3456   002744                     
  3457                           ;appliction.c: 128:     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 3);
  3458   002744  0E55               	movlw	low _LCD_1
  3459   002746  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  3460   002748  0E01               	movlw	1
  3461   00274A  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  3462   00274C  0E03               	movlw	3
  3463   00274E  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  3464   002750  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  3465   002754                     
  3466                           ;appliction.c: 129:     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 3, "Choose option ");
  3467   002754  0E55               	movlw	low _LCD_1
  3468   002756  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3469   002758  0E01               	movlw	1
  3470   00275A  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3471   00275C  0E03               	movlw	3
  3472   00275E  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3473   002760  0E23               	movlw	low STR_33
  3474   002762  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3475   002764  0EFF               	movlw	high STR_33
  3476   002766  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3477   002768  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3478   00276C                     
  3479                           ;appliction.c: 130:     LCD4Bit_voidSendString_Pos(&LCD_1, 2, 1, "1-Temp");
  3480   00276C  0E55               	movlw	low _LCD_1
  3481   00276E  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3482   002770  0E02               	movlw	2
  3483   002772  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3484   002774  0E01               	movlw	1
  3485   002776  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3486   002778  0ED2               	movlw	low STR_34
  3487   00277A  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3488   00277C  0EFF               	movlw	high STR_34
  3489   00277E  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3490   002780  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3491   002784                     
  3492                           ;appliction.c: 131:     LCD4Bit_voidSendString_Pos(&LCD_1, 2, 8, "2-Door");
  3493   002784  0E55               	movlw	low _LCD_1
  3494   002786  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3495   002788  0E02               	movlw	2
  3496   00278A  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3497   00278C  0E08               	movlw	8
  3498   00278E  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3499   002790  0ED9               	movlw	low STR_35
  3500   002792  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3501   002794  0EFF               	movlw	high STR_35
  3502   002796  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3503   002798  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3504   00279C                     
  3505                           ;appliction.c: 132:     LCD4Bit_voidSendString_Pos(&LCD_1, 2, 16, "3-TV");
  3506   00279C  0E55               	movlw	low _LCD_1
  3507   00279E  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3508   0027A0  0E02               	movlw	2
  3509   0027A2  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3510   0027A4  0E10               	movlw	16
  3511   0027A6  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3512   0027A8  0EEC               	movlw	low STR_36
  3513   0027AA  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3514   0027AC  0EFF               	movlw	high STR_36
  3515   0027AE  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3516   0027B0  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3517   0027B4                     
  3518                           ;appliction.c: 133:     LCD4Bit_voidSendString_Pos(&LCD_1, 3, 1, "4-Lights");
  3519   0027B4  0E55               	movlw	low _LCD_1
  3520   0027B6  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  3521   0027B8  0E03               	movlw	3
  3522   0027BA  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  3523   0027BC  0E01               	movlw	1
  3524   0027BE  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  3525   0027C0  0E9F               	movlw	low STR_37
  3526   0027C2  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  3527   0027C4  0EFF               	movlw	high STR_37
  3528   0027C6  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  3529   0027C8  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  3530   0027CC                     
  3531                           ;appliction.c: 134:     User_choise = APP_Get_Number(4, 1);
  3532   0027CC  0E01               	movlw	1
  3533   0027CE  6E42               	movwf	APP_Get_Number@y^0,c
  3534   0027D0  0E04               	movlw	4
  3535   0027D2  ECFA  F013         	call	_APP_Get_Number
  3536   0027D6  5042               	movf	?_APP_Get_Number^0,w,c
  3537   0027D8  6E4B               	movwf	LCD_ChoisePrint@User_choise^0,c
  3538   0027DA                     
  3539                           ;appliction.c: 135:     LCD4Bit_voidSendNumber(&LCD_1, User_choise, 4, 1);
  3540   0027DA  0E55               	movlw	low _LCD_1
  3541   0027DC  6E30               	movwf	LCD4Bit_voidSendNumber@Copy_stLCD4Bit^0,c
  3542   0027DE  C04B  F031         	movff	LCD_ChoisePrint@User_choise,LCD4Bit_voidSendNumber@Copy_u16Number
  3543   0027E2  6A32               	clrf	(LCD4Bit_voidSendNumber@Copy_u16Number+1)^0,c
  3544   0027E4  0E04               	movlw	4
  3545   0027E6  6E33               	movwf	LCD4Bit_voidSendNumber@Copy_u8Row^0,c
  3546   0027E8  0E01               	movlw	1
  3547   0027EA  6E34               	movwf	LCD4Bit_voidSendNumber@Copy_u8Column^0,c
  3548   0027EC  ECB5  F016         	call	_LCD4Bit_voidSendNumber	;wreg free
  3549   0027F0                     
  3550                           ;appliction.c: 136:     return User_choise;
  3551   0027F0  504B               	movf	LCD_ChoisePrint@User_choise^0,w,c
  3552   0027F2  0012               	return		;funcret
  3553   0027F4                     __end_of_LCD_ChoisePrint:
  3554                           	callstack 0
  3555                           
  3556 ;; *************** function _I2C_u8ReadRegByte *****************
  3557 ;; Defined at:
  3558 ;;		line 265 in file "MCAL/I2C/I2C.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  Copy_stI2C      1    3[COMRAM] PTR const struct .
  3561 ;;		 -> i2c_obj(5), 
  3562 ;;  Copy_u8I2C_A    1    4[COMRAM] unsigned char 
  3563 ;;  Copy_u8Byte_    1    5[COMRAM] unsigned char 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  returnedData    1    6[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      unsigned char 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3575 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 2
  3582 ;; This function calls:
  3583 ;;		_I2C_u8ReadByteBlocking
  3584 ;;		_I2C_u8WriteByteBlocking
  3585 ;;		_I2C_voidSendRebeatStartCond
  3586 ;;		_I2C_voidSendStartCond
  3587 ;;		_I2C_voidSendStopCond
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text4
  3594   003290                     __ptext4:
  3595                           	callstack 0
  3596   003290                     _I2C_u8ReadRegByte:
  3597                           	callstack 28
  3598   003290                     
  3599                           ;MCAL/I2C/I2C.c: 265: u8 I2C_u8ReadRegByte(const I2C_t *Copy_stI2C, u8 Copy_u8I2C_Addres
      +                          s, u8 Copy_u8Byte_Address);MCAL/I2C/I2C.c: 266: {;MCAL/I2C/I2C.c: 267:     u8 returnedDa
      +                          ta = 0;
  3600   003290  0E00               	movlw	0
  3601   003292  6E07               	movwf	I2C_u8ReadRegByte@returnedData^0,c
  3602                           
  3603                           ;MCAL/I2C/I2C.c: 268:     if (((void*)0) != Copy_stI2C)
  3604   003294  5004               	movf	I2C_u8ReadRegByte@Copy_stI2C^0,w,c
  3605   003296  B4D8               	btfsc	status,2,c
  3606   003298  EF50  F019         	goto	u5121
  3607   00329C  EF52  F019         	goto	u5120
  3608   0032A0                     u5121:
  3609   0032A0  EF77  F019         	goto	l5864
  3610   0032A4                     u5120:
  3611   0032A4                     
  3612                           ;MCAL/I2C/I2C.c: 269:     {;MCAL/I2C/I2C.c: 270:         I2C_voidSendStartCond(Copy_stI2
      +                          C);
  3613   0032A4  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_voidSendStartCond@Copy_stI2C
  3614   0032A8  ECF4  F01B         	call	_I2C_voidSendStartCond	;wreg free
  3615                           
  3616                           ;MCAL/I2C/I2C.c: 271:         I2C_u8WriteByteBlocking(Copy_stI2C, Copy_u8I2C_Address);
  3617   0032AC  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_u8WriteByteBlocking@Copy_stI2C
  3618   0032B0  C005  F002         	movff	I2C_u8ReadRegByte@Copy_u8I2C_Address,I2C_u8WriteByteBlocking@Copy_u8Data
  3619   0032B4  ECD5  F019         	call	_I2C_u8WriteByteBlocking	;wreg free
  3620                           
  3621                           ;MCAL/I2C/I2C.c: 272:         I2C_u8WriteByteBlocking(Copy_stI2C, Copy_u8Byte_Address);
  3622   0032B8  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_u8WriteByteBlocking@Copy_stI2C
  3623   0032BC  C006  F002         	movff	I2C_u8ReadRegByte@Copy_u8Byte_Address,I2C_u8WriteByteBlocking@Copy_u8Data
  3624   0032C0  ECD5  F019         	call	_I2C_u8WriteByteBlocking	;wreg free
  3625                           
  3626                           ;MCAL/I2C/I2C.c: 273:         I2C_voidSendRebeatStartCond(Copy_stI2C);
  3627   0032C4  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_voidSendRebeatStartCond@Copy_stI2C
  3628   0032C8  ECD0  F01B         	call	_I2C_voidSendRebeatStartCond	;wreg free
  3629                           
  3630                           ;MCAL/I2C/I2C.c: 274:         I2C_u8WriteByteBlocking(Copy_stI2C, Copy_u8I2C_Address + 1
      +                          );
  3631   0032CC  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_u8WriteByteBlocking@Copy_stI2C
  3632   0032D0  2805               	incf	I2C_u8ReadRegByte@Copy_u8I2C_Address^0,w,c
  3633   0032D2  6E02               	movwf	I2C_u8WriteByteBlocking@Copy_u8Data^0,c
  3634   0032D4  ECD5  F019         	call	_I2C_u8WriteByteBlocking	;wreg free
  3635                           
  3636                           ;MCAL/I2C/I2C.c: 275:         returnedData = I2C_u8ReadByteBlocking(Copy_stI2C, 0);
  3637   0032D8  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_u8ReadByteBlocking@Copy_stI2C
  3638   0032DC  0E00               	movlw	0
  3639   0032DE  6E02               	movwf	I2C_u8ReadByteBlocking@Copy_u8Ack^0,c
  3640   0032E0  ECFF  F019         	call	_I2C_u8ReadByteBlocking	;wreg free
  3641   0032E4  6E07               	movwf	I2C_u8ReadRegByte@returnedData^0,c
  3642                           
  3643                           ;MCAL/I2C/I2C.c: 276:         I2C_voidSendStopCond(Copy_stI2C);
  3644   0032E6  C004  F001         	movff	I2C_u8ReadRegByte@Copy_stI2C,I2C_voidSendStopCond@Copy_stI2C
  3645   0032EA  ECE2  F01B         	call	_I2C_voidSendStopCond	;wreg free
  3646   0032EE                     l5864:
  3647                           
  3648                           ;MCAL/I2C/I2C.c: 278:     return returnedData;
  3649   0032EE  5007               	movf	I2C_u8ReadRegByte@returnedData^0,w,c
  3650   0032F0  0012               	return		;funcret
  3651   0032F2                     __end_of_I2C_u8ReadRegByte:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _I2C_voidSendRebeatStartCond *****************
  3655 ;; Defined at:
  3656 ;;		line 102 in file "MCAL/I2C/I2C.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  Copy_stI2C      1    0[COMRAM] PTR const struct .
  3659 ;;		 -> i2c_obj(5), 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:        1 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_I2C_u8ReadRegByte
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text5
  3686   0037A0                     __ptext5:
  3687                           	callstack 0
  3688   0037A0                     _I2C_voidSendRebeatStartCond:
  3689                           	callstack 28
  3690   0037A0                     
  3691                           ;MCAL/I2C/I2C.c: 102: void I2C_voidSendRebeatStartCond(const I2C_t *Copy_stI2C);MCAL/I2C
      +                          /I2C.c: 103: {;MCAL/I2C/I2C.c: 104:     if (((void*)0) != Copy_stI2C)
  3692   0037A0  5001               	movf	I2C_voidSendRebeatStartCond@Copy_stI2C^0,w,c
  3693   0037A2  B4D8               	btfsc	status,2,c
  3694   0037A4  EFD6  F01B         	goto	u5041
  3695   0037A8  EFD8  F01B         	goto	u5040
  3696   0037AC                     u5041:
  3697   0037AC  EFE1  F01B         	goto	l858
  3698   0037B0                     u5040:
  3699   0037B0                     
  3700                           ;MCAL/I2C/I2C.c: 105:     {;MCAL/I2C/I2C.c: 106:         SSPCON2bits.RSEN = 1;
  3701   0037B0  82C5               	bsf	197,1,c	;volatile
  3702   0037B2                     l855:
  3703                           
  3704                           ;MCAL/I2C/I2C.c: 107:         while (SSPCON2bits.RSEN)
  3705   0037B2  B2C5               	btfsc	197,1,c	;volatile
  3706   0037B4  EFDE  F01B         	goto	u5051
  3707   0037B8  EFE0  F01B         	goto	u5050
  3708   0037BC                     u5051:
  3709   0037BC  EFD9  F01B         	goto	l855
  3710   0037C0                     u5050:
  3711   0037C0                     
  3712                           ;MCAL/I2C/I2C.c: 109:         PIR1bits.SSPIF = 0;
  3713   0037C0  969E               	bcf	158,3,c	;volatile
  3714   0037C2                     l858:
  3715   0037C2  0012               	return		;funcret
  3716   0037C4                     __end_of_I2C_voidSendRebeatStartCond:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _I2C_u8ReadByteBlocking *****************
  3720 ;; Defined at:
  3721 ;;		line 147 in file "MCAL/I2C/I2C.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  Copy_stI2C      1    0[COMRAM] PTR const struct .
  3724 ;;		 -> i2c_obj(5), 
  3725 ;;  Copy_u8Ack      1    1[COMRAM] unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  Local_u8Retu    1    2[COMRAM] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      unsigned char 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;Total ram usage:        3 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_I2C_u8ReadRegByte
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text6
  3752   0033FE                     __ptext6:
  3753                           	callstack 0
  3754   0033FE                     _I2C_u8ReadByteBlocking:
  3755                           	callstack 28
  3756   0033FE                     
  3757                           ;MCAL/I2C/I2C.c: 151:     if (((void*)0) != Copy_stI2C)
  3758   0033FE  5001               	movf	I2C_u8ReadByteBlocking@Copy_stI2C^0,w,c
  3759   003400  B4D8               	btfsc	status,2,c
  3760   003402  EF05  F01A         	goto	u5061
  3761   003406  EF07  F01A         	goto	u5060
  3762   00340A                     u5061:
  3763   00340A  EF27  F01A         	goto	l884
  3764   00340E                     u5060:
  3765   00340E                     
  3766                           ;MCAL/I2C/I2C.c: 152:     {;MCAL/I2C/I2C.c: 153:         (SSPCON2bits.RCEN = 1);
  3767   00340E  86C5               	bsf	197,3,c	;volatile
  3768   003410                     l878:
  3769                           
  3770                           ;MCAL/I2C/I2C.c: 154:         while (!SSPSTATbits.BF)
  3771   003410  A0C7               	btfss	199,0,c	;volatile
  3772   003412  EF0D  F01A         	goto	u5071
  3773   003416  EF0F  F01A         	goto	u5070
  3774   00341A                     u5071:
  3775   00341A  EF08  F01A         	goto	l878
  3776   00341E                     u5070:
  3777   00341E                     
  3778                           ;MCAL/I2C/I2C.c: 156:         Local_u8Return = SSPBUF;
  3779   00341E  CFC9 F003          	movff	4041,I2C_u8ReadByteBlocking@Local_u8Return	;volatile
  3780   003422                     
  3781                           ;MCAL/I2C/I2C.c: 157:         if (Copy_u8Ack == 0)
  3782   003422  5002               	movf	I2C_u8ReadByteBlocking@Copy_u8Ack^0,w,c
  3783   003424  A4D8               	btfss	status,2,c
  3784   003426  EF17  F01A         	goto	u5081
  3785   00342A  EF19  F01A         	goto	u5080
  3786   00342E                     u5081:
  3787   00342E  EF1C  F01A         	goto	l5770
  3788   003432                     u5080:
  3789   003432                     
  3790                           ;MCAL/I2C/I2C.c: 158:         {;MCAL/I2C/I2C.c: 159:             SSPCON2bits.ACKDT = 0;
  3791   003432  9AC5               	bcf	197,5,c	;volatile
  3792                           
  3793                           ;MCAL/I2C/I2C.c: 162:         }
  3794   003434  EF26  F01A         	goto	l5774
  3795   003438                     l5770:
  3796   003438  0402               	decf	I2C_u8ReadByteBlocking@Copy_u8Ack^0,w,c
  3797   00343A  A4D8               	btfss	status,2,c
  3798   00343C  EF22  F01A         	goto	u5091
  3799   003440  EF24  F01A         	goto	u5090
  3800   003444                     u5091:
  3801   003444  EF26  F01A         	goto	l5774
  3802   003448                     u5090:
  3803   003448                     
  3804                           ;MCAL/I2C/I2C.c: 164:         {;MCAL/I2C/I2C.c: 165:             SSPCON2bits.ACKDT = 1;
  3805   003448  8AC5               	bsf	197,5,c	;volatile
  3806                           
  3807                           ;MCAL/I2C/I2C.c: 167:             SSPCON2bits.ACKEN = 1;
  3808   00344A  88C5               	bsf	197,4,c	;volatile
  3809   00344C                     l5774:
  3810                           
  3811                           ;MCAL/I2C/I2C.c: 170:         return Local_u8Return;
  3812   00344C  5003               	movf	I2C_u8ReadByteBlocking@Local_u8Return^0,w,c
  3813   00344E                     l884:
  3814   00344E  0012               	return		;funcret
  3815   003450                     __end_of_I2C_u8ReadByteBlocking:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _I2C_SendStuct *****************
  3819 ;; Defined at:
  3820 ;;		line 69 in file "appliction.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  MyData          1    3[COMRAM] PTR volatile struct .
  3823 ;;		 -> Data(4), 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  i               1    8[COMRAM] unsigned char 
  3826 ;;  SizeOfStruct    1    7[COMRAM] unsigned char 
  3827 ;;  ptr             1    6[COMRAM] PTR unsigned char 
  3828 ;;		 -> Data(4), 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3838 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;Total ram usage:        6 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 2
  3845 ;; This function calls:
  3846 ;;		_I2C_u8WriteByteBlocking
  3847 ;;		_I2C_voidSendStartCond
  3848 ;;		_I2C_voidSendStopCond
  3849 ;;		_IdleI2C
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text7
  3856   002C26                     __ptext7:
  3857                           	callstack 0
  3858   002C26                     _I2C_SendStuct:
  3859                           	callstack 28
  3860   002C26                     
  3861                           ;appliction.c: 73:     u8 *ptr = (u8 *)MyData;
  3862   002C26  C004  F007         	movff	I2C_SendStuct@MyData,I2C_SendStuct@ptr
  3863   002C2A                     
  3864                           ;appliction.c: 74:     SizeOfStruct = sizeof(*MyData);
  3865   002C2A  0E04               	movlw	4
  3866   002C2C  6E08               	movwf	I2C_SendStuct@SizeOfStruct^0,c
  3867   002C2E                     
  3868                           ;appliction.c: 75:     IdleI2C();
  3869   002C2E  ECAA  F019         	call	_IdleI2C	;wreg free
  3870                           
  3871                           ;appliction.c: 76:     I2C_voidSendStartCond(&i2c_obj);
  3872   002C32  0E5C               	movlw	low _i2c_obj
  3873   002C34  6E01               	movwf	I2C_voidSendStartCond@Copy_stI2C^0,c
  3874   002C36  ECF4  F01B         	call	_I2C_voidSendStartCond	;wreg free
  3875   002C3A                     
  3876                           ;appliction.c: 77:     IdleI2C();
  3877   002C3A  ECAA  F019         	call	_IdleI2C	;wreg free
  3878   002C3E                     
  3879                           ;appliction.c: 78:     ACK_STATUS = I2C_u8WriteByteBlocking(&i2c_obj, 0x30);
  3880   002C3E  0E5C               	movlw	low _i2c_obj
  3881   002C40  6E01               	movwf	I2C_u8WriteByteBlocking@Copy_stI2C^0,c
  3882   002C42  0E30               	movlw	48
  3883   002C44  6E02               	movwf	I2C_u8WriteByteBlocking@Copy_u8Data^0,c
  3884   002C46  ECD5  F019         	call	_I2C_u8WriteByteBlocking	;wreg free
  3885   002C4A  6E54               	movwf	_ACK_STATUS^0,c
  3886   002C4C                     
  3887                           ;appliction.c: 79:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3888   002C4C  0E02               	movlw	2
  3889   002C4E  6E06               	movwf	(??_I2C_SendStuct+1)^0,c
  3890   002C50  0E04               	movlw	4
  3891   002C52  6E05               	movwf	??_I2C_SendStuct^0,c
  3892   002C54  0EBA               	movlw	186
  3893   002C56                     u6447:
  3894   002C56  2EE8               	decfsz	wreg,f,c
  3895   002C58  D7FE               	bra	u6447
  3896   002C5A  2E05               	decfsz	??_I2C_SendStuct^0,f,c
  3897   002C5C  D7FC               	bra	u6447
  3898   002C5E  2E06               	decfsz	(??_I2C_SendStuct+1)^0,f,c
  3899   002C60  D7FA               	bra	u6447
  3900   002C62  D000               	nop2	
  3901   002C64                     
  3902                           ;appliction.c: 80:     for (u8 i = 0; i < SizeOfStruct; i++)
  3903   002C64  0E00               	movlw	0
  3904   002C66  6E09               	movwf	I2C_SendStuct@i^0,c
  3905   002C68  EF55  F016         	goto	l5948
  3906   002C6C                     l5936:
  3907                           
  3908                           ;appliction.c: 81:     {;appliction.c: 82:         IdleI2C();
  3909   002C6C  ECAA  F019         	call	_IdleI2C	;wreg free
  3910   002C70                     
  3911                           ;appliction.c: 83:         ACK_STATUS = I2C_u8WriteByteBlocking(&i2c_obj, *(ptr + i));
  3912   002C70  0E5C               	movlw	low _i2c_obj
  3913   002C72  6E01               	movwf	I2C_u8WriteByteBlocking@Copy_stI2C^0,c
  3914   002C74  5007               	movf	I2C_SendStuct@ptr^0,w,c
  3915   002C76  2409               	addwf	I2C_SendStuct@i^0,w,c
  3916   002C78  6ED9               	movwf	fsr2l,c
  3917   002C7A  6ADA               	clrf	fsr2h,c
  3918   002C7C  50DF               	movf	indf2,w,c
  3919   002C7E  6E02               	movwf	I2C_u8WriteByteBlocking@Copy_u8Data^0,c
  3920   002C80  ECD5  F019         	call	_I2C_u8WriteByteBlocking	;wreg free
  3921   002C84  6E54               	movwf	_ACK_STATUS^0,c
  3922   002C86                     
  3923                           ;appliction.c: 84:         _delay((unsigned long)((10)*(8000000/4000.0)));
  3924   002C86  0E1A               	movlw	26
  3925   002C88  6E05               	movwf	??_I2C_SendStuct^0,c
  3926   002C8A  0EF8               	movlw	248
  3927   002C8C                     u6457:
  3928   002C8C  2EE8               	decfsz	wreg,f,c
  3929   002C8E  D7FE               	bra	u6457
  3930   002C90  2E05               	decfsz	??_I2C_SendStuct^0,f,c
  3931   002C92  D7FC               	bra	u6457
  3932   002C94  D000               	nop2	
  3933   002C96                     
  3934                           ;appliction.c: 85:         IdleI2C();
  3935   002C96  ECAA  F019         	call	_IdleI2C	;wreg free
  3936   002C9A                     
  3937                           ;appliction.c: 86:         _delay((unsigned long)((20)*(8000000/4000.0)));
  3938   002C9A  0E34               	movlw	52
  3939   002C9C  6E05               	movwf	??_I2C_SendStuct^0,c
  3940   002C9E  0EF2               	movlw	242
  3941   002CA0                     u6467:
  3942   002CA0  2EE8               	decfsz	wreg,f,c
  3943   002CA2  D7FE               	bra	u6467
  3944   002CA4  2E05               	decfsz	??_I2C_SendStuct^0,f,c
  3945   002CA6  D7FC               	bra	u6467
  3946   002CA8                     
  3947                           ;appliction.c: 87:     }
  3948   002CA8  2A09               	incf	I2C_SendStuct@i^0,f,c
  3949   002CAA                     l5948:
  3950   002CAA  5008               	movf	I2C_SendStuct@SizeOfStruct^0,w,c
  3951   002CAC  5C09               	subwf	I2C_SendStuct@i^0,w,c
  3952   002CAE  A0D8               	btfss	status,0,c
  3953   002CB0  EF5C  F016         	goto	u5291
  3954   002CB4  EF5E  F016         	goto	u5290
  3955   002CB8                     u5291:
  3956   002CB8  EF36  F016         	goto	l5936
  3957   002CBC                     u5290:
  3958   002CBC                     
  3959                           ;appliction.c: 88:     IdleI2C();
  3960   002CBC  ECAA  F019         	call	_IdleI2C	;wreg free
  3961   002CC0                     
  3962                           ;appliction.c: 89:     I2C_voidSendStopCond(&i2c_obj);
  3963   002CC0  0E5C               	movlw	low _i2c_obj
  3964   002CC2  6E01               	movwf	I2C_voidSendStopCond@Copy_stI2C^0,c
  3965   002CC4  ECE2  F01B         	call	_I2C_voidSendStopCond	;wreg free
  3966   002CC8                     
  3967                           ;appliction.c: 90:     IdleI2C();
  3968   002CC8  ECAA  F019         	call	_IdleI2C	;wreg free
  3969   002CCC  0012               	return		;funcret
  3970   002CCE                     __end_of_I2C_SendStuct:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _IdleI2C *****************
  3974 ;; Defined at:
  3975 ;;		line 141 in file "appliction.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		None
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_I2C_SendStuct
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text8
  4004   003354                     __ptext8:
  4005                           	callstack 0
  4006   003354                     _IdleI2C:
  4007                           	callstack 28
  4008   003354                     l214:
  4009                           
  4010                           ;appliction.c: 144:     while (SSPCON2bits.RSEN || SSPCON2bits.PEN || SSPCON2bits.RCEN |
      +                          | SSPCON2bits.ACKEN || SSPSTATbits.BF || SSPSTATbits.R_W)
  4011   003354  B2C5               	btfsc	197,1,c	;volatile
  4012   003356  EFAF  F019         	goto	u4871
  4013   00335A  EFB1  F019         	goto	u4870
  4014   00335E                     u4871:
  4015   00335E  EFAA  F019         	goto	l214
  4016   003362                     u4870:
  4017   003362  B4C5               	btfsc	197,2,c	;volatile
  4018   003364  EFB6  F019         	goto	u4881
  4019   003368  EFB8  F019         	goto	u4880
  4020   00336C                     u4881:
  4021   00336C  EFAA  F019         	goto	l214
  4022   003370                     u4880:
  4023   003370  B6C5               	btfsc	197,3,c	;volatile
  4024   003372  EFBD  F019         	goto	u4891
  4025   003376  EFBF  F019         	goto	u4890
  4026   00337A                     u4891:
  4027   00337A  EFAA  F019         	goto	l214
  4028   00337E                     u4890:
  4029   00337E  B8C5               	btfsc	197,4,c	;volatile
  4030   003380  EFC4  F019         	goto	u4901
  4031   003384  EFC6  F019         	goto	u4900
  4032   003388                     u4901:
  4033   003388  EFAA  F019         	goto	l214
  4034   00338C                     u4900:
  4035   00338C  B0C7               	btfsc	199,0,c	;volatile
  4036   00338E  EFCB  F019         	goto	u4911
  4037   003392  EFCD  F019         	goto	u4910
  4038   003396                     u4911:
  4039   003396  EFAA  F019         	goto	l214
  4040   00339A                     u4910:
  4041   00339A  B4C7               	btfsc	199,2,c	;volatile
  4042   00339C  EFD2  F019         	goto	u4921
  4043   0033A0  EFD4  F019         	goto	u4920
  4044   0033A4                     u4921:
  4045   0033A4  EFAA  F019         	goto	l214
  4046   0033A8                     u4920:
  4047   0033A8  0012               	return		;funcret
  4048   0033AA                     __end_of_IdleI2C:
  4049                           	callstack 0
  4050                           
  4051 ;; *************** function _I2C_voidSendStopCond *****************
  4052 ;; Defined at:
  4053 ;;		line 113 in file "MCAL/I2C/I2C.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  Copy_stI2C      1    0[COMRAM] PTR const struct .
  4056 ;;		 -> i2c_obj(5), 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;		None
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      void 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4068 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;Total ram usage:        1 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_I2C_SendStuct
  4079 ;;		_I2C_u8ReadRegByte
  4080 ;;		_I2C_u8WriteByteRegBlocking
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text9
  4085   0037C4                     __ptext9:
  4086                           	callstack 0
  4087   0037C4                     _I2C_voidSendStopCond:
  4088                           	callstack 28
  4089   0037C4                     
  4090                           ;MCAL/I2C/I2C.c: 113: void I2C_voidSendStopCond(const I2C_t *Copy_stI2C);MCAL/I2C/I2C.c:
      +                           114: {;MCAL/I2C/I2C.c: 116:     if (((void*)0) != Copy_stI2C)
  4091   0037C4  5001               	movf	I2C_voidSendStopCond@Copy_stI2C^0,w,c
  4092   0037C6  B4D8               	btfsc	status,2,c
  4093   0037C8  EFE8  F01B         	goto	u4991
  4094   0037CC  EFEA  F01B         	goto	u4990
  4095   0037D0                     u4991:
  4096   0037D0  EFF3  F01B         	goto	l865
  4097   0037D4                     u4990:
  4098   0037D4                     
  4099                           ;MCAL/I2C/I2C.c: 117:     {;MCAL/I2C/I2C.c: 118:         SSPCON2bits.PEN = 1;
  4100   0037D4  84C5               	bsf	197,2,c	;volatile
  4101   0037D6                     l862:
  4102                           
  4103                           ;MCAL/I2C/I2C.c: 119:         while (SSPCON2bits.PEN == 1)
  4104   0037D6  B4C5               	btfsc	197,2,c	;volatile
  4105   0037D8  EFF0  F01B         	goto	u5001
  4106   0037DC  EFF2  F01B         	goto	u5000
  4107   0037E0                     u5001:
  4108   0037E0  EFEB  F01B         	goto	l862
  4109   0037E4                     u5000:
  4110   0037E4                     
  4111                           ;MCAL/I2C/I2C.c: 121:         PIR1bits.SSPIF = 0;
  4112   0037E4  969E               	bcf	158,3,c	;volatile
  4113   0037E6                     l865:
  4114   0037E6  0012               	return		;funcret
  4115   0037E8                     __end_of_I2C_voidSendStopCond:
  4116                           	callstack 0
  4117                           
  4118 ;; *************** function _I2C_voidSendStartCond *****************
  4119 ;; Defined at:
  4120 ;;		line 90 in file "MCAL/I2C/I2C.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  Copy_stI2C      1    0[COMRAM] PTR const struct .
  4123 ;;		 -> i2c_obj(5), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:        1 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 1
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_I2C_SendStuct
  4146 ;;		_I2C_u8ReadRegByte
  4147 ;;		_I2C_u8WriteByteRegBlocking
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text10
  4152   0037E8                     __ptext10:
  4153                           	callstack 0
  4154   0037E8                     _I2C_voidSendStartCond:
  4155                           	callstack 28
  4156   0037E8                     
  4157                           ;MCAL/I2C/I2C.c: 90: void I2C_voidSendStartCond(const I2C_t *Copy_stI2C);MCAL/I2C/I2C.c:
      +                           91: {;MCAL/I2C/I2C.c: 93:     if (((void*)0) != Copy_stI2C)
  4158   0037E8  5001               	movf	I2C_voidSendStartCond@Copy_stI2C^0,w,c
  4159   0037EA  B4D8               	btfsc	status,2,c
  4160   0037EC  EFFA  F01B         	goto	u4931
  4161   0037F0  EFFC  F01B         	goto	u4930
  4162   0037F4                     u4931:
  4163   0037F4  EF05  F01C         	goto	l851
  4164   0037F8                     u4930:
  4165   0037F8                     
  4166                           ;MCAL/I2C/I2C.c: 94:     {;MCAL/I2C/I2C.c: 95:         SSPCON2bits.SEN = 1;
  4167   0037F8  80C5               	bsf	197,0,c	;volatile
  4168   0037FA                     l848:
  4169                           
  4170                           ;MCAL/I2C/I2C.c: 96:         while (SSPCON2bits.SEN)
  4171   0037FA  B0C5               	btfsc	197,0,c	;volatile
  4172   0037FC  EF02  F01C         	goto	u4941
  4173   003800  EF04  F01C         	goto	u4940
  4174   003804                     u4941:
  4175   003804  EFFD  F01B         	goto	l848
  4176   003808                     u4940:
  4177   003808                     
  4178                           ;MCAL/I2C/I2C.c: 98:         (PIR1bits.SSPIF = 0);
  4179   003808  969E               	bcf	158,3,c	;volatile
  4180   00380A                     l851:
  4181   00380A  0012               	return		;funcret
  4182   00380C                     __end_of_I2C_voidSendStartCond:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _I2C_u8WriteByteBlocking *****************
  4186 ;; Defined at:
  4187 ;;		line 125 in file "MCAL/I2C/I2C.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  Copy_stI2C      1    0[COMRAM] PTR const struct .
  4190 ;;		 -> i2c_obj(5), 
  4191 ;;  Copy_u8Data     1    1[COMRAM] unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  Local_u8Retu    1    2[COMRAM] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      unsigned char 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:        3 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_I2C_SendStuct
  4214 ;;		_I2C_u8ReadRegByte
  4215 ;;		_I2C_u8WriteByteRegBlocking
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text11
  4220   0033AA                     __ptext11:
  4221                           	callstack 0
  4222   0033AA                     _I2C_u8WriteByteBlocking:
  4223                           	callstack 28
  4224   0033AA                     
  4225                           ;MCAL/I2C/I2C.c: 125: u8 I2C_u8WriteByteBlocking(const I2C_t *Copy_stI2C, u8 Copy_u8Data
      +                          );MCAL/I2C/I2C.c: 126: {;MCAL/I2C/I2C.c: 127:     if (SSPCON1bits.WCOL == 1)
  4226   0033AA  AEC6               	btfss	198,7,c	;volatile
  4227   0033AC  EFDA  F019         	goto	u4951
  4228   0033B0  EFDC  F019         	goto	u4950
  4229   0033B4                     u4951:
  4230   0033B4  EFDD  F019         	goto	l5692
  4231   0033B8                     u4950:
  4232   0033B8                     
  4233                           ;MCAL/I2C/I2C.c: 128:     {;MCAL/I2C/I2C.c: 129:         SSPCON1bits.WCOL = 0;
  4234   0033B8  9EC6               	bcf	198,7,c	;volatile
  4235   0033BA                     l5692:
  4236                           
  4237                           ;MCAL/I2C/I2C.c: 131:     u8 Local_u8Return = 0;
  4238   0033BA  0E00               	movlw	0
  4239   0033BC  6E03               	movwf	I2C_u8WriteByteBlocking@Local_u8Return^0,c
  4240                           
  4241                           ;MCAL/I2C/I2C.c: 132:     if (((void*)0) != Copy_stI2C)
  4242   0033BE  5001               	movf	I2C_u8WriteByteBlocking@Copy_stI2C^0,w,c
  4243   0033C0  B4D8               	btfsc	status,2,c
  4244   0033C2  EFE5  F019         	goto	u4961
  4245   0033C6  EFE7  F019         	goto	u4960
  4246   0033CA                     u4961:
  4247   0033CA  EFF5  F019         	goto	l5698
  4248   0033CE                     u4960:
  4249   0033CE                     
  4250                           ;MCAL/I2C/I2C.c: 133:     {;MCAL/I2C/I2C.c: 134:         SSPBUF = Copy_u8Data;
  4251   0033CE  C002  FFC9         	movff	I2C_u8WriteByteBlocking@Copy_u8Data,4041	;volatile
  4252   0033D2                     l870:
  4253                           
  4254                           ;MCAL/I2C/I2C.c: 135:         while (!PIR1bits.SSPIF)
  4255   0033D2  A69E               	btfss	158,3,c	;volatile
  4256   0033D4  EFEE  F019         	goto	u4971
  4257   0033D8  EFF0  F019         	goto	u4970
  4258   0033DC                     u4971:
  4259   0033DC  EFE9  F019         	goto	l870
  4260   0033E0                     u4970:
  4261   0033E0                     
  4262                           ;MCAL/I2C/I2C.c: 137:         (PIR1bits.SSPIF = 0);
  4263   0033E0  969E               	bcf	158,3,c	;volatile
  4264   0033E2                     
  4265                           ;MCAL/I2C/I2C.c: 138:         Local_u8Return = SSPCON2bits.ACKSTAT;
  4266   0033E2  0E00               	movlw	0
  4267   0033E4  BCC5               	btfsc	197,6,c	;volatile
  4268   0033E6  0E01               	movlw	1
  4269   0033E8  6E03               	movwf	I2C_u8WriteByteBlocking@Local_u8Return^0,c
  4270   0033EA                     l5698:
  4271                           
  4272                           ;MCAL/I2C/I2C.c: 140:     if (SSPCON1bits.WCOL == 1)
  4273   0033EA  AEC6               	btfss	198,7,c	;volatile
  4274   0033EC  EFFA  F019         	goto	u4981
  4275   0033F0  EFFC  F019         	goto	u4980
  4276   0033F4                     u4981:
  4277   0033F4  EFFD  F019         	goto	l5702
  4278   0033F8                     u4980:
  4279   0033F8                     
  4280                           ;MCAL/I2C/I2C.c: 141:     {;MCAL/I2C/I2C.c: 142:         SSPCON1bits.WCOL = 0;
  4281   0033F8  9EC6               	bcf	198,7,c	;volatile
  4282   0033FA                     l5702:
  4283                           
  4284                           ;MCAL/I2C/I2C.c: 144:     return Local_u8Return;
  4285   0033FA  5003               	movf	I2C_u8WriteByteBlocking@Local_u8Return^0,w,c
  4286   0033FC  0012               	return		;funcret
  4287   0033FE                     __end_of_I2C_u8WriteByteBlocking:
  4288                           	callstack 0
  4289                           
  4290 ;; *************** function _EEPROM_voidWrite *****************
  4291 ;; Defined at:
  4292 ;;		line 3 in file "MCAL/EEPROM/EEPROM.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  Copy_u16Addr    2    0[COMRAM] unsigned short 
  4295 ;;  Copy_u8Data     1    2[COMRAM] unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  Local_u8Glob    1    3[COMRAM] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;Total ram usage:        4 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; Hardware stack levels required when called: 1
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_main
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text12
  4322   003586                     __ptext12:
  4323                           	callstack 0
  4324   003586                     _EEPROM_voidWrite:
  4325                           	callstack 29
  4326   003586                     
  4327                           ;MCAL/EEPROM/EEPROM.c: 6:     Local_u8GlobalInterruptStatus = INTCONbits.GIE;
  4328   003586  0E00               	movlw	0
  4329   003588  BEF2               	btfsc	242,7,c	;volatile
  4330   00358A  0E01               	movlw	1
  4331   00358C  6E04               	movwf	EEPROM_voidWrite@Local_u8GlobalInterruptStatus^0,c
  4332   00358E                     
  4333                           ;MCAL/EEPROM/EEPROM.c: 8:     EEADRH = (u8) ((Copy_u16Address >> 8)&0x03);
  4334   00358E  5002               	movf	(EEPROM_voidWrite@Copy_u16Address+1)^0,w,c
  4335   003590  0B03               	andlw	3
  4336   003592  6EAA               	movwf	170,c	;volatile
  4337   003594                     
  4338                           ;MCAL/EEPROM/EEPROM.c: 9:     EEADR = (u8) ((Copy_u16Address & 0xFF));
  4339   003594  C001  FFA9         	movff	EEPROM_voidWrite@Copy_u16Address,4009	;volatile
  4340   003598                     
  4341                           ;MCAL/EEPROM/EEPROM.c: 11:     EEDATA = Copy_u8Data;
  4342   003598  C003  FFA8         	movff	EEPROM_voidWrite@Copy_u8Data,4008	;volatile
  4343   00359C                     
  4344                           ;MCAL/EEPROM/EEPROM.c: 13:     (EECON1bits.EEPGD=0);
  4345   00359C  9EA6               	bcf	166,7,c	;volsfr
  4346   00359E                     
  4347                           ;MCAL/EEPROM/EEPROM.c: 15:     (EECON1bits.CFGS=0);
  4348   00359E  9CA6               	bcf	166,6,c	;volsfr
  4349   0035A0                     
  4350                           ;MCAL/EEPROM/EEPROM.c: 17:     (EECON1bits.WREN=1);
  4351   0035A0  84A6               	bsf	166,2,c	;volsfr
  4352   0035A2                     
  4353                           ;MCAL/EEPROM/EEPROM.c: 18:     (INTCONbits.GIE=0);
  4354   0035A2  9EF2               	bcf	242,7,c	;volatile
  4355   0035A4                     
  4356                           ;MCAL/EEPROM/EEPROM.c: 19:     EECON2 = 0x55;
  4357   0035A4  0E55               	movlw	85
  4358   0035A6  6EA7               	movwf	167,c	;volsfr
  4359   0035A8                     
  4360                           ;MCAL/EEPROM/EEPROM.c: 20:     EECON2 = 0xAA;
  4361   0035A8  0EAA               	movlw	170
  4362   0035AA  6EA7               	movwf	167,c	;volsfr
  4363   0035AC                     
  4364                           ;MCAL/EEPROM/EEPROM.c: 22:     (EECON1bits.WR=1);
  4365   0035AC  82A6               	bsf	166,1,c	;volsfr
  4366   0035AE                     l729:
  4367   0035AE  B2A6               	btfsc	166,1,c	;volsfr
  4368   0035B0  EFDC  F01A         	goto	u5101
  4369   0035B4  EFDE  F01A         	goto	u5100
  4370   0035B8                     u5101:
  4371   0035B8  EFD7  F01A         	goto	l729
  4372   0035BC                     u5100:
  4373   0035BC                     
  4374                           ;MCAL/EEPROM/EEPROM.c: 25:     (EECON1bits.WREN=0);
  4375   0035BC  94A6               	bcf	166,2,c	;volsfr
  4376                           
  4377                           ;MCAL/EEPROM/EEPROM.c: 26:     INTCONbits.GIE = Local_u8GlobalInterruptStatus;
  4378   0035BE  B004               	btfsc	EEPROM_voidWrite@Local_u8GlobalInterruptStatus^0,0,c
  4379   0035C0  D002               	bra	u5115
  4380   0035C2  9EF2               	bcf	242,7,c	;volatile
  4381   0035C4  D001               	bra	u5116
  4382   0035C6                     u5115:
  4383   0035C6  8EF2               	bsf	242,7,c	;volatile
  4384   0035C8                     u5116:
  4385   0035C8  0012               	return		;funcret
  4386   0035CA                     __end_of_EEPROM_voidWrite:
  4387                           	callstack 0
  4388                           
  4389 ;; *************** function _EEPROM_u8Read *****************
  4390 ;; Defined at:
  4391 ;;		line 30 in file "MCAL/EEPROM/EEPROM.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  Copy_u16Addr    2    0[COMRAM] unsigned short 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      unsigned char 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used: 1
  4411 ;; Hardware stack levels required when called: 1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_main
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text13
  4420   00386E                     __ptext13:
  4421                           	callstack 0
  4422   00386E                     _EEPROM_u8Read:
  4423                           	callstack 29
  4424   00386E                     
  4425                           ;MCAL/EEPROM/EEPROM.c: 32:     EEADRH = (u8) ((Copy_u16Address >> 8)&0x03);
  4426   00386E  5002               	movf	(EEPROM_u8Read@Copy_u16Address+1)^0,w,c
  4427   003870  0B03               	andlw	3
  4428   003872  6EAA               	movwf	170,c	;volatile
  4429   003874                     
  4430                           ;MCAL/EEPROM/EEPROM.c: 33:     EEADR = (u8) ((Copy_u16Address & 0xFF));
  4431   003874  C001  FFA9         	movff	EEPROM_u8Read@Copy_u16Address,4009	;volatile
  4432   003878                     
  4433                           ;MCAL/EEPROM/EEPROM.c: 35:     (EECON1bits.EEPGD=0);
  4434   003878  9EA6               	bcf	166,7,c	;volsfr
  4435   00387A                     
  4436                           ;MCAL/EEPROM/EEPROM.c: 37:     (EECON1bits.CFGS=0);
  4437   00387A  9CA6               	bcf	166,6,c	;volsfr
  4438   00387C                     
  4439                           ;MCAL/EEPROM/EEPROM.c: 39:     (EECON1bits.WREN=1);
  4440   00387C  84A6               	bsf	166,2,c	;volsfr
  4441   00387E                     
  4442                           ;MCAL/EEPROM/EEPROM.c: 41:     (EECON1bits.RD=1);
  4443   00387E  80A6               	bsf	166,0,c	;volsfr
  4444   003880                     
  4445                           ;MCAL/EEPROM/EEPROM.c: 42:     __nop();
  4446   003880  0000               	nop	
  4447   003882                     
  4448                           ;MCAL/EEPROM/EEPROM.c: 43:     __nop();
  4449   003882  0000               	nop	
  4450   003884                     
  4451                           ;MCAL/EEPROM/EEPROM.c: 45:     return EEDATA;
  4452   003884  50A8               	movf	168,w,c	;volatile
  4453   003886  0012               	return		;funcret
  4454   003888                     __end_of_EEPROM_u8Read:
  4455                           	callstack 0
  4456                           
  4457 ;; *************** function _Application_Init *****************
  4458 ;; Defined at:
  4459 ;;		line 3 in file "appliction.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;Total ram usage:        0 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 5
  4480 ;; This function calls:
  4481 ;;		_ADC_voidADCInit
  4482 ;;		_I2C_voidI2CInit
  4483 ;;		_KEYPAD_voidKeyPadInt
  4484 ;;		_LCD4Bit_voidLCD_Init
  4485 ;;		_LED_voidLedInt
  4486 ;;		_USART_voidAsynchUsartInit
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text14
  4493   0036BC                     __ptext14:
  4494                           	callstack 0
  4495   0036BC                     _Application_Init:
  4496                           	callstack 25
  4497   0036BC                     
  4498                           ;appliction.c: 8:     LCD4Bit_voidLCD_Init(&LCD_1);
  4499   0036BC  0E55               	movlw	low _LCD_1
  4500   0036BE  6E0D               	movwf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,c
  4501   0036C0  ECF8  F00E         	call	_LCD4Bit_voidLCD_Init	;wreg free
  4502                           
  4503                           ;appliction.c: 12:     KEYPAD_voidKeyPadInt(&KeyPad_1);
  4504   0036C4  0EAE               	movlw	low _KeyPad_1
  4505   0036C6  6E09               	movwf	KEYPAD_voidKeyPadInt@Copy_stKeyPad^0,c
  4506   0036C8  EC47  F017         	call	_KEYPAD_voidKeyPadInt	;wreg free
  4507   0036CC                     
  4508                           ;appliction.c: 16:     USART_voidAsynchUsartInit(&uart_TX);
  4509   0036CC  0EC5               	movlw	low _uart_TX
  4510   0036CE  6E4D               	movwf	USART_voidAsynchUsartInit@Copy_stUsart^0,c
  4511   0036D0  EC79  F019         	call	_USART_voidAsynchUsartInit	;wreg free
  4512   0036D4                     
  4513                           ;appliction.c: 20:     LED_voidLedInt(&LED_LOCK);
  4514   0036D4  0E65               	movlw	low _LED_LOCK
  4515   0036D6  6E09               	movwf	LED_voidLedInt@Copy_stLed^0,c
  4516   0036D8  EC67  F016         	call	_LED_voidLedInt	;wreg free
  4517                           
  4518                           ;appliction.c: 22:     I2C_voidI2CInit(&i2c_obj);
  4519   0036DC  0E5C               	movlw	low _i2c_obj
  4520   0036DE  6E45               	movwf	I2C_voidI2CInit@Copy_stI2C^0,c
  4521   0036E0  EC91  F010         	call	_I2C_voidI2CInit	;wreg free
  4522   0036E4                     
  4523                           ;appliction.c: 24:     ADC_voidADCInit(&ADC);
  4524   0036E4  0ECB               	movlw	low _ADC
  4525   0036E6  6E0C               	movwf	ADC_voidADCInit@Copy_stADC^0,c
  4526   0036E8  EC08  F018         	call	_ADC_voidADCInit	;wreg free
  4527   0036EC                     
  4528                           ;appliction.c: 26:     (WDTCONbits.SWDTEN = 0);
  4529   0036EC  90D1               	bcf	209,0,c	;volatile
  4530   0036EE  0012               	return		;funcret
  4531   0036F0                     __end_of_Application_Init:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _USART_voidAsynchUsartInit *****************
  4535 ;; Defined at:
  4536 ;;		line 26 in file "MCAL/USART/USART.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  Copy_stUsart    1   76[COMRAM] PTR const struct .
  4539 ;;		 -> uart_TX(6), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4551 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;Total ram usage:        1 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 3
  4558 ;; This function calls:
  4559 ;;		_BaudRateConfig
  4560 ;;		_Tx_config
  4561 ;;		_rx_config
  4562 ;; This function is called by:
  4563 ;;		_Application_Init
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text15
  4568   0032F2                     __ptext15:
  4569                           	callstack 0
  4570   0032F2                     _USART_voidAsynchUsartInit:
  4571                           	callstack 26
  4572   0032F2                     
  4573                           ;MCAL/USART/USART.c: 27:     if (((void*)0) != Copy_stUsart) {
  4574   0032F2  504D               	movf	USART_voidAsynchUsartInit@Copy_stUsart^0,w,c
  4575   0032F4  B4D8               	btfsc	status,2,c
  4576   0032F6  EF7F  F019         	goto	u4751
  4577   0032FA  EF81  F019         	goto	u4750
  4578   0032FE                     u4751:
  4579   0032FE  EFA9  F019         	goto	l1267
  4580   003302                     u4750:
  4581   003302                     
  4582                           ;MCAL/USART/USART.c: 28:         TRISCbits.RC6 = 1;
  4583   003302  8C94               	bsf	148,6,c	;volatile
  4584                           
  4585                           ;MCAL/USART/USART.c: 29:         TRISCbits.RC7 = 1;
  4586   003304  8E94               	bsf	148,7,c	;volatile
  4587                           
  4588                           ;MCAL/USART/USART.c: 30:         (RCSTAbits.SPEN = 0);
  4589   003306  9EAB               	bcf	171,7,c	;volatile
  4590   003308                     
  4591                           ;MCAL/USART/USART.c: 31:         BaudRateConfig(Copy_stUsart);
  4592   003308  C04D  F042         	movff	USART_voidAsynchUsartInit@Copy_stUsart,BaudRateConfig@Copy_stUsart
  4593   00330C  EC79  F005         	call	_BaudRateConfig	;wreg free
  4594   003310                     
  4595                           ;MCAL/USART/USART.c: 32:         if (1 == Copy_stUsart->transmit.usart_tx_enable) {
  4596   003310  504D               	movf	USART_voidAsynchUsartInit@Copy_stUsart^0,w,c
  4597   003312  6ED9               	movwf	fsr2l,c
  4598   003314  6ADA               	clrf	fsr2h,c
  4599   003316  0E03               	movlw	3
  4600   003318  26D9               	addwf	fsr2l,f,c
  4601   00331A  A0DF               	btfss	indf2,0,c
  4602   00331C  EF92  F019         	goto	u4761
  4603   003320  EF94  F019         	goto	u4760
  4604   003324                     u4761:
  4605   003324  EF98  F019         	goto	l5596
  4606   003328                     u4760:
  4607   003328                     
  4608                           ;MCAL/USART/USART.c: 33:             Tx_config(Copy_stUsart);
  4609   003328  C04D  F001         	movff	USART_voidAsynchUsartInit@Copy_stUsart,Tx_config@Copy_stUsart
  4610   00332C  ECAD  F018         	call	_Tx_config	;wreg free
  4611   003330                     l5596:
  4612                           
  4613                           ;MCAL/USART/USART.c: 35:         if (1 == Copy_stUsart->receive.usart_rx_enable) {
  4614   003330  504D               	movf	USART_voidAsynchUsartInit@Copy_stUsart^0,w,c
  4615   003332  6ED9               	movwf	fsr2l,c
  4616   003334  6ADA               	clrf	fsr2h,c
  4617   003336  0E04               	movlw	4
  4618   003338  26D9               	addwf	fsr2l,f,c
  4619   00333A  A0DF               	btfss	indf2,0,c
  4620   00333C  EFA2  F019         	goto	u4771
  4621   003340  EFA4  F019         	goto	u4770
  4622   003344                     u4771:
  4623   003344  EFA8  F019         	goto	l5600
  4624   003348                     u4770:
  4625   003348                     
  4626                           ;MCAL/USART/USART.c: 36:             rx_config(Copy_stUsart);
  4627   003348  C04D  F001         	movff	USART_voidAsynchUsartInit@Copy_stUsart,rx_config@Copy_stUsart
  4628   00334C  EC79  F018         	call	_rx_config	;wreg free
  4629   003350                     l5600:
  4630                           
  4631                           ;MCAL/USART/USART.c: 39:         (RCSTAbits.SPEN = 1);
  4632   003350  8EAB               	bsf	171,7,c	;volatile
  4633   003352                     l1267:
  4634   003352  0012               	return		;funcret
  4635   003354                     __end_of_USART_voidAsynchUsartInit:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _rx_config *****************
  4639 ;; Defined at:
  4640 ;;		line 225 in file "MCAL/USART/USART.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  Copy_stUsart    1    0[COMRAM] PTR const struct .
  4643 ;;		 -> uart_TX(6), 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        3 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_USART_voidAsynchUsartInit
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text16
  4670   0030F2                     __ptext16:
  4671                           	callstack 0
  4672   0030F2                     _rx_config:
  4673                           	callstack 27
  4674   0030F2                     
  4675                           ;MCAL/USART/USART.c: 226:     if (((void*)0) != Copy_stUsart) {
  4676   0030F2  5001               	movf	rx_config@Copy_stUsart^0,w,c
  4677   0030F4  B4D8               	btfsc	status,2,c
  4678   0030F6  EF7F  F018         	goto	u4661
  4679   0030FA  EF81  F018         	goto	u4660
  4680   0030FE                     u4661:
  4681   0030FE  EFAC  F018         	goto	l1323
  4682   003102                     u4660:
  4683   003102  EF89  F018         	goto	l5516
  4684   003106                     l1320:
  4685                           
  4686                           ;MCAL/USART/USART.c: 232:                 (RCSTAbits.RC9 = 1);
  4687   003106  8CAB               	bsf	171,6,c	;volatile
  4688                           
  4689                           ;MCAL/USART/USART.c: 233:                 break;
  4690   003108  EFAB  F018         	goto	l1321
  4691   00310C                     l1322:
  4692                           
  4693                           ;MCAL/USART/USART.c: 235:                 (RCSTAbits.RC9 = 0);
  4694   00310C  9CAB               	bcf	171,6,c	;volatile
  4695                           
  4696                           ;MCAL/USART/USART.c: 236:                 break;
  4697   00310E  EFAB  F018         	goto	l1321
  4698   003112                     l5516:
  4699   003112  5001               	movf	rx_config@Copy_stUsart^0,w,c
  4700   003114  6ED9               	movwf	fsr2l,c
  4701   003116  6ADA               	clrf	fsr2h,c
  4702   003118  0E04               	movlw	4
  4703   00311A  26D9               	addwf	fsr2l,f,c
  4704   00311C  B2DF               	btfsc	indf2,1,c
  4705   00311E  EF93  F018         	goto	u4671
  4706   003122  EF96  F018         	goto	u4670
  4707   003126                     u4671:
  4708   003126  0E01               	movlw	1
  4709   003128  EF97  F018         	goto	u4680
  4710   00312C                     u4670:
  4711   00312C  0E00               	movlw	0
  4712   00312E                     u4680:
  4713   00312E  6E02               	movwf	??_rx_config^0,c
  4714   003130  6A03               	clrf	(??_rx_config+1)^0,c
  4715                           
  4716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4717                           ; Switch size 1, requested type "simple"
  4718                           ; Number of cases is 1, Range of values is 0 to 0
  4719                           ; switch strategies available:
  4720                           ; Name         Instructions Cycles
  4721                           ; simple_byte            4     3 (average)
  4722                           ;	Chosen strategy is simple_byte
  4723   003132  5003               	movf	(??_rx_config+1)^0,w,c
  4724   003134  0A00               	xorlw	0	; case 0
  4725   003136  B4D8               	btfsc	status,2,c
  4726   003138  EFA0  F018         	goto	l7202
  4727   00313C  EFAB  F018         	goto	l1321
  4728   003140                     l7202:
  4729                           
  4730                           ; Switch size 1, requested type "simple"
  4731                           ; Number of cases is 2, Range of values is 0 to 1
  4732                           ; switch strategies available:
  4733                           ; Name         Instructions Cycles
  4734                           ; simple_byte            7     4 (average)
  4735                           ;	Chosen strategy is simple_byte
  4736   003140  5002               	movf	??_rx_config^0,w,c
  4737   003142  0A00               	xorlw	0	; case 0
  4738   003144  B4D8               	btfsc	status,2,c
  4739   003146  EF86  F018         	goto	l1322
  4740   00314A  0A01               	xorlw	1	; case 1
  4741   00314C  B4D8               	btfsc	status,2,c
  4742   00314E  EF83  F018         	goto	l1320
  4743   003152  EFAB  F018         	goto	l1321
  4744   003156                     l1321:
  4745                           
  4746                           ;MCAL/USART/USART.c: 238:         (RCSTAbits.CREN = 1);
  4747   003156  88AB               	bsf	171,4,c	;volatile
  4748   003158                     l1323:
  4749   003158  0012               	return		;funcret
  4750   00315A                     __end_of_rx_config:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function _Tx_config *****************
  4754 ;; Defined at:
  4755 ;;		line 148 in file "MCAL/USART/USART.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  Copy_stUsart    1    0[COMRAM] PTR const struct .
  4758 ;;		 -> uart_TX(6), 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:        3 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_USART_voidAsynchUsartInit
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text17
  4785   00315A                     __ptext17:
  4786                           	callstack 0
  4787   00315A                     _Tx_config:
  4788                           	callstack 27
  4789   00315A                     
  4790                           ;MCAL/USART/USART.c: 149:     if (((void*)0) != Copy_stUsart) {
  4791   00315A  5001               	movf	Tx_config@Copy_stUsart^0,w,c
  4792   00315C  B4D8               	btfsc	status,2,c
  4793   00315E  EFB3  F018         	goto	u4631
  4794   003162  EFB5  F018         	goto	u4630
  4795   003166                     u4631:
  4796   003166  EFE0  F018         	goto	l1315
  4797   00316A                     u4630:
  4798   00316A  EFBD  F018         	goto	l5504
  4799   00316E                     l1312:
  4800                           
  4801                           ;MCAL/USART/USART.c: 155:                 (TXSTAbits.TX9 = 1);
  4802   00316E  8CAC               	bsf	172,6,c	;volatile
  4803                           
  4804                           ;MCAL/USART/USART.c: 156:                 break;
  4805   003170  EFDF  F018         	goto	l1313
  4806   003174                     l1314:
  4807                           
  4808                           ;MCAL/USART/USART.c: 158:                 (TXSTAbits.TX9 = 0);
  4809   003174  9CAC               	bcf	172,6,c	;volatile
  4810                           
  4811                           ;MCAL/USART/USART.c: 159:                 break;
  4812   003176  EFDF  F018         	goto	l1313
  4813   00317A                     l5504:
  4814   00317A  5001               	movf	Tx_config@Copy_stUsart^0,w,c
  4815   00317C  6ED9               	movwf	fsr2l,c
  4816   00317E  6ADA               	clrf	fsr2h,c
  4817   003180  0E03               	movlw	3
  4818   003182  26D9               	addwf	fsr2l,f,c
  4819   003184  B2DF               	btfsc	indf2,1,c
  4820   003186  EFC7  F018         	goto	u4641
  4821   00318A  EFCA  F018         	goto	u4640
  4822   00318E                     u4641:
  4823   00318E  0E01               	movlw	1
  4824   003190  EFCB  F018         	goto	u4650
  4825   003194                     u4640:
  4826   003194  0E00               	movlw	0
  4827   003196                     u4650:
  4828   003196  6E02               	movwf	??_Tx_config^0,c
  4829   003198  6A03               	clrf	(??_Tx_config+1)^0,c
  4830                           
  4831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4832                           ; Switch size 1, requested type "simple"
  4833                           ; Number of cases is 1, Range of values is 0 to 0
  4834                           ; switch strategies available:
  4835                           ; Name         Instructions Cycles
  4836                           ; simple_byte            4     3 (average)
  4837                           ;	Chosen strategy is simple_byte
  4838   00319A  5003               	movf	(??_Tx_config+1)^0,w,c
  4839   00319C  0A00               	xorlw	0	; case 0
  4840   00319E  B4D8               	btfsc	status,2,c
  4841   0031A0  EFD4  F018         	goto	l7204
  4842   0031A4  EFDF  F018         	goto	l1313
  4843   0031A8                     l7204:
  4844                           
  4845                           ; Switch size 1, requested type "simple"
  4846                           ; Number of cases is 2, Range of values is 0 to 1
  4847                           ; switch strategies available:
  4848                           ; Name         Instructions Cycles
  4849                           ; simple_byte            7     4 (average)
  4850                           ;	Chosen strategy is simple_byte
  4851   0031A8  5002               	movf	??_Tx_config^0,w,c
  4852   0031AA  0A00               	xorlw	0	; case 0
  4853   0031AC  B4D8               	btfsc	status,2,c
  4854   0031AE  EFBA  F018         	goto	l1314
  4855   0031B2  0A01               	xorlw	1	; case 1
  4856   0031B4  B4D8               	btfsc	status,2,c
  4857   0031B6  EFB7  F018         	goto	l1312
  4858   0031BA  EFDF  F018         	goto	l1313
  4859   0031BE                     l1313:
  4860                           
  4861                           ;MCAL/USART/USART.c: 161:         (TXSTAbits.TXEN = 1);
  4862   0031BE  8AAC               	bsf	172,5,c	;volatile
  4863   0031C0                     l1315:
  4864   0031C0  0012               	return		;funcret
  4865   0031C2                     __end_of_Tx_config:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function _BaudRateConfig *****************
  4869 ;; Defined at:
  4870 ;;		line 96 in file "MCAL/USART/USART.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  Copy_stUsart    1   65[COMRAM] PTR const struct .
  4873 ;;		 -> uart_TX(6), 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  Local_f32Bau    4   68[COMRAM] float 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4885 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;Total ram usage:       11 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 2
  4892 ;; This function calls:
  4893 ;;		___fladd
  4894 ;;		___fldiv
  4895 ;;		___fltol
  4896 ;;		___xxtofl
  4897 ;; This function is called by:
  4898 ;;		_USART_voidAsynchUsartInit
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text18
  4903   000AF2                     __ptext18:
  4904                           	callstack 0
  4905   000AF2                     _BaudRateConfig:
  4906                           	callstack 26
  4907   000AF2                     
  4908                           ;MCAL/USART/USART.c: 97:     f32 Local_f32BaudRateTemp = 0.0;
  4909   000AF2  0E00               	movlw	0
  4910   000AF4  6E45               	movwf	BaudRateConfig@Local_f32BaudRateTemp^0,c
  4911   000AF6  0E00               	movlw	0
  4912   000AF8  6E46               	movwf	(BaudRateConfig@Local_f32BaudRateTemp+1)^0,c
  4913   000AFA  0E00               	movlw	0
  4914   000AFC  6E47               	movwf	(BaudRateConfig@Local_f32BaudRateTemp+2)^0,c
  4915   000AFE  0E00               	movlw	0
  4916   000B00  6E48               	movwf	(BaudRateConfig@Local_f32BaudRateTemp+3)^0,c
  4917                           
  4918                           ;MCAL/USART/USART.c: 98:     if (((void*)0) != Copy_stUsart) {
  4919   000B02  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  4920   000B04  B4D8               	btfsc	status,2,c
  4921   000B06  EF87  F005         	goto	u4621
  4922   000B0A  EF89  F005         	goto	u4620
  4923   000B0E                     u4621:
  4924   000B0E  EFF0  F007         	goto	l1307
  4925   000B12                     u4620:
  4926   000B12  EFAB  F007         	goto	l5490
  4927   000B16                     l1300:
  4928                           
  4929                           ;MCAL/USART/USART.c: 101:                 (TXSTAbits.SYNC = 0);
  4930   000B16  98AC               	bcf	172,4,c	;volatile
  4931                           
  4932                           ;MCAL/USART/USART.c: 102:                 (BAUDCONbits.BRG16 = 0);
  4933   000B18  96B8               	bcf	184,3,c	;volatile
  4934                           
  4935                           ;MCAL/USART/USART.c: 103:                 (TXSTAbits.BRGH = 0);
  4936   000B1A  94AC               	bcf	172,2,c	;volatile
  4937   000B1C                     
  4938                           ;MCAL/USART/USART.c: 104:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 64) - 1;
  4939   000B1C  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  4940   000B1E  6ED9               	movwf	fsr2l,c
  4941   000B20  6ADA               	clrf	fsr2h,c
  4942   000B22  CFDE F043          	movff	postinc2,??_BaudRateConfig
  4943   000B26  CFDD F044          	movff	postdec2,??_BaudRateConfig+1
  4944   000B2A  C043  F001         	movff	??_BaudRateConfig,___xxtofl@val
  4945   000B2E  C044  F002         	movff	??_BaudRateConfig+1,___xxtofl@val+1
  4946   000B32  6A03               	clrf	(___xxtofl@val+2)^0,c
  4947   000B34  6A04               	clrf	(___xxtofl@val+3)^0,c
  4948   000B36  0E00               	movlw	0
  4949   000B38  EC1E  F00E         	call	___xxtofl
  4950   000B3C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4951   000B40  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4952   000B44  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4953   000B48  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4954   000B4C  0E00               	movlw	0
  4955   000B4E  6E0F               	movwf	___fldiv@b^0,c
  4956   000B50  0E24               	movlw	36
  4957   000B52  6E10               	movwf	(___fldiv@b+1)^0,c
  4958   000B54  0EF4               	movlw	244
  4959   000B56  6E11               	movwf	(___fldiv@b+2)^0,c
  4960   000B58  0E4A               	movlw	74
  4961   000B5A  6E12               	movwf	(___fldiv@b+3)^0,c
  4962   000B5C  EC51  F00A         	call	___fldiv	;wreg free
  4963   000B60  C00F  F049         	movff	?___fldiv,_BaudRateConfig$4564
  4964   000B64  C010  F04A         	movff	?___fldiv+1,_BaudRateConfig$4564+1
  4965   000B68  C011  F04B         	movff	?___fldiv+2,_BaudRateConfig$4564+2
  4966   000B6C  C012  F04C         	movff	?___fldiv+3,_BaudRateConfig$4564+3
  4967   000B70                     
  4968                           ;MCAL/USART/USART.c: 104:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 64) - 1;
  4969   000B70  0E00               	movlw	0
  4970   000B72  6E13               	movwf	___fldiv@a^0,c
  4971   000B74  0E00               	movlw	0
  4972   000B76  6E14               	movwf	(___fldiv@a+1)^0,c
  4973   000B78  0E80               	movlw	128
  4974   000B7A  6E15               	movwf	(___fldiv@a+2)^0,c
  4975   000B7C  0E42               	movlw	66
  4976   000B7E  6E16               	movwf	(___fldiv@a+3)^0,c
  4977   000B80  C049  F00F         	movff	_BaudRateConfig$4564,___fldiv@b
  4978   000B84  C04A  F010         	movff	_BaudRateConfig$4564+1,___fldiv@b+1
  4979   000B88  C04B  F011         	movff	_BaudRateConfig$4564+2,___fldiv@b+2
  4980   000B8C  C04C  F012         	movff	_BaudRateConfig$4564+3,___fldiv@b+3
  4981   000B90  EC51  F00A         	call	___fldiv	;wreg free
  4982   000B94  C00F  F028         	movff	?___fldiv,___fladd@b
  4983   000B98  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  4984   000B9C  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  4985   000BA0  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  4986   000BA4  0E00               	movlw	0
  4987   000BA6  6E2C               	movwf	___fladd@a^0,c
  4988   000BA8  0E00               	movlw	0
  4989   000BAA  6E2D               	movwf	(___fladd@a+1)^0,c
  4990   000BAC  0E80               	movlw	128
  4991   000BAE  6E2E               	movwf	(___fladd@a+2)^0,c
  4992   000BB0  0EBF               	movlw	191
  4993   000BB2  6E2F               	movwf	(___fladd@a+3)^0,c
  4994   000BB4  ECF1  F007         	call	___fladd	;wreg free
  4995   000BB8  C028  F045         	movff	?___fladd,BaudRateConfig@Local_f32BaudRateTemp
  4996   000BBC  C029  F046         	movff	?___fladd+1,BaudRateConfig@Local_f32BaudRateTemp+1
  4997   000BC0  C02A  F047         	movff	?___fladd+2,BaudRateConfig@Local_f32BaudRateTemp+2
  4998   000BC4  C02B  F048         	movff	?___fladd+3,BaudRateConfig@Local_f32BaudRateTemp+3
  4999                           
  5000                           ;MCAL/USART/USART.c: 105:                 break;
  5001   000BC8  EFD5  F007         	goto	l5492
  5002   000BCC                     l1302:
  5003                           
  5004                           ;MCAL/USART/USART.c: 108:                 (TXSTAbits.SYNC = 0);
  5005   000BCC  98AC               	bcf	172,4,c	;volatile
  5006                           
  5007                           ;MCAL/USART/USART.c: 109:                 (BAUDCONbits.BRG16 = 0);
  5008   000BCE  96B8               	bcf	184,3,c	;volatile
  5009                           
  5010                           ;MCAL/USART/USART.c: 110:                 (TXSTAbits.BRGH = 1);
  5011   000BD0  84AC               	bsf	172,2,c	;volatile
  5012   000BD2                     
  5013                           ;MCAL/USART/USART.c: 111:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 16) - 1;
  5014   000BD2  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  5015   000BD4  6ED9               	movwf	fsr2l,c
  5016   000BD6  6ADA               	clrf	fsr2h,c
  5017   000BD8  CFDE F043          	movff	postinc2,??_BaudRateConfig
  5018   000BDC  CFDD F044          	movff	postdec2,??_BaudRateConfig+1
  5019   000BE0  C043  F001         	movff	??_BaudRateConfig,___xxtofl@val
  5020   000BE4  C044  F002         	movff	??_BaudRateConfig+1,___xxtofl@val+1
  5021   000BE8  6A03               	clrf	(___xxtofl@val+2)^0,c
  5022   000BEA  6A04               	clrf	(___xxtofl@val+3)^0,c
  5023   000BEC  0E00               	movlw	0
  5024   000BEE  EC1E  F00E         	call	___xxtofl
  5025   000BF2  C001  F013         	movff	?___xxtofl,___fldiv@a
  5026   000BF6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  5027   000BFA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  5028   000BFE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  5029   000C02  0E00               	movlw	0
  5030   000C04  6E0F               	movwf	___fldiv@b^0,c
  5031   000C06  0E24               	movlw	36
  5032   000C08  6E10               	movwf	(___fldiv@b+1)^0,c
  5033   000C0A  0EF4               	movlw	244
  5034   000C0C  6E11               	movwf	(___fldiv@b+2)^0,c
  5035   000C0E  0E4A               	movlw	74
  5036   000C10  6E12               	movwf	(___fldiv@b+3)^0,c
  5037   000C12  EC51  F00A         	call	___fldiv	;wreg free
  5038   000C16  C00F  F049         	movff	?___fldiv,_BaudRateConfig$4564
  5039   000C1A  C010  F04A         	movff	?___fldiv+1,_BaudRateConfig$4564+1
  5040   000C1E  C011  F04B         	movff	?___fldiv+2,_BaudRateConfig$4564+2
  5041   000C22  C012  F04C         	movff	?___fldiv+3,_BaudRateConfig$4564+3
  5042   000C26                     
  5043                           ;MCAL/USART/USART.c: 111:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 16) - 1;
  5044   000C26  0E00               	movlw	0
  5045   000C28  6E13               	movwf	___fldiv@a^0,c
  5046   000C2A  0E00               	movlw	0
  5047   000C2C  6E14               	movwf	(___fldiv@a+1)^0,c
  5048   000C2E  0E80               	movlw	128
  5049   000C30  6E15               	movwf	(___fldiv@a+2)^0,c
  5050   000C32  0E41               	movlw	65
  5051   000C34  6E16               	movwf	(___fldiv@a+3)^0,c
  5052   000C36  C049  F00F         	movff	_BaudRateConfig$4564,___fldiv@b
  5053   000C3A  C04A  F010         	movff	_BaudRateConfig$4564+1,___fldiv@b+1
  5054   000C3E  C04B  F011         	movff	_BaudRateConfig$4564+2,___fldiv@b+2
  5055   000C42  C04C  F012         	movff	_BaudRateConfig$4564+3,___fldiv@b+3
  5056   000C46  EC51  F00A         	call	___fldiv	;wreg free
  5057   000C4A  C00F  F028         	movff	?___fldiv,___fladd@b
  5058   000C4E  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5059   000C52  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5060   000C56  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5061   000C5A  0E00               	movlw	0
  5062   000C5C  6E2C               	movwf	___fladd@a^0,c
  5063   000C5E  0E00               	movlw	0
  5064   000C60  6E2D               	movwf	(___fladd@a+1)^0,c
  5065   000C62  0E80               	movlw	128
  5066   000C64  6E2E               	movwf	(___fladd@a+2)^0,c
  5067   000C66  0EBF               	movlw	191
  5068   000C68  6E2F               	movwf	(___fladd@a+3)^0,c
  5069   000C6A  ECF1  F007         	call	___fladd	;wreg free
  5070   000C6E  C028  F045         	movff	?___fladd,BaudRateConfig@Local_f32BaudRateTemp
  5071   000C72  C029  F046         	movff	?___fladd+1,BaudRateConfig@Local_f32BaudRateTemp+1
  5072   000C76  C02A  F047         	movff	?___fladd+2,BaudRateConfig@Local_f32BaudRateTemp+2
  5073   000C7A  C02B  F048         	movff	?___fladd+3,BaudRateConfig@Local_f32BaudRateTemp+3
  5074                           
  5075                           ;MCAL/USART/USART.c: 112:                 break;
  5076   000C7E  EFD5  F007         	goto	l5492
  5077   000C82                     l1303:
  5078                           
  5079                           ;MCAL/USART/USART.c: 115:                 (TXSTAbits.SYNC = 0);
  5080   000C82  98AC               	bcf	172,4,c	;volatile
  5081                           
  5082                           ;MCAL/USART/USART.c: 116:                 (BAUDCONbits.BRG16 = 1);
  5083   000C84  86B8               	bsf	184,3,c	;volatile
  5084                           
  5085                           ;MCAL/USART/USART.c: 117:                 (TXSTAbits.BRGH = 0);
  5086   000C86  94AC               	bcf	172,2,c	;volatile
  5087   000C88                     
  5088                           ;MCAL/USART/USART.c: 118:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 16) - 1;
  5089   000C88  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  5090   000C8A  6ED9               	movwf	fsr2l,c
  5091   000C8C  6ADA               	clrf	fsr2h,c
  5092   000C8E  CFDE F043          	movff	postinc2,??_BaudRateConfig
  5093   000C92  CFDD F044          	movff	postdec2,??_BaudRateConfig+1
  5094   000C96  C043  F001         	movff	??_BaudRateConfig,___xxtofl@val
  5095   000C9A  C044  F002         	movff	??_BaudRateConfig+1,___xxtofl@val+1
  5096   000C9E  6A03               	clrf	(___xxtofl@val+2)^0,c
  5097   000CA0  6A04               	clrf	(___xxtofl@val+3)^0,c
  5098   000CA2  0E00               	movlw	0
  5099   000CA4  EC1E  F00E         	call	___xxtofl
  5100   000CA8  C001  F013         	movff	?___xxtofl,___fldiv@a
  5101   000CAC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  5102   000CB0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  5103   000CB4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  5104   000CB8  0E00               	movlw	0
  5105   000CBA  6E0F               	movwf	___fldiv@b^0,c
  5106   000CBC  0E24               	movlw	36
  5107   000CBE  6E10               	movwf	(___fldiv@b+1)^0,c
  5108   000CC0  0EF4               	movlw	244
  5109   000CC2  6E11               	movwf	(___fldiv@b+2)^0,c
  5110   000CC4  0E4A               	movlw	74
  5111   000CC6  6E12               	movwf	(___fldiv@b+3)^0,c
  5112   000CC8  EC51  F00A         	call	___fldiv	;wreg free
  5113   000CCC  C00F  F049         	movff	?___fldiv,_BaudRateConfig$4564
  5114   000CD0  C010  F04A         	movff	?___fldiv+1,_BaudRateConfig$4564+1
  5115   000CD4  C011  F04B         	movff	?___fldiv+2,_BaudRateConfig$4564+2
  5116   000CD8  C012  F04C         	movff	?___fldiv+3,_BaudRateConfig$4564+3
  5117   000CDC                     
  5118                           ;MCAL/USART/USART.c: 118:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 16) - 1;
  5119   000CDC  0E00               	movlw	0
  5120   000CDE  6E13               	movwf	___fldiv@a^0,c
  5121   000CE0  0E00               	movlw	0
  5122   000CE2  6E14               	movwf	(___fldiv@a+1)^0,c
  5123   000CE4  0E80               	movlw	128
  5124   000CE6  6E15               	movwf	(___fldiv@a+2)^0,c
  5125   000CE8  0E41               	movlw	65
  5126   000CEA  6E16               	movwf	(___fldiv@a+3)^0,c
  5127   000CEC  C049  F00F         	movff	_BaudRateConfig$4564,___fldiv@b
  5128   000CF0  C04A  F010         	movff	_BaudRateConfig$4564+1,___fldiv@b+1
  5129   000CF4  C04B  F011         	movff	_BaudRateConfig$4564+2,___fldiv@b+2
  5130   000CF8  C04C  F012         	movff	_BaudRateConfig$4564+3,___fldiv@b+3
  5131   000CFC  EC51  F00A         	call	___fldiv	;wreg free
  5132   000D00  C00F  F028         	movff	?___fldiv,___fladd@b
  5133   000D04  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5134   000D08  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5135   000D0C  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5136   000D10  0E00               	movlw	0
  5137   000D12  6E2C               	movwf	___fladd@a^0,c
  5138   000D14  0E00               	movlw	0
  5139   000D16  6E2D               	movwf	(___fladd@a+1)^0,c
  5140   000D18  0E80               	movlw	128
  5141   000D1A  6E2E               	movwf	(___fladd@a+2)^0,c
  5142   000D1C  0EBF               	movlw	191
  5143   000D1E  6E2F               	movwf	(___fladd@a+3)^0,c
  5144   000D20  ECF1  F007         	call	___fladd	;wreg free
  5145   000D24  C028  F045         	movff	?___fladd,BaudRateConfig@Local_f32BaudRateTemp
  5146   000D28  C029  F046         	movff	?___fladd+1,BaudRateConfig@Local_f32BaudRateTemp+1
  5147   000D2C  C02A  F047         	movff	?___fladd+2,BaudRateConfig@Local_f32BaudRateTemp+2
  5148   000D30  C02B  F048         	movff	?___fladd+3,BaudRateConfig@Local_f32BaudRateTemp+3
  5149                           
  5150                           ;MCAL/USART/USART.c: 120:                 break;
  5151   000D34  EFD5  F007         	goto	l5492
  5152   000D38                     l1304:
  5153                           
  5154                           ;MCAL/USART/USART.c: 123:                 (TXSTAbits.SYNC = 0);
  5155   000D38  98AC               	bcf	172,4,c	;volatile
  5156                           
  5157                           ;MCAL/USART/USART.c: 124:                 (BAUDCONbits.BRG16 = 1);
  5158   000D3A  86B8               	bsf	184,3,c	;volatile
  5159                           
  5160                           ;MCAL/USART/USART.c: 125:                 (TXSTAbits.BRGH = 1);
  5161   000D3C  84AC               	bsf	172,2,c	;volatile
  5162   000D3E                     
  5163                           ;MCAL/USART/USART.c: 126:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 4) - 1;
  5164   000D3E  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  5165   000D40  6ED9               	movwf	fsr2l,c
  5166   000D42  6ADA               	clrf	fsr2h,c
  5167   000D44  CFDE F043          	movff	postinc2,??_BaudRateConfig
  5168   000D48  CFDD F044          	movff	postdec2,??_BaudRateConfig+1
  5169   000D4C  C043  F001         	movff	??_BaudRateConfig,___xxtofl@val
  5170   000D50  C044  F002         	movff	??_BaudRateConfig+1,___xxtofl@val+1
  5171   000D54  6A03               	clrf	(___xxtofl@val+2)^0,c
  5172   000D56  6A04               	clrf	(___xxtofl@val+3)^0,c
  5173   000D58  0E00               	movlw	0
  5174   000D5A  EC1E  F00E         	call	___xxtofl
  5175   000D5E  C001  F013         	movff	?___xxtofl,___fldiv@a
  5176   000D62  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  5177   000D66  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  5178   000D6A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  5179   000D6E  0E00               	movlw	0
  5180   000D70  6E0F               	movwf	___fldiv@b^0,c
  5181   000D72  0E24               	movlw	36
  5182   000D74  6E10               	movwf	(___fldiv@b+1)^0,c
  5183   000D76  0EF4               	movlw	244
  5184   000D78  6E11               	movwf	(___fldiv@b+2)^0,c
  5185   000D7A  0E4A               	movlw	74
  5186   000D7C  6E12               	movwf	(___fldiv@b+3)^0,c
  5187   000D7E  EC51  F00A         	call	___fldiv	;wreg free
  5188   000D82  C00F  F049         	movff	?___fldiv,_BaudRateConfig$4564
  5189   000D86  C010  F04A         	movff	?___fldiv+1,_BaudRateConfig$4564+1
  5190   000D8A  C011  F04B         	movff	?___fldiv+2,_BaudRateConfig$4564+2
  5191   000D8E  C012  F04C         	movff	?___fldiv+3,_BaudRateConfig$4564+3
  5192   000D92                     
  5193                           ;MCAL/USART/USART.c: 126:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 4) - 1;
  5194   000D92  0E00               	movlw	0
  5195   000D94  6E13               	movwf	___fldiv@a^0,c
  5196   000D96  0E00               	movlw	0
  5197   000D98  6E14               	movwf	(___fldiv@a+1)^0,c
  5198   000D9A  0E80               	movlw	128
  5199   000D9C  6E15               	movwf	(___fldiv@a+2)^0,c
  5200   000D9E  0E40               	movlw	64
  5201   000DA0  6E16               	movwf	(___fldiv@a+3)^0,c
  5202   000DA2  C049  F00F         	movff	_BaudRateConfig$4564,___fldiv@b
  5203   000DA6  C04A  F010         	movff	_BaudRateConfig$4564+1,___fldiv@b+1
  5204   000DAA  C04B  F011         	movff	_BaudRateConfig$4564+2,___fldiv@b+2
  5205   000DAE  C04C  F012         	movff	_BaudRateConfig$4564+3,___fldiv@b+3
  5206   000DB2  EC51  F00A         	call	___fldiv	;wreg free
  5207   000DB6  C00F  F028         	movff	?___fldiv,___fladd@b
  5208   000DBA  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5209   000DBE  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5210   000DC2  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5211   000DC6  0E00               	movlw	0
  5212   000DC8  6E2C               	movwf	___fladd@a^0,c
  5213   000DCA  0E00               	movlw	0
  5214   000DCC  6E2D               	movwf	(___fladd@a+1)^0,c
  5215   000DCE  0E80               	movlw	128
  5216   000DD0  6E2E               	movwf	(___fladd@a+2)^0,c
  5217   000DD2  0EBF               	movlw	191
  5218   000DD4  6E2F               	movwf	(___fladd@a+3)^0,c
  5219   000DD6  ECF1  F007         	call	___fladd	;wreg free
  5220   000DDA  C028  F045         	movff	?___fladd,BaudRateConfig@Local_f32BaudRateTemp
  5221   000DDE  C029  F046         	movff	?___fladd+1,BaudRateConfig@Local_f32BaudRateTemp+1
  5222   000DE2  C02A  F047         	movff	?___fladd+2,BaudRateConfig@Local_f32BaudRateTemp+2
  5223   000DE6  C02B  F048         	movff	?___fladd+3,BaudRateConfig@Local_f32BaudRateTemp+3
  5224                           
  5225                           ;MCAL/USART/USART.c: 128:                 break;
  5226   000DEA  EFD5  F007         	goto	l5492
  5227   000DEE                     l1305:
  5228                           
  5229                           ;MCAL/USART/USART.c: 131:                 (TXSTAbits.SYNC = 1);
  5230   000DEE  88AC               	bsf	172,4,c	;volatile
  5231                           
  5232                           ;MCAL/USART/USART.c: 132:                 (BAUDCONbits.BRG16 = 0);
  5233   000DF0  96B8               	bcf	184,3,c	;volatile
  5234   000DF2                     
  5235                           ;MCAL/USART/USART.c: 133:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 4) - 1;
  5236   000DF2  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  5237   000DF4  6ED9               	movwf	fsr2l,c
  5238   000DF6  6ADA               	clrf	fsr2h,c
  5239   000DF8  CFDE F043          	movff	postinc2,??_BaudRateConfig
  5240   000DFC  CFDD F044          	movff	postdec2,??_BaudRateConfig+1
  5241   000E00  C043  F001         	movff	??_BaudRateConfig,___xxtofl@val
  5242   000E04  C044  F002         	movff	??_BaudRateConfig+1,___xxtofl@val+1
  5243   000E08  6A03               	clrf	(___xxtofl@val+2)^0,c
  5244   000E0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  5245   000E0C  0E00               	movlw	0
  5246   000E0E  EC1E  F00E         	call	___xxtofl
  5247   000E12  C001  F013         	movff	?___xxtofl,___fldiv@a
  5248   000E16  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  5249   000E1A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  5250   000E1E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  5251   000E22  0E00               	movlw	0
  5252   000E24  6E0F               	movwf	___fldiv@b^0,c
  5253   000E26  0E24               	movlw	36
  5254   000E28  6E10               	movwf	(___fldiv@b+1)^0,c
  5255   000E2A  0EF4               	movlw	244
  5256   000E2C  6E11               	movwf	(___fldiv@b+2)^0,c
  5257   000E2E  0E4A               	movlw	74
  5258   000E30  6E12               	movwf	(___fldiv@b+3)^0,c
  5259   000E32  EC51  F00A         	call	___fldiv	;wreg free
  5260   000E36  C00F  F049         	movff	?___fldiv,_BaudRateConfig$4564
  5261   000E3A  C010  F04A         	movff	?___fldiv+1,_BaudRateConfig$4564+1
  5262   000E3E  C011  F04B         	movff	?___fldiv+2,_BaudRateConfig$4564+2
  5263   000E42  C012  F04C         	movff	?___fldiv+3,_BaudRateConfig$4564+3
  5264   000E46                     
  5265                           ;MCAL/USART/USART.c: 133:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 4) - 1;
  5266   000E46  0E00               	movlw	0
  5267   000E48  6E13               	movwf	___fldiv@a^0,c
  5268   000E4A  0E00               	movlw	0
  5269   000E4C  6E14               	movwf	(___fldiv@a+1)^0,c
  5270   000E4E  0E80               	movlw	128
  5271   000E50  6E15               	movwf	(___fldiv@a+2)^0,c
  5272   000E52  0E40               	movlw	64
  5273   000E54  6E16               	movwf	(___fldiv@a+3)^0,c
  5274   000E56  C049  F00F         	movff	_BaudRateConfig$4564,___fldiv@b
  5275   000E5A  C04A  F010         	movff	_BaudRateConfig$4564+1,___fldiv@b+1
  5276   000E5E  C04B  F011         	movff	_BaudRateConfig$4564+2,___fldiv@b+2
  5277   000E62  C04C  F012         	movff	_BaudRateConfig$4564+3,___fldiv@b+3
  5278   000E66  EC51  F00A         	call	___fldiv	;wreg free
  5279   000E6A  C00F  F028         	movff	?___fldiv,___fladd@b
  5280   000E6E  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5281   000E72  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5282   000E76  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5283   000E7A  0E00               	movlw	0
  5284   000E7C  6E2C               	movwf	___fladd@a^0,c
  5285   000E7E  0E00               	movlw	0
  5286   000E80  6E2D               	movwf	(___fladd@a+1)^0,c
  5287   000E82  0E80               	movlw	128
  5288   000E84  6E2E               	movwf	(___fladd@a+2)^0,c
  5289   000E86  0EBF               	movlw	191
  5290   000E88  6E2F               	movwf	(___fladd@a+3)^0,c
  5291   000E8A  ECF1  F007         	call	___fladd	;wreg free
  5292   000E8E  C028  F045         	movff	?___fladd,BaudRateConfig@Local_f32BaudRateTemp
  5293   000E92  C029  F046         	movff	?___fladd+1,BaudRateConfig@Local_f32BaudRateTemp+1
  5294   000E96  C02A  F047         	movff	?___fladd+2,BaudRateConfig@Local_f32BaudRateTemp+2
  5295   000E9A  C02B  F048         	movff	?___fladd+3,BaudRateConfig@Local_f32BaudRateTemp+3
  5296                           
  5297                           ;MCAL/USART/USART.c: 135:                 break;
  5298   000E9E  EFD5  F007         	goto	l5492
  5299   000EA2                     l1306:
  5300                           
  5301                           ;MCAL/USART/USART.c: 137:                 (TXSTAbits.SYNC = 1);
  5302   000EA2  88AC               	bsf	172,4,c	;volatile
  5303                           
  5304                           ;MCAL/USART/USART.c: 138:                 (BAUDCONbits.BRG16 = 1);
  5305   000EA4  86B8               	bsf	184,3,c	;volatile
  5306   000EA6                     
  5307                           ;MCAL/USART/USART.c: 139:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 4) - 1;
  5308   000EA6  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  5309   000EA8  6ED9               	movwf	fsr2l,c
  5310   000EAA  6ADA               	clrf	fsr2h,c
  5311   000EAC  CFDE F043          	movff	postinc2,??_BaudRateConfig
  5312   000EB0  CFDD F044          	movff	postdec2,??_BaudRateConfig+1
  5313   000EB4  C043  F001         	movff	??_BaudRateConfig,___xxtofl@val
  5314   000EB8  C044  F002         	movff	??_BaudRateConfig+1,___xxtofl@val+1
  5315   000EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  5316   000EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  5317   000EC0  0E00               	movlw	0
  5318   000EC2  EC1E  F00E         	call	___xxtofl
  5319   000EC6  C001  F013         	movff	?___xxtofl,___fldiv@a
  5320   000ECA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  5321   000ECE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  5322   000ED2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  5323   000ED6  0E00               	movlw	0
  5324   000ED8  6E0F               	movwf	___fldiv@b^0,c
  5325   000EDA  0E24               	movlw	36
  5326   000EDC  6E10               	movwf	(___fldiv@b+1)^0,c
  5327   000EDE  0EF4               	movlw	244
  5328   000EE0  6E11               	movwf	(___fldiv@b+2)^0,c
  5329   000EE2  0E4A               	movlw	74
  5330   000EE4  6E12               	movwf	(___fldiv@b+3)^0,c
  5331   000EE6  EC51  F00A         	call	___fldiv	;wreg free
  5332   000EEA  C00F  F049         	movff	?___fldiv,_BaudRateConfig$4564
  5333   000EEE  C010  F04A         	movff	?___fldiv+1,_BaudRateConfig$4564+1
  5334   000EF2  C011  F04B         	movff	?___fldiv+2,_BaudRateConfig$4564+2
  5335   000EF6  C012  F04C         	movff	?___fldiv+3,_BaudRateConfig$4564+3
  5336   000EFA                     
  5337                           ;MCAL/USART/USART.c: 139:                 Local_f32BaudRateTemp = (((f32) 8000000 / Copy
      +                          _stUsart->BaudRate) / 4) - 1;
  5338   000EFA  0E00               	movlw	0
  5339   000EFC  6E13               	movwf	___fldiv@a^0,c
  5340   000EFE  0E00               	movlw	0
  5341   000F00  6E14               	movwf	(___fldiv@a+1)^0,c
  5342   000F02  0E80               	movlw	128
  5343   000F04  6E15               	movwf	(___fldiv@a+2)^0,c
  5344   000F06  0E40               	movlw	64
  5345   000F08  6E16               	movwf	(___fldiv@a+3)^0,c
  5346   000F0A  C049  F00F         	movff	_BaudRateConfig$4564,___fldiv@b
  5347   000F0E  C04A  F010         	movff	_BaudRateConfig$4564+1,___fldiv@b+1
  5348   000F12  C04B  F011         	movff	_BaudRateConfig$4564+2,___fldiv@b+2
  5349   000F16  C04C  F012         	movff	_BaudRateConfig$4564+3,___fldiv@b+3
  5350   000F1A  EC51  F00A         	call	___fldiv	;wreg free
  5351   000F1E  C00F  F028         	movff	?___fldiv,___fladd@b
  5352   000F22  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5353   000F26  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5354   000F2A  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5355   000F2E  0E00               	movlw	0
  5356   000F30  6E2C               	movwf	___fladd@a^0,c
  5357   000F32  0E00               	movlw	0
  5358   000F34  6E2D               	movwf	(___fladd@a+1)^0,c
  5359   000F36  0E80               	movlw	128
  5360   000F38  6E2E               	movwf	(___fladd@a+2)^0,c
  5361   000F3A  0EBF               	movlw	191
  5362   000F3C  6E2F               	movwf	(___fladd@a+3)^0,c
  5363   000F3E  ECF1  F007         	call	___fladd	;wreg free
  5364   000F42  C028  F045         	movff	?___fladd,BaudRateConfig@Local_f32BaudRateTemp
  5365   000F46  C029  F046         	movff	?___fladd+1,BaudRateConfig@Local_f32BaudRateTemp+1
  5366   000F4A  C02A  F047         	movff	?___fladd+2,BaudRateConfig@Local_f32BaudRateTemp+2
  5367   000F4E  C02B  F048         	movff	?___fladd+3,BaudRateConfig@Local_f32BaudRateTemp+3
  5368                           
  5369                           ;MCAL/USART/USART.c: 141:                 break;
  5370   000F52  EFD5  F007         	goto	l5492
  5371   000F56                     l5490:
  5372   000F56  5042               	movf	BaudRateConfig@Copy_stUsart^0,w,c
  5373   000F58  6ED9               	movwf	fsr2l,c
  5374   000F5A  6ADA               	clrf	fsr2h,c
  5375   000F5C  0E02               	movlw	2
  5376   000F5E  26D9               	addwf	fsr2l,f,c
  5377   000F60  50DF               	movf	indf2,w,c
  5378   000F62  6E43               	movwf	??_BaudRateConfig^0,c
  5379   000F64  6A44               	clrf	(??_BaudRateConfig+1)^0,c
  5380                           
  5381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5382                           ; Switch size 1, requested type "simple"
  5383                           ; Number of cases is 1, Range of values is 0 to 0
  5384                           ; switch strategies available:
  5385                           ; Name         Instructions Cycles
  5386                           ; simple_byte            4     3 (average)
  5387                           ;	Chosen strategy is simple_byte
  5388   000F66  5044               	movf	(??_BaudRateConfig+1)^0,w,c
  5389   000F68  0A00               	xorlw	0	; case 0
  5390   000F6A  B4D8               	btfsc	status,2,c
  5391   000F6C  EFBA  F007         	goto	l7206
  5392   000F70  EFD5  F007         	goto	l5492
  5393   000F74                     l7206:
  5394                           
  5395                           ; Switch size 1, requested type "simple"
  5396                           ; Number of cases is 6, Range of values is 0 to 5
  5397                           ; switch strategies available:
  5398                           ; Name         Instructions Cycles
  5399                           ; simple_byte           19    10 (average)
  5400                           ;	Chosen strategy is simple_byte
  5401   000F74  5043               	movf	??_BaudRateConfig^0,w,c
  5402   000F76  0A00               	xorlw	0	; case 0
  5403   000F78  B4D8               	btfsc	status,2,c
  5404   000F7A  EF8B  F005         	goto	l1300
  5405   000F7E  0A01               	xorlw	1	; case 1
  5406   000F80  B4D8               	btfsc	status,2,c
  5407   000F82  EFE6  F005         	goto	l1302
  5408   000F86  0A03               	xorlw	3	; case 2
  5409   000F88  B4D8               	btfsc	status,2,c
  5410   000F8A  EF41  F006         	goto	l1303
  5411   000F8E  0A01               	xorlw	1	; case 3
  5412   000F90  B4D8               	btfsc	status,2,c
  5413   000F92  EF9C  F006         	goto	l1304
  5414   000F96  0A07               	xorlw	7	; case 4
  5415   000F98  B4D8               	btfsc	status,2,c
  5416   000F9A  EFF7  F006         	goto	l1305
  5417   000F9E  0A01               	xorlw	1	; case 5
  5418   000FA0  B4D8               	btfsc	status,2,c
  5419   000FA2  EF51  F007         	goto	l1306
  5420   000FA6  EFD5  F007         	goto	l5492
  5421   000FAA                     l5492:
  5422                           
  5423                           ;MCAL/USART/USART.c: 143:         SPBRG = (u8) ((u32) Local_f32BaudRateTemp);
  5424   000FAA  C045  F038         	movff	BaudRateConfig@Local_f32BaudRateTemp,___fltol@f1
  5425   000FAE  C046  F039         	movff	BaudRateConfig@Local_f32BaudRateTemp+1,___fltol@f1+1
  5426   000FB2  C047  F03A         	movff	BaudRateConfig@Local_f32BaudRateTemp+2,___fltol@f1+2
  5427   000FB6  C048  F03B         	movff	BaudRateConfig@Local_f32BaudRateTemp+3,___fltol@f1+3
  5428   000FBA  ECCF  F011         	call	___fltol	;wreg free
  5429   000FBE  5038               	movf	?___fltol^0,w,c
  5430   000FC0  6EAF               	movwf	175,c	;volatile
  5431                           
  5432                           ;MCAL/USART/USART.c: 144:         SPBRGH = (u8) (((u32) Local_f32BaudRateTemp) >> 8);
  5433   000FC2  C045  F038         	movff	BaudRateConfig@Local_f32BaudRateTemp,___fltol@f1
  5434   000FC6  C046  F039         	movff	BaudRateConfig@Local_f32BaudRateTemp+1,___fltol@f1+1
  5435   000FCA  C047  F03A         	movff	BaudRateConfig@Local_f32BaudRateTemp+2,___fltol@f1+2
  5436   000FCE  C048  F03B         	movff	BaudRateConfig@Local_f32BaudRateTemp+3,___fltol@f1+3
  5437   000FD2  ECCF  F011         	call	___fltol	;wreg free
  5438   000FD6  C039  F038         	movff	?___fltol+1,?___fltol
  5439   000FDA  6A39               	clrf	(?___fltol+1)^0,c
  5440   000FDC  5038               	movf	?___fltol^0,w,c
  5441   000FDE  6EB0               	movwf	176,c	;volatile
  5442   000FE0                     l1307:
  5443   000FE0  0012               	return		;funcret
  5444   000FE2                     __end_of_BaudRateConfig:
  5445                           	callstack 0
  5446                           
  5447 ;; *************** function _LED_voidLedInt *****************
  5448 ;; Defined at:
  5449 ;;		line 4 in file "HAL/LED/LED_program.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  Copy_stLed      1    8[COMRAM] PTR struct .
  5452 ;;		 -> LED_LOCK(3), 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5464 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;Total ram usage:        3 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; Hardware stack levels required when called: 2
  5471 ;; This function calls:
  5472 ;;		_GPIO_VoidSetPinDirection
  5473 ;;		_GPIO_VoidSetPinMode
  5474 ;; This function is called by:
  5475 ;;		_Application_Init
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text19
  5480   002CCE                     __ptext19:
  5481                           	callstack 0
  5482   002CCE                     _LED_voidLedInt:
  5483                           	callstack 27
  5484   002CCE                     
  5485                           ;HAL/LED/LED_program.c: 4: void LED_voidLedInt(LED_T *Copy_stLed);HAL/LED/LED_program.c:
      +                           5: {;HAL/LED/LED_program.c: 6:     GPIO_VoidSetPinDirection(Copy_stLed->Port, Copy_stLe
      +                          d->Pin, 0);
  5486   002CCE  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5487   002CD0  6ED9               	movwf	fsr2l,c
  5488   002CD2  6ADA               	clrf	fsr2h,c
  5489   002CD4  0E01               	movlw	1
  5490   002CD6  26D9               	addwf	fsr2l,f,c
  5491   002CD8  50DF               	movf	indf2,w,c
  5492   002CDA  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5493   002CDC  0E00               	movlw	0
  5494   002CDE  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5495   002CE0  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5496   002CE2  6ED9               	movwf	fsr2l,c
  5497   002CE4  6ADA               	clrf	fsr2h,c
  5498   002CE6  50DF               	movf	indf2,w,c
  5499   002CE8  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5500                           
  5501                           ;HAL/LED/LED_program.c: 7:     switch (Copy_stLed->Stauts)
  5502   002CEC  EF9A  F016         	goto	l5610
  5503   002CF0                     l5604:
  5504                           
  5505                           ;HAL/LED/LED_program.c: 10:         GPIO_VoidSetPinMode(Copy_stLed->Port, Copy_stLed->Pi
      +                          n, 1);
  5506   002CF0  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5507   002CF2  6ED9               	movwf	fsr2l,c
  5508   002CF4  6ADA               	clrf	fsr2h,c
  5509   002CF6  0E01               	movlw	1
  5510   002CF8  26D9               	addwf	fsr2l,f,c
  5511   002CFA  50DF               	movf	indf2,w,c
  5512   002CFC  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
  5513   002CFE  0E01               	movlw	1
  5514   002D00  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
  5515   002D02  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5516   002D04  6ED9               	movwf	fsr2l,c
  5517   002D06  6ADA               	clrf	fsr2h,c
  5518   002D08  50DF               	movf	indf2,w,c
  5519   002D0A  EC0E  F015         	call	_GPIO_VoidSetPinMode
  5520                           
  5521                           ;HAL/LED/LED_program.c: 11:         break;
  5522   002D0E  EFB4  F016         	goto	l459
  5523   002D12                     l5606:
  5524                           
  5525                           ;HAL/LED/LED_program.c: 14:         GPIO_VoidSetPinMode(Copy_stLed->Port, Copy_stLed->Pi
      +                          n, 0);
  5526   002D12  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5527   002D14  6ED9               	movwf	fsr2l,c
  5528   002D16  6ADA               	clrf	fsr2h,c
  5529   002D18  0E01               	movlw	1
  5530   002D1A  26D9               	addwf	fsr2l,f,c
  5531   002D1C  50DF               	movf	indf2,w,c
  5532   002D1E  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
  5533   002D20  0E00               	movlw	0
  5534   002D22  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
  5535   002D24  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5536   002D26  6ED9               	movwf	fsr2l,c
  5537   002D28  6ADA               	clrf	fsr2h,c
  5538   002D2A  50DF               	movf	indf2,w,c
  5539   002D2C  EC0E  F015         	call	_GPIO_VoidSetPinMode
  5540                           
  5541                           ;HAL/LED/LED_program.c: 15:         break;
  5542   002D30  EFB4  F016         	goto	l459
  5543   002D34                     l5610:
  5544   002D34  5009               	movf	LED_voidLedInt@Copy_stLed^0,w,c
  5545   002D36  6ED9               	movwf	fsr2l,c
  5546   002D38  6ADA               	clrf	fsr2h,c
  5547   002D3A  0E02               	movlw	2
  5548   002D3C  26D9               	addwf	fsr2l,f,c
  5549   002D3E  50DF               	movf	indf2,w,c
  5550   002D40  6E0A               	movwf	??_LED_voidLedInt^0,c
  5551   002D42  6A0B               	clrf	(??_LED_voidLedInt+1)^0,c
  5552                           
  5553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5554                           ; Switch size 1, requested type "simple"
  5555                           ; Number of cases is 1, Range of values is 0 to 0
  5556                           ; switch strategies available:
  5557                           ; Name         Instructions Cycles
  5558                           ; simple_byte            4     3 (average)
  5559                           ;	Chosen strategy is simple_byte
  5560   002D44  500B               	movf	(??_LED_voidLedInt+1)^0,w,c
  5561   002D46  0A00               	xorlw	0	; case 0
  5562   002D48  B4D8               	btfsc	status,2,c
  5563   002D4A  EFA9  F016         	goto	l7208
  5564   002D4E  EFB4  F016         	goto	l459
  5565   002D52                     l7208:
  5566                           
  5567                           ; Switch size 1, requested type "simple"
  5568                           ; Number of cases is 2, Range of values is 0 to 1
  5569                           ; switch strategies available:
  5570                           ; Name         Instructions Cycles
  5571                           ; simple_byte            7     4 (average)
  5572                           ;	Chosen strategy is simple_byte
  5573   002D52  500A               	movf	??_LED_voidLedInt^0,w,c
  5574   002D54  0A00               	xorlw	0	; case 0
  5575   002D56  B4D8               	btfsc	status,2,c
  5576   002D58  EF89  F016         	goto	l5606
  5577   002D5C  0A01               	xorlw	1	; case 1
  5578   002D5E  B4D8               	btfsc	status,2,c
  5579   002D60  EF78  F016         	goto	l5604
  5580   002D64  EFB4  F016         	goto	l459
  5581   002D68                     l459:
  5582   002D68  0012               	return		;funcret
  5583   002D6A                     __end_of_LED_voidLedInt:
  5584                           	callstack 0
  5585                           
  5586 ;; *************** function _LCD4Bit_voidLCD_Init *****************
  5587 ;; Defined at:
  5588 ;;		line 15 in file "HAL/LCD/LCD_program.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  Copy_stLCD4B    1   12[COMRAM] PTR struct .
  5591 ;;		 -> LCD_1(7), 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5603 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;Total ram usage:        2 bytes
  5608 ;; Hardware stack levels used: 1
  5609 ;; Hardware stack levels required when called: 4
  5610 ;; This function calls:
  5611 ;;		_GPIO_VoidSetPinDirection
  5612 ;;		_LCD4Bit_voidSendCommand
  5613 ;; This function is called by:
  5614 ;;		_Application_Init
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text20
  5619   001DF0                     __ptext20:
  5620                           	callstack 0
  5621   001DF0                     _LCD4Bit_voidLCD_Init:
  5622                           	callstack 25
  5623   001DF0                     
  5624                           ;HAL/LCD/LCD_program.c: 15: void LCD4Bit_voidLCD_Init(LCD_4_BIT_T *Copy_stLCD4Bit);HAL/L
      +                          CD/LCD_program.c: 16: {;HAL/LCD/LCD_program.c: 18:     GPIO_VoidSetPinDirection(Copy_stL
      +                          CD4Bit->LCD_RW.Port, Copy_stLCD4Bit->LCD_RW.Pin, 0);
  5625   001DF0  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5626   001DF2  6ED9               	movwf	fsr2l,c
  5627   001DF4  6ADA               	clrf	fsr2h,c
  5628   001DF6  0E01               	movlw	1
  5629   001DF8  26D9               	addwf	fsr2l,f,c
  5630   001DFA  30DF               	rrcf	223,w,c
  5631   001DFC  32E8               	rrcf	wreg,f,c
  5632   001DFE  32E8               	rrcf	wreg,f,c
  5633   001E00  0B07               	andlw	7
  5634   001E02  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5635   001E04  0E00               	movlw	0
  5636   001E06  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5637   001E08  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5638   001E0A  6ED9               	movwf	fsr2l,c
  5639   001E0C  6ADA               	clrf	fsr2h,c
  5640   001E0E  0E01               	movlw	1
  5641   001E10  26D9               	addwf	fsr2l,f,c
  5642   001E12  50DF               	movf	223,w,c
  5643   001E14  0B07               	andlw	7
  5644   001E16  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5645                           
  5646                           ;HAL/LCD/LCD_program.c: 19:     GPIO_VoidSetPinDirection(Copy_stLCD4Bit->LCD_RS.Port, Co
      +                          py_stLCD4Bit->LCD_RS.Pin, 0);
  5647   001E1A  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5648   001E1C  6ED9               	movwf	fsr2l,c
  5649   001E1E  6ADA               	clrf	fsr2h,c
  5650   001E20  30DF               	rrcf	223,w,c
  5651   001E22  32E8               	rrcf	wreg,f,c
  5652   001E24  32E8               	rrcf	wreg,f,c
  5653   001E26  0B07               	andlw	7
  5654   001E28  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5655   001E2A  0E00               	movlw	0
  5656   001E2C  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5657   001E2E  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5658   001E30  6ED9               	movwf	fsr2l,c
  5659   001E32  6ADA               	clrf	fsr2h,c
  5660   001E34  50DF               	movf	223,w,c
  5661   001E36  0B07               	andlw	7
  5662   001E38  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5663                           
  5664                           ;HAL/LCD/LCD_program.c: 20:     GPIO_VoidSetPinDirection(Copy_stLCD4Bit->LCD_EN.Port, Co
      +                          py_stLCD4Bit->LCD_EN.Pin, 0);
  5665   001E3C  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5666   001E3E  6ED9               	movwf	fsr2l,c
  5667   001E40  6ADA               	clrf	fsr2h,c
  5668   001E42  0E02               	movlw	2
  5669   001E44  26D9               	addwf	fsr2l,f,c
  5670   001E46  30DF               	rrcf	223,w,c
  5671   001E48  32E8               	rrcf	wreg,f,c
  5672   001E4A  32E8               	rrcf	wreg,f,c
  5673   001E4C  0B07               	andlw	7
  5674   001E4E  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5675   001E50  0E00               	movlw	0
  5676   001E52  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5677   001E54  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5678   001E56  6ED9               	movwf	fsr2l,c
  5679   001E58  6ADA               	clrf	fsr2h,c
  5680   001E5A  0E02               	movlw	2
  5681   001E5C  26D9               	addwf	fsr2l,f,c
  5682   001E5E  50DF               	movf	223,w,c
  5683   001E60  0B07               	andlw	7
  5684   001E62  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5685                           
  5686                           ;HAL/LCD/LCD_program.c: 22:     GPIO_VoidSetPinDirection(Copy_stLCD4Bit->DataPin[0].Port
      +                          , Copy_stLCD4Bit->DataPin[0].Pin, 0);
  5687   001E66  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5688   001E68  6ED9               	movwf	fsr2l,c
  5689   001E6A  6ADA               	clrf	fsr2h,c
  5690   001E6C  0E03               	movlw	3
  5691   001E6E  26D9               	addwf	fsr2l,f,c
  5692   001E70  30DF               	rrcf	223,w,c
  5693   001E72  32E8               	rrcf	wreg,f,c
  5694   001E74  32E8               	rrcf	wreg,f,c
  5695   001E76  0B07               	andlw	7
  5696   001E78  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5697   001E7A  0E00               	movlw	0
  5698   001E7C  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5699   001E7E  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5700   001E80  6ED9               	movwf	fsr2l,c
  5701   001E82  6ADA               	clrf	fsr2h,c
  5702   001E84  0E03               	movlw	3
  5703   001E86  26D9               	addwf	fsr2l,f,c
  5704   001E88  50DF               	movf	223,w,c
  5705   001E8A  0B07               	andlw	7
  5706   001E8C  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5707                           
  5708                           ;HAL/LCD/LCD_program.c: 23:     GPIO_VoidSetPinDirection(Copy_stLCD4Bit->DataPin[1].Port
      +                          , Copy_stLCD4Bit->DataPin[1].Pin, 0);
  5709   001E90  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5710   001E92  6ED9               	movwf	fsr2l,c
  5711   001E94  6ADA               	clrf	fsr2h,c
  5712   001E96  0E04               	movlw	4
  5713   001E98  26D9               	addwf	fsr2l,f,c
  5714   001E9A  30DF               	rrcf	223,w,c
  5715   001E9C  32E8               	rrcf	wreg,f,c
  5716   001E9E  32E8               	rrcf	wreg,f,c
  5717   001EA0  0B07               	andlw	7
  5718   001EA2  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5719   001EA4  0E00               	movlw	0
  5720   001EA6  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5721   001EA8  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5722   001EAA  6ED9               	movwf	fsr2l,c
  5723   001EAC  6ADA               	clrf	fsr2h,c
  5724   001EAE  0E04               	movlw	4
  5725   001EB0  26D9               	addwf	fsr2l,f,c
  5726   001EB2  50DF               	movf	223,w,c
  5727   001EB4  0B07               	andlw	7
  5728   001EB6  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5729                           
  5730                           ;HAL/LCD/LCD_program.c: 24:     GPIO_VoidSetPinDirection(Copy_stLCD4Bit->DataPin[2].Port
      +                          , Copy_stLCD4Bit->DataPin[2].Pin, 0);
  5731   001EBA  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5732   001EBC  6ED9               	movwf	fsr2l,c
  5733   001EBE  6ADA               	clrf	fsr2h,c
  5734   001EC0  0E05               	movlw	5
  5735   001EC2  26D9               	addwf	fsr2l,f,c
  5736   001EC4  30DF               	rrcf	223,w,c
  5737   001EC6  32E8               	rrcf	wreg,f,c
  5738   001EC8  32E8               	rrcf	wreg,f,c
  5739   001ECA  0B07               	andlw	7
  5740   001ECC  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5741   001ECE  0E00               	movlw	0
  5742   001ED0  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5743   001ED2  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5744   001ED4  6ED9               	movwf	fsr2l,c
  5745   001ED6  6ADA               	clrf	fsr2h,c
  5746   001ED8  0E05               	movlw	5
  5747   001EDA  26D9               	addwf	fsr2l,f,c
  5748   001EDC  50DF               	movf	223,w,c
  5749   001EDE  0B07               	andlw	7
  5750   001EE0  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5751                           
  5752                           ;HAL/LCD/LCD_program.c: 25:     GPIO_VoidSetPinDirection(Copy_stLCD4Bit->DataPin[3].Port
      +                          , Copy_stLCD4Bit->DataPin[3].Pin, 0);
  5753   001EE4  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5754   001EE6  6ED9               	movwf	fsr2l,c
  5755   001EE8  6ADA               	clrf	fsr2h,c
  5756   001EEA  0E06               	movlw	6
  5757   001EEC  26D9               	addwf	fsr2l,f,c
  5758   001EEE  30DF               	rrcf	223,w,c
  5759   001EF0  32E8               	rrcf	wreg,f,c
  5760   001EF2  32E8               	rrcf	wreg,f,c
  5761   001EF4  0B07               	andlw	7
  5762   001EF6  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5763   001EF8  0E00               	movlw	0
  5764   001EFA  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5765   001EFC  500D               	movf	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit^0,w,c
  5766   001EFE  6ED9               	movwf	fsr2l,c
  5767   001F00  6ADA               	clrf	fsr2h,c
  5768   001F02  0E06               	movlw	6
  5769   001F04  26D9               	addwf	fsr2l,f,c
  5770   001F06  50DF               	movf	223,w,c
  5771   001F08  0B07               	andlw	7
  5772   001F0A  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5773   001F0E                     
  5774                           ;HAL/LCD/LCD_program.c: 28:     _delay((unsigned long)((20)*(8000000/4000.0)));
  5775   001F0E  0E34               	movlw	52
  5776   001F10  6E0E               	movwf	??_LCD4Bit_voidLCD_Init^0,c
  5777   001F12  0EF2               	movlw	242
  5778   001F14                     u6477:
  5779   001F14  2EE8               	decfsz	wreg,f,c
  5780   001F16  D7FE               	bra	u6477
  5781   001F18  2E0E               	decfsz	??_LCD4Bit_voidLCD_Init^0,f,c
  5782   001F1A  D7FC               	bra	u6477
  5783   001F1C                     
  5784                           ;HAL/LCD/LCD_program.c: 29:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x38);
  5785   001F1C  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5786   001F20  0E38               	movlw	56
  5787   001F22  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5788   001F24  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5789                           
  5790                           ;HAL/LCD/LCD_program.c: 30:     _delay((unsigned long)((10)*(8000000/4000.0)));
  5791   001F28  0E1A               	movlw	26
  5792   001F2A  6E0E               	movwf	??_LCD4Bit_voidLCD_Init^0,c
  5793   001F2C  0EF8               	movlw	248
  5794   001F2E                     u6487:
  5795   001F2E  2EE8               	decfsz	wreg,f,c
  5796   001F30  D7FE               	bra	u6487
  5797   001F32  2E0E               	decfsz	??_LCD4Bit_voidLCD_Init^0,f,c
  5798   001F34  D7FC               	bra	u6487
  5799   001F36  D000               	nop2	
  5800   001F38                     
  5801                           ;HAL/LCD/LCD_program.c: 31:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x38);
  5802   001F38  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5803   001F3C  0E38               	movlw	56
  5804   001F3E  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5805   001F40  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5806   001F44                     
  5807                           ;HAL/LCD/LCD_program.c: 32:     _delay((unsigned long)((150)*(8000000/4000000.0)));
  5808   001F44  0E64               	movlw	100
  5809   001F46                     u6497:
  5810   001F46  2EE8               	decfsz	wreg,f,c
  5811   001F48  D7FE               	bra	u6497
  5812                           
  5813                           ;HAL/LCD/LCD_program.c: 33:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x38);
  5814   001F4A  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5815   001F4E  0E38               	movlw	56
  5816   001F50  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5817   001F52  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5818                           
  5819                           ;HAL/LCD/LCD_program.c: 34:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x01);
  5820   001F56  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5821   001F5A  0E01               	movlw	1
  5822   001F5C  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5823   001F5E  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5824                           
  5825                           ;HAL/LCD/LCD_program.c: 35:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x02);
  5826   001F62  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5827   001F66  0E02               	movlw	2
  5828   001F68  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5829   001F6A  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5830                           
  5831                           ;HAL/LCD/LCD_program.c: 36:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x06);
  5832   001F6E  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5833   001F72  0E06               	movlw	6
  5834   001F74  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5835   001F76  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5836                           
  5837                           ;HAL/LCD/LCD_program.c: 37:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x0E);
  5838   001F7A  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5839   001F7E  0E0E               	movlw	14
  5840   001F80  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5841   001F82  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5842                           
  5843                           ;HAL/LCD/LCD_program.c: 38:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x28);
  5844   001F86  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5845   001F8A  0E28               	movlw	40
  5846   001F8C  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5847   001F8E  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5848                           
  5849                           ;HAL/LCD/LCD_program.c: 39:     LCD4Bit_voidSendCommand(Copy_stLCD4Bit, 0x80);
  5850   001F92  C00D  F00B         	movff	LCD4Bit_voidLCD_Init@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  5851   001F96  0E80               	movlw	128
  5852   001F98  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  5853   001F9A  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  5854   001F9E  0012               	return		;funcret
  5855   001FA0                     __end_of_LCD4Bit_voidLCD_Init:
  5856                           	callstack 0
  5857                           
  5858 ;; *************** function _KEYPAD_voidKeyPadInt *****************
  5859 ;; Defined at:
  5860 ;;		line 6 in file "HAL/KeyPad/KEYPAD_program.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  Copy_stKeyPa    1    8[COMRAM] PTR struct .
  5863 ;;		 -> KeyPad_1(16), 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  i               1   10[COMRAM] unsigned char 
  5866 ;;  i               1    9[COMRAM] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;Total ram usage:        3 bytes
  5881 ;; Hardware stack levels used: 1
  5882 ;; Hardware stack levels required when called: 2
  5883 ;; This function calls:
  5884 ;;		_GPIO_VoidSetPinDirection
  5885 ;; This function is called by:
  5886 ;;		_Application_Init
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text21
  5891   002E8E                     __ptext21:
  5892                           	callstack 0
  5893   002E8E                     _KEYPAD_voidKeyPadInt:
  5894                           	callstack 27
  5895   002E8E                     
  5896                           ;HAL/KeyPad/KEYPAD_program.c: 6: void KEYPAD_voidKeyPadInt(KeyPad_T *Copy_stKeyPad);HAL/
      +                          KeyPad/KEYPAD_program.c: 7: {;HAL/KeyPad/KEYPAD_program.c: 8:     for (u8 i = 0; i < 4; 
      +                          i++)
  5897   002E8E  0E00               	movlw	0
  5898   002E90  6E0A               	movwf	KEYPAD_voidKeyPadInt@i^0,c
  5899   002E92                     l5568:
  5900                           
  5901                           ;HAL/KeyPad/KEYPAD_program.c: 9:     {;HAL/KeyPad/KEYPAD_program.c: 10:         GPIO_Voi
      +                          dSetPinDirection(Copy_stKeyPad->RowPinConfig[i].Port, Copy_stKeyPad->RowPinConfig[i].Pin
      +                          , 0);
  5902   002E92  500A               	movf	KEYPAD_voidKeyPadInt@i^0,w,c
  5903   002E94  0D02               	mullw	2
  5904   002E96  5009               	movf	KEYPAD_voidKeyPadInt@Copy_stKeyPad^0,w,c
  5905   002E98  24F3               	addwf	243,w,c
  5906   002E9A  6ED9               	movwf	fsr2l,c
  5907   002E9C  6ADA               	clrf	fsr2h,c
  5908   002E9E  0E01               	movlw	1
  5909   002EA0  26D9               	addwf	fsr2l,f,c
  5910   002EA2  50DF               	movf	indf2,w,c
  5911   002EA4  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5912   002EA6  0E00               	movlw	0
  5913   002EA8  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5914   002EAA  500A               	movf	KEYPAD_voidKeyPadInt@i^0,w,c
  5915   002EAC  0D02               	mullw	2
  5916   002EAE  5009               	movf	KEYPAD_voidKeyPadInt@Copy_stKeyPad^0,w,c
  5917   002EB0  24F3               	addwf	243,w,c
  5918   002EB2  6ED9               	movwf	fsr2l,c
  5919   002EB4  6ADA               	clrf	fsr2h,c
  5920   002EB6  50DF               	movf	indf2,w,c
  5921   002EB8  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5922   002EBC                     
  5923                           ;HAL/KeyPad/KEYPAD_program.c: 11:     }
  5924   002EBC  2A0A               	incf	KEYPAD_voidKeyPadInt@i^0,f,c
  5925   002EBE  0E03               	movlw	3
  5926   002EC0  640A               	cpfsgt	KEYPAD_voidKeyPadInt@i^0,c
  5927   002EC2  EF65  F017         	goto	u4731
  5928   002EC6  EF67  F017         	goto	u4730
  5929   002ECA                     u4731:
  5930   002ECA  EF49  F017         	goto	l5568
  5931   002ECE                     u4730:
  5932   002ECE                     
  5933                           ;HAL/KeyPad/KEYPAD_program.c: 12:     for (u8 i = 0; i < 4; i++)
  5934   002ECE  0E00               	movlw	0
  5935   002ED0  6E0B               	movwf	KEYPAD_voidKeyPadInt@i_958^0,c
  5936   002ED2                     l5580:
  5937                           
  5938                           ;HAL/KeyPad/KEYPAD_program.c: 13:     {;HAL/KeyPad/KEYPAD_program.c: 14:         GPIO_Vo
      +                          idSetPinDirection(Copy_stKeyPad->CoulmPinConfig[i].Port, Copy_stKeyPad->CoulmPinConfig[i
      +                          ].Pin, 1);
  5939   002ED2  500B               	movf	KEYPAD_voidKeyPadInt@i_958^0,w,c
  5940   002ED4  0D02               	mullw	2
  5941   002ED6  5009               	movf	KEYPAD_voidKeyPadInt@Copy_stKeyPad^0,w,c
  5942   002ED8  24F3               	addwf	243,w,c
  5943   002EDA  6ED9               	movwf	fsr2l,c
  5944   002EDC  6ADA               	clrf	fsr2h,c
  5945   002EDE  0E09               	movlw	9
  5946   002EE0  26D9               	addwf	fsr2l,f,c
  5947   002EE2  50DF               	movf	indf2,w,c
  5948   002EE4  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
  5949   002EE6  0E01               	movlw	1
  5950   002EE8  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
  5951   002EEA  500B               	movf	KEYPAD_voidKeyPadInt@i_958^0,w,c
  5952   002EEC  0D02               	mullw	2
  5953   002EEE  5009               	movf	KEYPAD_voidKeyPadInt@Copy_stKeyPad^0,w,c
  5954   002EF0  24F3               	addwf	243,w,c
  5955   002EF2  6ED9               	movwf	fsr2l,c
  5956   002EF4  6ADA               	clrf	fsr2h,c
  5957   002EF6  0E08               	movlw	8
  5958   002EF8  26D9               	addwf	fsr2l,f,c
  5959   002EFA  50DF               	movf	indf2,w,c
  5960   002EFC  EC66  F015         	call	_GPIO_VoidSetPinDirection
  5961   002F00                     
  5962                           ;HAL/KeyPad/KEYPAD_program.c: 15:     }
  5963   002F00  2A0B               	incf	KEYPAD_voidKeyPadInt@i_958^0,f,c
  5964   002F02  0E03               	movlw	3
  5965   002F04  640B               	cpfsgt	KEYPAD_voidKeyPadInt@i_958^0,c
  5966   002F06  EF87  F017         	goto	u4741
  5967   002F0A  EF89  F017         	goto	u4740
  5968   002F0E                     u4741:
  5969   002F0E  EF69  F017         	goto	l5580
  5970   002F12                     u4740:
  5971   002F12  0012               	return		;funcret
  5972   002F14                     __end_of_KEYPAD_voidKeyPadInt:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function _I2C_voidI2CInit *****************
  5976 ;; Defined at:
  5977 ;;		line 13 in file "MCAL/I2C/I2C.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  Copy_stI2C      1   68[COMRAM] PTR const struct .
  5980 ;;		 -> i2c_obj(5), 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5992 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;Total ram usage:        3 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 3
  5999 ;; This function calls:
  6000 ;;		_I2C_MasterMode_CFG
  6001 ;;		_I2C_SlaveMode_CFG
  6002 ;; This function is called by:
  6003 ;;		_Application_Init
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text22
  6008   002122                     __ptext22:
  6009                           	callstack 0
  6010   002122                     _I2C_voidI2CInit:
  6011                           	callstack 26
  6012   002122                     
  6013                           ;MCAL/I2C/I2C.c: 13: void I2C_voidI2CInit(const I2C_t *Copy_stI2C);MCAL/I2C/I2C.c: 14: {
      +                          ;MCAL/I2C/I2C.c: 15:     if (((void*)0) != Copy_stI2C)
  6014   002122  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6015   002124  B4D8               	btfsc	status,2,c
  6016   002126  EF97  F010         	goto	u4781
  6017   00212A  EF99  F010         	goto	u4780
  6018   00212E                     u4781:
  6019   00212E  EF45  F011         	goto	l840
  6020   002132                     u4780:
  6021   002132                     
  6022                           ;MCAL/I2C/I2C.c: 16:     {;MCAL/I2C/I2C.c: 18:         (SSPCON1bits.SSPEN = 0);
  6023   002132  9AC6               	bcf	198,5,c	;volatile
  6024   002134                     
  6025                           ;MCAL/I2C/I2C.c: 20:         if (1 == Copy_stI2C->i2c_cfg.i2c_mode)
  6026   002134  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6027   002136  6ED9               	movwf	fsr2l,c
  6028   002138  6ADA               	clrf	fsr2h,c
  6029   00213A  0E04               	movlw	4
  6030   00213C  26D9               	addwf	fsr2l,f,c
  6031   00213E  A0DF               	btfss	indf2,0,c
  6032   002140  EFA4  F010         	goto	u4791
  6033   002144  EFA6  F010         	goto	u4790
  6034   002148                     u4791:
  6035   002148  EFAC  F010         	goto	l5624
  6036   00214C                     u4790:
  6037   00214C                     
  6038                           ;MCAL/I2C/I2C.c: 21:         {;MCAL/I2C/I2C.c: 22:             I2C_MasterMode_CFG(Copy_s
      +                          tI2C);
  6039   00214C  C045  F042         	movff	I2C_voidI2CInit@Copy_stI2C,I2C_MasterMode_CFG@Copy_stI2C
  6040   002150  ECCF  F012         	call	_I2C_MasterMode_CFG	;wreg free
  6041                           
  6042                           ;MCAL/I2C/I2C.c: 23:         }
  6043   002154  EFF0  F010         	goto	l5636
  6044   002158                     l5624:
  6045   002158  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6046   00215A  6ED9               	movwf	fsr2l,c
  6047   00215C  6ADA               	clrf	fsr2h,c
  6048   00215E  0E04               	movlw	4
  6049   002160  26D9               	addwf	fsr2l,f,c
  6050   002162  B0DF               	btfsc	indf2,0,c
  6051   002164  EFB6  F010         	goto	u4801
  6052   002168  EFB8  F010         	goto	u4800
  6053   00216C                     u4801:
  6054   00216C  EFF0  F010         	goto	l5636
  6055   002170                     u4800:
  6056   002170                     
  6057                           ;MCAL/I2C/I2C.c: 25:         {;MCAL/I2C/I2C.c: 27:             SSPCON1bits.CKP = 1;
  6058   002170  88C6               	bsf	198,4,c	;volatile
  6059                           
  6060                           ;MCAL/I2C/I2C.c: 29:             SSPCON1bits.SSPOV = 0;
  6061   002172  9CC6               	bcf	198,6,c	;volatile
  6062                           
  6063                           ;MCAL/I2C/I2C.c: 31:             SSPCON1bits.WCOL = 0;
  6064   002174  9EC6               	bcf	198,7,c	;volatile
  6065   002176                     
  6066                           ;MCAL/I2C/I2C.c: 32:             I2C_SlaveMode_CFG(Copy_stI2C);
  6067   002176  C045  F001         	movff	I2C_voidI2CInit@Copy_stI2C,I2C_SlaveMode_CFG@Copy_stI2C
  6068   00217A  EC44  F01C         	call	_I2C_SlaveMode_CFG	;wreg free
  6069                           
  6070                           ;MCAL/I2C/I2C.c: 34:             switch (Copy_stI2C->i2c_cfg.i2c_general_call)
  6071   00217E  EFC7  F010         	goto	l5632
  6072   002182                     l826:
  6073                           
  6074                           ;MCAL/I2C/I2C.c: 37:                 (SSPCON2bits.GCEN = 0);
  6075   002182  9EC5               	bcf	197,7,c	;volatile
  6076                           
  6077                           ;MCAL/I2C/I2C.c: 38:                 break;
  6078   002184  EFE9  F010         	goto	l5634
  6079   002188                     l828:
  6080                           
  6081                           ;MCAL/I2C/I2C.c: 40:                 (SSPCON2bits.GCEN = 1);
  6082   002188  8EC5               	bsf	197,7,c	;volatile
  6083                           
  6084                           ;MCAL/I2C/I2C.c: 41:                 break;
  6085   00218A  EFE9  F010         	goto	l5634
  6086   00218E                     l5632:
  6087   00218E  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6088   002190  6ED9               	movwf	fsr2l,c
  6089   002192  6ADA               	clrf	fsr2h,c
  6090   002194  0E04               	movlw	4
  6091   002196  26D9               	addwf	fsr2l,f,c
  6092   002198  B6DF               	btfsc	indf2,3,c
  6093   00219A  EFD1  F010         	goto	u4811
  6094   00219E  EFD4  F010         	goto	u4810
  6095   0021A2                     u4811:
  6096   0021A2  0E01               	movlw	1
  6097   0021A4  EFD5  F010         	goto	u4820
  6098   0021A8                     u4810:
  6099   0021A8  0E00               	movlw	0
  6100   0021AA                     u4820:
  6101   0021AA  6E46               	movwf	??_I2C_voidI2CInit^0,c
  6102   0021AC  6A47               	clrf	(??_I2C_voidI2CInit+1)^0,c
  6103                           
  6104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6105                           ; Switch size 1, requested type "simple"
  6106                           ; Number of cases is 1, Range of values is 0 to 0
  6107                           ; switch strategies available:
  6108                           ; Name         Instructions Cycles
  6109                           ; simple_byte            4     3 (average)
  6110                           ;	Chosen strategy is simple_byte
  6111   0021AE  5047               	movf	(??_I2C_voidI2CInit+1)^0,w,c
  6112   0021B0  0A00               	xorlw	0	; case 0
  6113   0021B2  B4D8               	btfsc	status,2,c
  6114   0021B4  EFDE  F010         	goto	l7210
  6115   0021B8  EFE9  F010         	goto	l5634
  6116   0021BC                     l7210:
  6117                           
  6118                           ; Switch size 1, requested type "simple"
  6119                           ; Number of cases is 2, Range of values is 0 to 1
  6120                           ; switch strategies available:
  6121                           ; Name         Instructions Cycles
  6122                           ; simple_byte            7     4 (average)
  6123                           ;	Chosen strategy is simple_byte
  6124   0021BC  5046               	movf	??_I2C_voidI2CInit^0,w,c
  6125   0021BE  0A00               	xorlw	0	; case 0
  6126   0021C0  B4D8               	btfsc	status,2,c
  6127   0021C2  EFC1  F010         	goto	l826
  6128   0021C6  0A01               	xorlw	1	; case 1
  6129   0021C8  B4D8               	btfsc	status,2,c
  6130   0021CA  EFC4  F010         	goto	l828
  6131   0021CE  EFE9  F010         	goto	l5634
  6132   0021D2                     l5634:
  6133                           
  6134                           ;MCAL/I2C/I2C.c: 45:             SSPADD = Copy_stI2C->i2c_cfg.i2c_slave_add;
  6135   0021D2  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6136   0021D4  6ED9               	movwf	fsr2l,c
  6137   0021D6  6ADA               	clrf	fsr2h,c
  6138   0021D8  0E03               	movlw	3
  6139   0021DA  26D9               	addwf	fsr2l,f,c
  6140   0021DC  50DF               	movf	indf2,w,c
  6141   0021DE  6EC8               	movwf	200,c	;volatile
  6142   0021E0                     l5636:
  6143                           
  6144                           ;MCAL/I2C/I2C.c: 49:         TRISCbits.TRISC3 = 1;
  6145   0021E0  8694               	bsf	148,3,c	;volatile
  6146   0021E2                     
  6147                           ;MCAL/I2C/I2C.c: 50:         TRISCbits.TRISC4 = 1;
  6148   0021E2  8894               	bsf	148,4,c	;volatile
  6149                           
  6150                           ;MCAL/I2C/I2C.c: 52:         switch (Copy_stI2C->i2c_cfg.i2c_smBUS)
  6151   0021E4  EFFA  F010         	goto	l5642
  6152   0021E8                     l831:
  6153                           
  6154                           ;MCAL/I2C/I2C.c: 55:             (SSPSTATbits.CKE = 0);
  6155   0021E8  9CC7               	bcf	199,6,c	;volatile
  6156                           
  6157                           ;MCAL/I2C/I2C.c: 56:             break;
  6158   0021EA  EF22  F011         	goto	l5646
  6159   0021EE                     l833:
  6160                           
  6161                           ;MCAL/I2C/I2C.c: 58:             (SSPSTATbits.CKE = 1);
  6162   0021EE  8CC7               	bsf	199,6,c	;volatile
  6163                           
  6164                           ;MCAL/I2C/I2C.c: 59:             break;
  6165   0021F0  EF22  F011         	goto	l5646
  6166   0021F4                     l5642:
  6167   0021F4  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6168   0021F6  6ED9               	movwf	fsr2l,c
  6169   0021F8  6ADA               	clrf	fsr2h,c
  6170   0021FA  0E04               	movlw	4
  6171   0021FC  26D9               	addwf	fsr2l,f,c
  6172   0021FE  B4DF               	btfsc	indf2,2,c
  6173   002200  EF04  F011         	goto	u4831
  6174   002204  EF07  F011         	goto	u4830
  6175   002208                     u4831:
  6176   002208  0E01               	movlw	1
  6177   00220A  EF08  F011         	goto	u4840
  6178   00220E                     u4830:
  6179   00220E  0E00               	movlw	0
  6180   002210                     u4840:
  6181   002210  6E46               	movwf	??_I2C_voidI2CInit^0,c
  6182   002212  6A47               	clrf	(??_I2C_voidI2CInit+1)^0,c
  6183                           
  6184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6185                           ; Switch size 1, requested type "simple"
  6186                           ; Number of cases is 1, Range of values is 0 to 0
  6187                           ; switch strategies available:
  6188                           ; Name         Instructions Cycles
  6189                           ; simple_byte            4     3 (average)
  6190                           ;	Chosen strategy is simple_byte
  6191   002214  5047               	movf	(??_I2C_voidI2CInit+1)^0,w,c
  6192   002216  0A00               	xorlw	0	; case 0
  6193   002218  B4D8               	btfsc	status,2,c
  6194   00221A  EF11  F011         	goto	l7212
  6195   00221E  EF22  F011         	goto	l5646
  6196   002222                     l7212:
  6197                           
  6198                           ; Switch size 1, requested type "simple"
  6199                           ; Number of cases is 2, Range of values is 0 to 1
  6200                           ; switch strategies available:
  6201                           ; Name         Instructions Cycles
  6202                           ; simple_byte            7     4 (average)
  6203                           ;	Chosen strategy is simple_byte
  6204   002222  5046               	movf	??_I2C_voidI2CInit^0,w,c
  6205   002224  0A00               	xorlw	0	; case 0
  6206   002226  B4D8               	btfsc	status,2,c
  6207   002228  EFF4  F010         	goto	l831
  6208   00222C  0A01               	xorlw	1	; case 1
  6209   00222E  B4D8               	btfsc	status,2,c
  6210   002230  EFF7  F010         	goto	l833
  6211   002234  EF22  F011         	goto	l5646
  6212   002238                     l836:
  6213                           
  6214                           ;MCAL/I2C/I2C.c: 67:             (SSPSTATbits.SMP = 1);
  6215   002238  8EC7               	bsf	199,7,c	;volatile
  6216                           
  6217                           ;MCAL/I2C/I2C.c: 68:             break;
  6218   00223A  EF44  F011         	goto	l837
  6219   00223E                     l838:
  6220                           
  6221                           ;MCAL/I2C/I2C.c: 70:             (SSPSTATbits.SMP = 0);
  6222   00223E  9EC7               	bcf	199,7,c	;volatile
  6223                           
  6224                           ;MCAL/I2C/I2C.c: 71:             break;
  6225   002240  EF44  F011         	goto	l837
  6226   002244                     l5646:
  6227   002244  5045               	movf	I2C_voidI2CInit@Copy_stI2C^0,w,c
  6228   002246  6ED9               	movwf	fsr2l,c
  6229   002248  6ADA               	clrf	fsr2h,c
  6230   00224A  0E04               	movlw	4
  6231   00224C  26D9               	addwf	fsr2l,f,c
  6232   00224E  B2DF               	btfsc	indf2,1,c
  6233   002250  EF2C  F011         	goto	u4851
  6234   002254  EF2F  F011         	goto	u4850
  6235   002258                     u4851:
  6236   002258  0E01               	movlw	1
  6237   00225A  EF30  F011         	goto	u4860
  6238   00225E                     u4850:
  6239   00225E  0E00               	movlw	0
  6240   002260                     u4860:
  6241   002260  6E46               	movwf	??_I2C_voidI2CInit^0,c
  6242   002262  6A47               	clrf	(??_I2C_voidI2CInit+1)^0,c
  6243                           
  6244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6245                           ; Switch size 1, requested type "simple"
  6246                           ; Number of cases is 1, Range of values is 0 to 0
  6247                           ; switch strategies available:
  6248                           ; Name         Instructions Cycles
  6249                           ; simple_byte            4     3 (average)
  6250                           ;	Chosen strategy is simple_byte
  6251   002264  5047               	movf	(??_I2C_voidI2CInit+1)^0,w,c
  6252   002266  0A00               	xorlw	0	; case 0
  6253   002268  B4D8               	btfsc	status,2,c
  6254   00226A  EF39  F011         	goto	l7214
  6255   00226E  EF44  F011         	goto	l837
  6256   002272                     l7214:
  6257                           
  6258                           ; Switch size 1, requested type "simple"
  6259                           ; Number of cases is 2, Range of values is 0 to 1
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            7     4 (average)
  6263                           ;	Chosen strategy is simple_byte
  6264   002272  5046               	movf	??_I2C_voidI2CInit^0,w,c
  6265   002274  0A00               	xorlw	0	; case 0
  6266   002276  B4D8               	btfsc	status,2,c
  6267   002278  EF1F  F011         	goto	l838
  6268   00227C  0A01               	xorlw	1	; case 1
  6269   00227E  B4D8               	btfsc	status,2,c
  6270   002280  EF1C  F011         	goto	l836
  6271   002284  EF44  F011         	goto	l837
  6272   002288                     l837:
  6273                           
  6274                           ;MCAL/I2C/I2C.c: 79:         (SSPCON1bits.SSPEN = 1);
  6275   002288  8AC6               	bsf	198,5,c	;volatile
  6276   00228A                     l840:
  6277   00228A  0012               	return		;funcret
  6278   00228C                     __end_of_I2C_voidI2CInit:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _I2C_SlaveMode_CFG *****************
  6282 ;; Defined at:
  6283 ;;		line 191 in file "MCAL/I2C/I2C.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  Copy_stI2C      1    0[COMRAM] PTR const struct .
  6286 ;;		 -> i2c_obj(5), 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6298 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;Total ram usage:        2 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; Hardware stack levels required when called: 1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_I2C_voidI2CInit
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text23
  6313   003888                     __ptext23:
  6314                           	callstack 0
  6315   003888                     _I2C_SlaveMode_CFG:
  6316                           	callstack 27
  6317   003888                     
  6318                           ;MCAL/I2C/I2C.c: 191: static void I2C_SlaveMode_CFG(const I2C_t *Copy_stI2C);MCAL/I2C/I2
      +                          C.c: 192: {;MCAL/I2C/I2C.c: 193:     (SSPCON1bits.SSPM = Copy_stI2C->i2c_cfg.i2c_mode_cf
      +                          g);
  6319   003888  5001               	movf	I2C_SlaveMode_CFG@Copy_stI2C^0,w,c
  6320   00388A  6ED9               	movwf	fsr2l,c
  6321   00388C  6ADA               	clrf	fsr2h,c
  6322   00388E  0E02               	movlw	2
  6323   003890  26D9               	addwf	fsr2l,f,c
  6324   003892  50DF               	movf	indf2,w,c
  6325   003894  6E02               	movwf	??_I2C_SlaveMode_CFG^0,c
  6326   003896  50C6               	movf	198,w,c	;volatile
  6327   003898  1802               	xorwf	??_I2C_SlaveMode_CFG^0,w,c
  6328   00389A  0BF0               	andlw	-16
  6329   00389C  1802               	xorwf	??_I2C_SlaveMode_CFG^0,w,c
  6330   00389E  6EC6               	movwf	198,c	;volatile
  6331   0038A0  0012               	return		;funcret
  6332   0038A2                     __end_of_I2C_SlaveMode_CFG:
  6333                           	callstack 0
  6334                           
  6335 ;; *************** function _I2C_MasterMode_CFG *****************
  6336 ;; Defined at:
  6337 ;;		line 174 in file "MCAL/I2C/I2C.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  Copy_stI2C      1   65[COMRAM] PTR const struct .
  6340 ;;		 -> i2c_obj(5), 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6352 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;Total ram usage:        3 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 2
  6359 ;; This function calls:
  6360 ;;		___fladd
  6361 ;;		___fldiv
  6362 ;;		___fltol
  6363 ;;		___xxtofl
  6364 ;; This function is called by:
  6365 ;;		_I2C_voidI2CInit
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text24
  6370   00259E                     __ptext24:
  6371                           	callstack 0
  6372   00259E                     _I2C_MasterMode_CFG:
  6373                           	callstack 26
  6374   00259E                     
  6375                           ;MCAL/I2C/I2C.c: 174: static void I2C_MasterMode_CFG(const I2C_t *Copy_stI2C);MCAL/I2C/I
      +                          2C.c: 175: {;MCAL/I2C/I2C.c: 176:     (SSPCON1bits.SSPM = Copy_stI2C->i2c_cfg.i2c_mode_c
      +                          fg);
  6376   00259E  5042               	movf	I2C_MasterMode_CFG@Copy_stI2C^0,w,c
  6377   0025A0  6ED9               	movwf	fsr2l,c
  6378   0025A2  6ADA               	clrf	fsr2h,c
  6379   0025A4  0E02               	movlw	2
  6380   0025A6  26D9               	addwf	fsr2l,f,c
  6381   0025A8  50DF               	movf	indf2,w,c
  6382   0025AA  6E43               	movwf	??_I2C_MasterMode_CFG^0,c
  6383   0025AC  50C6               	movf	198,w,c	;volatile
  6384   0025AE  1843               	xorwf	??_I2C_MasterMode_CFG^0,w,c
  6385   0025B0  0BF0               	andlw	-16
  6386   0025B2  1843               	xorwf	??_I2C_MasterMode_CFG^0,w,c
  6387   0025B4  6EC6               	movwf	198,c	;volatile
  6388                           
  6389                           ;MCAL/I2C/I2C.c: 178:     switch (Copy_stI2C->i2c_cfg.i2c_mode_cfg)
  6390   0025B6  EF1F  F013         	goto	l5452
  6391   0025BA                     l5448:
  6392                           
  6393                           ;MCAL/I2C/I2C.c: 183:         SSPADD = (u8)(((8000000 / 4.0) / Copy_stI2C->master_clk) -
      +                           1);
  6394   0025BA  0E00               	movlw	0
  6395   0025BC  6E2C               	movwf	___fladd@a^0,c
  6396   0025BE  0E00               	movlw	0
  6397   0025C0  6E2D               	movwf	(___fladd@a+1)^0,c
  6398   0025C2  0E80               	movlw	128
  6399   0025C4  6E2E               	movwf	(___fladd@a+2)^0,c
  6400   0025C6  0EBF               	movlw	191
  6401   0025C8  6E2F               	movwf	(___fladd@a+3)^0,c
  6402   0025CA  5042               	movf	I2C_MasterMode_CFG@Copy_stI2C^0,w,c
  6403   0025CC  6ED9               	movwf	fsr2l,c
  6404   0025CE  6ADA               	clrf	fsr2h,c
  6405   0025D0  CFDE F043          	movff	postinc2,??_I2C_MasterMode_CFG
  6406   0025D4  CFDD F044          	movff	postdec2,??_I2C_MasterMode_CFG+1
  6407   0025D8  C043  F001         	movff	??_I2C_MasterMode_CFG,___xxtofl@val
  6408   0025DC  C044  F002         	movff	??_I2C_MasterMode_CFG+1,___xxtofl@val+1
  6409   0025E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  6410   0025E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  6411   0025E4  0E00               	movlw	0
  6412   0025E6  EC1E  F00E         	call	___xxtofl
  6413   0025EA  C001  F013         	movff	?___xxtofl,___fldiv@a
  6414   0025EE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  6415   0025F2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  6416   0025F6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  6417   0025FA  0E00               	movlw	0
  6418   0025FC  6E0F               	movwf	___fldiv@b^0,c
  6419   0025FE  0E24               	movlw	36
  6420   002600  6E10               	movwf	(___fldiv@b+1)^0,c
  6421   002602  0EF4               	movlw	244
  6422   002604  6E11               	movwf	(___fldiv@b+2)^0,c
  6423   002606  0E49               	movlw	73
  6424   002608  6E12               	movwf	(___fldiv@b+3)^0,c
  6425   00260A  EC51  F00A         	call	___fldiv	;wreg free
  6426   00260E  C00F  F028         	movff	?___fldiv,___fladd@b
  6427   002612  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  6428   002616  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  6429   00261A  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  6430   00261E  ECF1  F007         	call	___fladd	;wreg free
  6431   002622  C028  F038         	movff	?___fladd,___fltol@f1
  6432   002626  C029  F039         	movff	?___fladd+1,___fltol@f1+1
  6433   00262A  C02A  F03A         	movff	?___fladd+2,___fltol@f1+2
  6434   00262E  C02B  F03B         	movff	?___fladd+3,___fltol@f1+3
  6435   002632  ECCF  F011         	call	___fltol	;wreg free
  6436   002636  5038               	movf	?___fltol^0,w,c
  6437   002638  6EC8               	movwf	200,c	;volatile
  6438                           
  6439                           ;MCAL/I2C/I2C.c: 185:         break;
  6440   00263A  EF39  F013         	goto	l892
  6441   00263E                     l5452:
  6442   00263E  5042               	movf	I2C_MasterMode_CFG@Copy_stI2C^0,w,c
  6443   002640  6ED9               	movwf	fsr2l,c
  6444   002642  6ADA               	clrf	fsr2h,c
  6445   002644  0E02               	movlw	2
  6446   002646  26D9               	addwf	fsr2l,f,c
  6447   002648  50DF               	movf	indf2,w,c
  6448   00264A  6E43               	movwf	??_I2C_MasterMode_CFG^0,c
  6449   00264C  6A44               	clrf	(??_I2C_MasterMode_CFG+1)^0,c
  6450                           
  6451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6452                           ; Switch size 1, requested type "simple"
  6453                           ; Number of cases is 1, Range of values is 0 to 0
  6454                           ; switch strategies available:
  6455                           ; Name         Instructions Cycles
  6456                           ; simple_byte            4     3 (average)
  6457                           ;	Chosen strategy is simple_byte
  6458   00264E  5044               	movf	(??_I2C_MasterMode_CFG+1)^0,w,c
  6459   002650  0A00               	xorlw	0	; case 0
  6460   002652  B4D8               	btfsc	status,2,c
  6461   002654  EF2E  F013         	goto	l7216
  6462   002658  EF39  F013         	goto	l892
  6463   00265C                     l7216:
  6464                           
  6465                           ; Switch size 1, requested type "simple"
  6466                           ; Number of cases is 2, Range of values is 8 to 11
  6467                           ; switch strategies available:
  6468                           ; Name         Instructions Cycles
  6469                           ; simple_byte            7     4 (average)
  6470                           ;	Chosen strategy is simple_byte
  6471   00265C  5043               	movf	??_I2C_MasterMode_CFG^0,w,c
  6472   00265E  0A08               	xorlw	8	; case 8
  6473   002660  B4D8               	btfsc	status,2,c
  6474   002662  EFDD  F012         	goto	l5448
  6475   002666  0A03               	xorlw	3	; case 11
  6476   002668  B4D8               	btfsc	status,2,c
  6477   00266A  EF39  F013         	goto	l892
  6478   00266E  EF39  F013         	goto	l892
  6479   002672                     l892:
  6480   002672  0012               	return		;funcret
  6481   002674                     __end_of_I2C_MasterMode_CFG:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function ___xxtofl *****************
  6485 ;; Defined at:
  6486 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  sign            1    wreg     unsigned char 
  6489 ;;  val             4    0[COMRAM] long 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  sign            1    8[COMRAM] unsigned char 
  6492 ;;  arg             4   10[COMRAM] unsigned long 
  6493 ;;  exp             1    9[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  4    0[COMRAM] unsigned char 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:       14 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_I2C_MasterMode_CFG
  6514 ;;		_BaudRateConfig
  6515 ;;		_CCP_voidSetDuty
  6516 ;;		_CCP_PWM_ModeConfig
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text25
  6521   001C3C                     __ptext25:
  6522                           	callstack 0
  6523   001C3C                     ___xxtofl:
  6524                           	callstack 26
  6525                           
  6526                           ;incstack = 0
  6527                           ;___xxtofl@sign stored from wreg
  6528   001C3C  6E09               	movwf	___xxtofl@sign^0,c
  6529   001C3E  5009               	movf	___xxtofl@sign^0,w,c
  6530   001C40  B4D8               	btfsc	status,2,c
  6531   001C42  EF25  F00E         	goto	u4401
  6532   001C46  EF27  F00E         	goto	u4400
  6533   001C4A                     u4401:
  6534   001C4A  EF49  F00E         	goto	l1981
  6535   001C4E                     u4400:
  6536   001C4E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6537   001C50  EF2E  F00E         	goto	u4410
  6538   001C54  EF2C  F00E         	goto	u4411
  6539   001C58                     u4411:
  6540   001C58  EF49  F00E         	goto	l1981
  6541   001C5C                     u4410:
  6542   001C5C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6543   001C60  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6544   001C64  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6545   001C68  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6546   001C6C  1E05               	comf	??___xxtofl^0,f,c
  6547   001C6E  1E06               	comf	(??___xxtofl+1)^0,f,c
  6548   001C70  1E07               	comf	(??___xxtofl+2)^0,f,c
  6549   001C72  1E08               	comf	(??___xxtofl+3)^0,f,c
  6550   001C74  2A05               	incf	??___xxtofl^0,f,c
  6551   001C76  0E00               	movlw	0
  6552   001C78  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6553   001C7A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6554   001C7C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6555   001C7E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6556   001C82  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6557   001C86  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6558   001C8A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6559   001C8E  EF51  F00E         	goto	l5270
  6560   001C92                     l1981:
  6561   001C92  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6562   001C96  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6563   001C9A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6564   001C9E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6565   001CA2                     l5270:
  6566   001CA2  5001               	movf	___xxtofl@val^0,w,c
  6567   001CA4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6568   001CA6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6569   001CA8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6570   001CAA  A4D8               	btfss	status,2,c
  6571   001CAC  EF5A  F00E         	goto	u4421
  6572   001CB0  EF5C  F00E         	goto	u4420
  6573   001CB4                     u4421:
  6574   001CB4  EF66  F00E         	goto	l5276
  6575   001CB8                     u4420:
  6576   001CB8  0E00               	movlw	0
  6577   001CBA  6E01               	movwf	?___xxtofl^0,c
  6578   001CBC  0E00               	movlw	0
  6579   001CBE  6E02               	movwf	(?___xxtofl+1)^0,c
  6580   001CC0  0E00               	movlw	0
  6581   001CC2  6E03               	movwf	(?___xxtofl+2)^0,c
  6582   001CC4  0E00               	movlw	0
  6583   001CC6  6E04               	movwf	(?___xxtofl+3)^0,c
  6584   001CC8  EFF7  F00E         	goto	l1984
  6585   001CCC                     l5276:
  6586   001CCC  0E96               	movlw	150
  6587   001CCE  6E0A               	movwf	___xxtofl@exp^0,c
  6588   001CD0  EF70  F00E         	goto	l5280
  6589   001CD4                     l5278:
  6590   001CD4  2A0A               	incf	___xxtofl@exp^0,f,c
  6591   001CD6  90D8               	bcf	status,0,c
  6592   001CD8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6593   001CDA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6594   001CDC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6595   001CDE  320B               	rrcf	___xxtofl@arg^0,f,c
  6596   001CE0                     l5280:
  6597   001CE0  0E00               	movlw	0
  6598   001CE2  140B               	andwf	___xxtofl@arg^0,w,c
  6599   001CE4  6E05               	movwf	??___xxtofl^0,c
  6600   001CE6  0E00               	movlw	0
  6601   001CE8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6602   001CEA  6E06               	movwf	(??___xxtofl+1)^0,c
  6603   001CEC  0E00               	movlw	0
  6604   001CEE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6605   001CF0  6E07               	movwf	(??___xxtofl+2)^0,c
  6606   001CF2  0EFE               	movlw	254
  6607   001CF4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6608   001CF6  6E08               	movwf	(??___xxtofl+3)^0,c
  6609   001CF8  5005               	movf	??___xxtofl^0,w,c
  6610   001CFA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6611   001CFC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6612   001CFE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6613   001D00  A4D8               	btfss	status,2,c
  6614   001D02  EF85  F00E         	goto	u4431
  6615   001D06  EF87  F00E         	goto	u4430
  6616   001D0A                     u4431:
  6617   001D0A  EF6A  F00E         	goto	l5278
  6618   001D0E                     u4430:
  6619   001D0E  EF95  F00E         	goto	l1988
  6620   001D12                     l5282:
  6621   001D12  2A0A               	incf	___xxtofl@exp^0,f,c
  6622   001D14  0E01               	movlw	1
  6623   001D16  260B               	addwf	___xxtofl@arg^0,f,c
  6624   001D18  0E00               	movlw	0
  6625   001D1A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6626   001D1C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6627   001D1E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6628   001D20  90D8               	bcf	status,0,c
  6629   001D22  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6630   001D24  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6631   001D26  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6632   001D28  320B               	rrcf	___xxtofl@arg^0,f,c
  6633   001D2A                     l1988:
  6634   001D2A  0E00               	movlw	0
  6635   001D2C  140B               	andwf	___xxtofl@arg^0,w,c
  6636   001D2E  6E05               	movwf	??___xxtofl^0,c
  6637   001D30  0E00               	movlw	0
  6638   001D32  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6639   001D34  6E06               	movwf	(??___xxtofl+1)^0,c
  6640   001D36  0E00               	movlw	0
  6641   001D38  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6642   001D3A  6E07               	movwf	(??___xxtofl+2)^0,c
  6643   001D3C  0EFF               	movlw	255
  6644   001D3E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6645   001D40  6E08               	movwf	(??___xxtofl+3)^0,c
  6646   001D42  5005               	movf	??___xxtofl^0,w,c
  6647   001D44  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6648   001D46  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6649   001D48  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6650   001D4A  A4D8               	btfss	status,2,c
  6651   001D4C  EFAA  F00E         	goto	u4441
  6652   001D50  EFAC  F00E         	goto	u4440
  6653   001D54                     u4441:
  6654   001D54  EF89  F00E         	goto	l5282
  6655   001D58                     u4440:
  6656   001D58  EFB4  F00E         	goto	l5290
  6657   001D5C                     l5288:
  6658   001D5C  060A               	decf	___xxtofl@exp^0,f,c
  6659   001D5E  90D8               	bcf	status,0,c
  6660   001D60  360B               	rlcf	___xxtofl@arg^0,f,c
  6661   001D62  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6662   001D64  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6663   001D66  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6664   001D68                     l5290:
  6665   001D68  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6666   001D6A  EFB9  F00E         	goto	u4451
  6667   001D6E  EFBB  F00E         	goto	u4450
  6668   001D72                     u4451:
  6669   001D72  EFC3  F00E         	goto	l1995
  6670   001D76                     u4450:
  6671   001D76  0E02               	movlw	2
  6672   001D78  600A               	cpfslt	___xxtofl@exp^0,c
  6673   001D7A  EFC1  F00E         	goto	u4461
  6674   001D7E  EFC3  F00E         	goto	u4460
  6675   001D82                     u4461:
  6676   001D82  EFAE  F00E         	goto	l5288
  6677   001D86                     u4460:
  6678   001D86                     l1995:
  6679   001D86  B00A               	btfsc	___xxtofl@exp^0,0,c
  6680   001D88  EFC8  F00E         	goto	u4471
  6681   001D8C  EFCA  F00E         	goto	u4470
  6682   001D90                     u4471:
  6683   001D90  EFCB  F00E         	goto	l5296
  6684   001D94                     u4470:
  6685   001D94  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6686   001D96                     l5296:
  6687   001D96  90D8               	bcf	status,0,c
  6688   001D98  320A               	rrcf	___xxtofl@exp^0,f,c
  6689   001D9A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6690   001D9E  6A06               	clrf	(??___xxtofl+1)^0,c
  6691   001DA0  6A07               	clrf	(??___xxtofl+2)^0,c
  6692   001DA2  6A08               	clrf	(??___xxtofl+3)^0,c
  6693   001DA4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6694   001DA8  6A07               	clrf	(??___xxtofl+2)^0,c
  6695   001DAA  6A06               	clrf	(??___xxtofl+1)^0,c
  6696   001DAC  6A05               	clrf	??___xxtofl^0,c
  6697   001DAE  5005               	movf	??___xxtofl^0,w,c
  6698   001DB0  120B               	iorwf	___xxtofl@arg^0,f,c
  6699   001DB2  5006               	movf	(??___xxtofl+1)^0,w,c
  6700   001DB4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6701   001DB6  5007               	movf	(??___xxtofl+2)^0,w,c
  6702   001DB8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6703   001DBA  5008               	movf	(??___xxtofl+3)^0,w,c
  6704   001DBC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6705   001DBE  5009               	movf	___xxtofl@sign^0,w,c
  6706   001DC0  B4D8               	btfsc	status,2,c
  6707   001DC2  EFE5  F00E         	goto	u4481
  6708   001DC6  EFE7  F00E         	goto	u4480
  6709   001DCA                     u4481:
  6710   001DCA  EFEF  F00E         	goto	l5306
  6711   001DCE                     u4480:
  6712   001DCE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6713   001DD0  EFEE  F00E         	goto	u4490
  6714   001DD4  EFEC  F00E         	goto	u4491
  6715   001DD8                     u4491:
  6716   001DD8  EFEF  F00E         	goto	l5306
  6717   001DDC                     u4490:
  6718   001DDC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6719   001DDE                     l5306:
  6720   001DDE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6721   001DE2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6722   001DE6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6723   001DEA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6724   001DEE                     l1984:
  6725   001DEE  0012               	return		;funcret
  6726   001DF0                     __end_of___xxtofl:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function ___fltol *****************
  6730 ;; Defined at:
  6731 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  f1              4   55[COMRAM] unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  exp1            1   64[COMRAM] unsigned char 
  6736 ;;  sign1           1   63[COMRAM] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  4   55[COMRAM] long 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;Total ram usage:       10 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 1
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_I2C_MasterMode_CFG
  6757 ;;		_BaudRateConfig
  6758 ;;		_CCP_voidSetDuty
  6759 ;;		_CCP_PWM_ModeConfig
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text26
  6764   00239E                     __ptext26:
  6765                           	callstack 0
  6766   00239E                     ___fltol:
  6767                           	callstack 26
  6768   00239E  343A               	rlcf	(___fltol@f1+2)^0,w,c
  6769   0023A0  343B               	rlcf	(___fltol@f1+3)^0,w,c
  6770   0023A2  6E41               	movwf	___fltol@exp1^0,c
  6771   0023A4  5041               	movf	___fltol@exp1^0,w,c
  6772   0023A6  A4D8               	btfss	status,2,c
  6773   0023A8  EFD8  F011         	goto	u4331
  6774   0023AC  EFDA  F011         	goto	u4330
  6775   0023B0                     u4331:
  6776   0023B0  EFE4  F011         	goto	l5226
  6777   0023B4                     u4330:
  6778   0023B4                     l5222:
  6779   0023B4  0E00               	movlw	0
  6780   0023B6  6E38               	movwf	?___fltol^0,c
  6781   0023B8  0E00               	movlw	0
  6782   0023BA  6E39               	movwf	(?___fltol+1)^0,c
  6783   0023BC  0E00               	movlw	0
  6784   0023BE  6E3A               	movwf	(?___fltol+2)^0,c
  6785   0023C0  0E00               	movlw	0
  6786   0023C2  6E3B               	movwf	(?___fltol+3)^0,c
  6787   0023C4  EF51  F012         	goto	l1623
  6788   0023C8                     l5226:
  6789   0023C8  C038  F03C         	movff	___fltol@f1,??___fltol
  6790   0023CC  C039  F03D         	movff	___fltol@f1+1,??___fltol+1
  6791   0023D0  C03A  F03E         	movff	___fltol@f1+2,??___fltol+2
  6792   0023D4  C03B  F03F         	movff	___fltol@f1+3,??___fltol+3
  6793   0023D8  0E20               	movlw	32
  6794   0023DA  EFF4  F011         	goto	u4340
  6795   0023DE                     u4345:
  6796   0023DE  90D8               	bcf	status,0,c
  6797   0023E0  323F               	rrcf	(??___fltol+3)^0,f,c
  6798   0023E2  323E               	rrcf	(??___fltol+2)^0,f,c
  6799   0023E4  323D               	rrcf	(??___fltol+1)^0,f,c
  6800   0023E6  323C               	rrcf	??___fltol^0,f,c
  6801   0023E8                     u4340:
  6802   0023E8  2EE8               	decfsz	wreg,f,c
  6803   0023EA  EFEF  F011         	goto	u4345
  6804   0023EE  503C               	movf	??___fltol^0,w,c
  6805   0023F0  6E40               	movwf	___fltol@sign1^0,c
  6806   0023F2  8E3A               	bsf	(___fltol@f1+2)^0,7,c
  6807   0023F4  0EFF               	movlw	255
  6808   0023F6  1638               	andwf	___fltol@f1^0,f,c
  6809   0023F8  0EFF               	movlw	255
  6810   0023FA  1639               	andwf	(___fltol@f1+1)^0,f,c
  6811   0023FC  0EFF               	movlw	255
  6812   0023FE  163A               	andwf	(___fltol@f1+2)^0,f,c
  6813   002400  0E00               	movlw	0
  6814   002402  163B               	andwf	(___fltol@f1+3)^0,f,c
  6815   002404  0E96               	movlw	150
  6816   002406  5E41               	subwf	___fltol@exp1^0,f,c
  6817   002408  BE41               	btfsc	___fltol@exp1^0,7,c
  6818   00240A  EF0B  F012         	goto	u4350
  6819   00240E  EF09  F012         	goto	u4351
  6820   002412                     u4351:
  6821   002412  EF21  F012         	goto	l5246
  6822   002416                     u4350:
  6823   002416  5041               	movf	___fltol@exp1^0,w,c
  6824   002418  0A80               	xorlw	128
  6825   00241A  0F97               	addlw	151
  6826   00241C  B0D8               	btfsc	status,0,c
  6827   00241E  EF13  F012         	goto	u4361
  6828   002422  EF15  F012         	goto	u4360
  6829   002426                     u4361:
  6830   002426  EF17  F012         	goto	l5242
  6831   00242A                     u4360:
  6832   00242A  EFDA  F011         	goto	l5222
  6833   00242E                     l5242:
  6834   00242E  90D8               	bcf	status,0,c
  6835   002430  323B               	rrcf	(___fltol@f1+3)^0,f,c
  6836   002432  323A               	rrcf	(___fltol@f1+2)^0,f,c
  6837   002434  3239               	rrcf	(___fltol@f1+1)^0,f,c
  6838   002436  3238               	rrcf	___fltol@f1^0,f,c
  6839   002438  3E41               	incfsz	___fltol@exp1^0,f,c
  6840   00243A  EF17  F012         	goto	l5242
  6841   00243E  EF39  F012         	goto	l5256
  6842   002442                     l5246:
  6843   002442  0E1F               	movlw	31
  6844   002444  6441               	cpfsgt	___fltol@exp1^0,c
  6845   002446  EF27  F012         	goto	u4371
  6846   00244A  EF29  F012         	goto	u4370
  6847   00244E                     u4371:
  6848   00244E  EF31  F012         	goto	l5254
  6849   002452                     u4370:
  6850   002452  EFDA  F011         	goto	l5222
  6851   002456                     l5252:
  6852   002456  90D8               	bcf	status,0,c
  6853   002458  3638               	rlcf	___fltol@f1^0,f,c
  6854   00245A  3639               	rlcf	(___fltol@f1+1)^0,f,c
  6855   00245C  363A               	rlcf	(___fltol@f1+2)^0,f,c
  6856   00245E  363B               	rlcf	(___fltol@f1+3)^0,f,c
  6857   002460  0641               	decf	___fltol@exp1^0,f,c
  6858   002462                     l5254:
  6859   002462  5041               	movf	___fltol@exp1^0,w,c
  6860   002464  A4D8               	btfss	status,2,c
  6861   002466  EF37  F012         	goto	u4381
  6862   00246A  EF39  F012         	goto	u4380
  6863   00246E                     u4381:
  6864   00246E  EF2B  F012         	goto	l5252
  6865   002472                     u4380:
  6866   002472                     l5256:
  6867   002472  5040               	movf	___fltol@sign1^0,w,c
  6868   002474  B4D8               	btfsc	status,2,c
  6869   002476  EF3F  F012         	goto	u4391
  6870   00247A  EF41  F012         	goto	u4390
  6871   00247E                     u4391:
  6872   00247E  EF49  F012         	goto	l5260
  6873   002482                     u4390:
  6874   002482  1E3B               	comf	(___fltol@f1+3)^0,f,c
  6875   002484  1E3A               	comf	(___fltol@f1+2)^0,f,c
  6876   002486  1E39               	comf	(___fltol@f1+1)^0,f,c
  6877   002488  6C38               	negf	___fltol@f1^0,c
  6878   00248A  0E00               	movlw	0
  6879   00248C  2239               	addwfc	(___fltol@f1+1)^0,f,c
  6880   00248E  223A               	addwfc	(___fltol@f1+2)^0,f,c
  6881   002490  223B               	addwfc	(___fltol@f1+3)^0,f,c
  6882   002492                     l5260:
  6883   002492  C038  F038         	movff	___fltol@f1,?___fltol
  6884   002496  C039  F039         	movff	___fltol@f1+1,?___fltol+1
  6885   00249A  C03A  F03A         	movff	___fltol@f1+2,?___fltol+2
  6886   00249E  C03B  F03B         	movff	___fltol@f1+3,?___fltol+3
  6887   0024A2                     l1623:
  6888   0024A2  0012               	return		;funcret
  6889   0024A4                     __end_of___fltol:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___fldiv *****************
  6893 ;; Defined at:
  6894 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  b               4   14[COMRAM] long 
  6897 ;;  a               4   18[COMRAM] long 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  grs             4   33[COMRAM] unsigned long 
  6900 ;;  rem             4   26[COMRAM] unsigned long 
  6901 ;;  new_exp         2   31[COMRAM] short 
  6902 ;;  aexp            1   38[COMRAM] unsigned char 
  6903 ;;  bexp            1   37[COMRAM] unsigned char 
  6904 ;;  sign            1   30[COMRAM] unsigned char 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  4   14[COMRAM] unsigned char 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6914 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;Total ram usage:       25 bytes
  6919 ;; Hardware stack levels used: 1
  6920 ;; Hardware stack levels required when called: 1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_I2C_MasterMode_CFG
  6925 ;;		_BaudRateConfig
  6926 ;;		_CCP_voidSetDuty
  6927 ;;		_CCP_PWM_ModeConfig
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text27
  6932   0014A2                     __ptext27:
  6933                           	callstack 0
  6934   0014A2                     ___fldiv:
  6935                           	callstack 26
  6936   0014A2  5012               	movf	(___fldiv@b+3)^0,w,c
  6937   0014A4  0B80               	andlw	128
  6938   0014A6  6E1F               	movwf	___fldiv@sign^0,c
  6939   0014A8  5012               	movf	(___fldiv@b+3)^0,w,c
  6940   0014AA  2412               	addwf	(___fldiv@b+3)^0,w,c
  6941   0014AC  6E26               	movwf	___fldiv@bexp^0,c
  6942   0014AE  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6943   0014B0  EF5C  F00A         	goto	u4101
  6944   0014B4  EF5E  F00A         	goto	u4100
  6945   0014B8                     u4101:
  6946   0014B8  EF5F  F00A         	goto	l5088
  6947   0014BC                     u4100:
  6948   0014BC  8026               	bsf	___fldiv@bexp^0,0,c
  6949   0014BE                     l5088:
  6950   0014BE  5026               	movf	___fldiv@bexp^0,w,c
  6951   0014C0  B4D8               	btfsc	status,2,c
  6952   0014C2  EF65  F00A         	goto	u4111
  6953   0014C6  EF67  F00A         	goto	u4110
  6954   0014CA                     u4111:
  6955   0014CA  EF7C  F00A         	goto	l5098
  6956   0014CE                     u4110:
  6957   0014CE  2826               	incf	___fldiv@bexp^0,w,c
  6958   0014D0  A4D8               	btfss	status,2,c
  6959   0014D2  EF6D  F00A         	goto	u4121
  6960   0014D6  EF6F  F00A         	goto	u4120
  6961   0014DA                     u4121:
  6962   0014DA  EF77  F00A         	goto	l5094
  6963   0014DE                     u4120:
  6964   0014DE  0E00               	movlw	0
  6965   0014E0  6E0F               	movwf	___fldiv@b^0,c
  6966   0014E2  0E00               	movlw	0
  6967   0014E4  6E10               	movwf	(___fldiv@b+1)^0,c
  6968   0014E6  0E00               	movlw	0
  6969   0014E8  6E11               	movwf	(___fldiv@b+2)^0,c
  6970   0014EA  0E00               	movlw	0
  6971   0014EC  6E12               	movwf	(___fldiv@b+3)^0,c
  6972   0014EE                     l5094:
  6973   0014EE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6974   0014F0  0E00               	movlw	0
  6975   0014F2  6E12               	movwf	(___fldiv@b+3)^0,c
  6976   0014F4  EF84  F00A         	goto	l5100
  6977   0014F8                     l5098:
  6978   0014F8  0E00               	movlw	0
  6979   0014FA  6E0F               	movwf	___fldiv@b^0,c
  6980   0014FC  0E00               	movlw	0
  6981   0014FE  6E10               	movwf	(___fldiv@b+1)^0,c
  6982   001500  0E00               	movlw	0
  6983   001502  6E11               	movwf	(___fldiv@b+2)^0,c
  6984   001504  0E00               	movlw	0
  6985   001506  6E12               	movwf	(___fldiv@b+3)^0,c
  6986   001508                     l5100:
  6987   001508  5016               	movf	(___fldiv@a+3)^0,w,c
  6988   00150A  0B80               	andlw	128
  6989   00150C  1A1F               	xorwf	___fldiv@sign^0,f,c
  6990   00150E  5016               	movf	(___fldiv@a+3)^0,w,c
  6991   001510  2416               	addwf	(___fldiv@a+3)^0,w,c
  6992   001512  6E27               	movwf	___fldiv@aexp^0,c
  6993   001514  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6994   001516  EF8F  F00A         	goto	u4131
  6995   00151A  EF91  F00A         	goto	u4130
  6996   00151E                     u4131:
  6997   00151E  EF92  F00A         	goto	l5108
  6998   001522                     u4130:
  6999   001522  8027               	bsf	___fldiv@aexp^0,0,c
  7000   001524                     l5108:
  7001   001524  5027               	movf	___fldiv@aexp^0,w,c
  7002   001526  B4D8               	btfsc	status,2,c
  7003   001528  EF98  F00A         	goto	u4141
  7004   00152C  EF9A  F00A         	goto	u4140
  7005   001530                     u4141:
  7006   001530  EFAF  F00A         	goto	l5118
  7007   001534                     u4140:
  7008   001534  2827               	incf	___fldiv@aexp^0,w,c
  7009   001536  A4D8               	btfss	status,2,c
  7010   001538  EFA0  F00A         	goto	u4151
  7011   00153C  EFA2  F00A         	goto	u4150
  7012   001540                     u4151:
  7013   001540  EFAA  F00A         	goto	l5114
  7014   001544                     u4150:
  7015   001544  0E00               	movlw	0
  7016   001546  6E13               	movwf	___fldiv@a^0,c
  7017   001548  0E00               	movlw	0
  7018   00154A  6E14               	movwf	(___fldiv@a+1)^0,c
  7019   00154C  0E00               	movlw	0
  7020   00154E  6E15               	movwf	(___fldiv@a+2)^0,c
  7021   001550  0E00               	movlw	0
  7022   001552  6E16               	movwf	(___fldiv@a+3)^0,c
  7023   001554                     l5114:
  7024   001554  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7025   001556  0E00               	movlw	0
  7026   001558  6E16               	movwf	(___fldiv@a+3)^0,c
  7027   00155A  EFB7  F00A         	goto	l5120
  7028   00155E                     l5118:
  7029   00155E  0E00               	movlw	0
  7030   001560  6E13               	movwf	___fldiv@a^0,c
  7031   001562  0E00               	movlw	0
  7032   001564  6E14               	movwf	(___fldiv@a+1)^0,c
  7033   001566  0E00               	movlw	0
  7034   001568  6E15               	movwf	(___fldiv@a+2)^0,c
  7035   00156A  0E00               	movlw	0
  7036   00156C  6E16               	movwf	(___fldiv@a+3)^0,c
  7037   00156E                     l5120:
  7038   00156E  5013               	movf	___fldiv@a^0,w,c
  7039   001570  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7040   001572  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7041   001574  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7042   001576  A4D8               	btfss	status,2,c
  7043   001578  EFC0  F00A         	goto	u4161
  7044   00157C  EFC2  F00A         	goto	u4160
  7045   001580                     u4161:
  7046   001580  EFDA  F00A         	goto	l5132
  7047   001584                     u4160:
  7048   001584  0E00               	movlw	0
  7049   001586  6E0F               	movwf	___fldiv@b^0,c
  7050   001588  0E00               	movlw	0
  7051   00158A  6E10               	movwf	(___fldiv@b+1)^0,c
  7052   00158C  0E00               	movlw	0
  7053   00158E  6E11               	movwf	(___fldiv@b+2)^0,c
  7054   001590  0E00               	movlw	0
  7055   001592  6E12               	movwf	(___fldiv@b+3)^0,c
  7056   001594  0E80               	movlw	128
  7057   001596  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7058   001598  0E7F               	movlw	127
  7059   00159A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7060   00159C                     l5126:
  7061   00159C  501F               	movf	___fldiv@sign^0,w,c
  7062   00159E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7063   0015A0  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7064   0015A4  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7065   0015A8  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7066   0015AC  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7067   0015B0  EF1D  F00C         	goto	l1908
  7068   0015B4                     l5132:
  7069   0015B4  5026               	movf	___fldiv@bexp^0,w,c
  7070   0015B6  A4D8               	btfss	status,2,c
  7071   0015B8  EFE0  F00A         	goto	u4171
  7072   0015BC  EFE2  F00A         	goto	u4170
  7073   0015C0                     u4171:
  7074   0015C0  EFEC  F00A         	goto	l5140
  7075   0015C4                     u4170:
  7076   0015C4  0E00               	movlw	0
  7077   0015C6  6E0F               	movwf	?___fldiv^0,c
  7078   0015C8  0E00               	movlw	0
  7079   0015CA  6E10               	movwf	(?___fldiv+1)^0,c
  7080   0015CC  0E00               	movlw	0
  7081   0015CE  6E11               	movwf	(?___fldiv+2)^0,c
  7082   0015D0  0E00               	movlw	0
  7083   0015D2  6E12               	movwf	(?___fldiv+3)^0,c
  7084   0015D4  EF1D  F00C         	goto	l1908
  7085   0015D8                     l5140:
  7086   0015D8  5027               	movf	___fldiv@aexp^0,w,c
  7087   0015DA  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7088   0015DE  6A18               	clrf	(??___fldiv+1)^0,c
  7089   0015E0  5E17               	subwf	??___fldiv^0,f,c
  7090   0015E2  0E00               	movlw	0
  7091   0015E4  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7092   0015E6  0E7F               	movlw	127
  7093   0015E8  2417               	addwf	??___fldiv^0,w,c
  7094   0015EA  6E20               	movwf	___fldiv@new_exp^0,c
  7095   0015EC  0E00               	movlw	0
  7096   0015EE  2018               	addwfc	(??___fldiv+1)^0,w,c
  7097   0015F0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7098   0015F2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7099   0015F6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7100   0015FA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7101   0015FE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7102   001602  0E00               	movlw	0
  7103   001604  6E0F               	movwf	___fldiv@b^0,c
  7104   001606  0E00               	movlw	0
  7105   001608  6E10               	movwf	(___fldiv@b+1)^0,c
  7106   00160A  0E00               	movlw	0
  7107   00160C  6E11               	movwf	(___fldiv@b+2)^0,c
  7108   00160E  0E00               	movlw	0
  7109   001610  6E12               	movwf	(___fldiv@b+3)^0,c
  7110   001612  0E00               	movlw	0
  7111   001614  6E22               	movwf	___fldiv@grs^0,c
  7112   001616  0E00               	movlw	0
  7113   001618  6E23               	movwf	(___fldiv@grs+1)^0,c
  7114   00161A  0E00               	movlw	0
  7115   00161C  6E24               	movwf	(___fldiv@grs+2)^0,c
  7116   00161E  0E00               	movlw	0
  7117   001620  6E25               	movwf	(___fldiv@grs+3)^0,c
  7118   001622  0E00               	movlw	0
  7119   001624  6E27               	movwf	___fldiv@aexp^0,c
  7120   001626  EF4D  F00B         	goto	l1910
  7121   00162A                     l5150:
  7122   00162A  5027               	movf	___fldiv@aexp^0,w,c
  7123   00162C  B4D8               	btfsc	status,2,c
  7124   00162E  EF1B  F00B         	goto	u4181
  7125   001632  EF1D  F00B         	goto	u4180
  7126   001636                     u4181:
  7127   001636  EF34  F00B         	goto	l5158
  7128   00163A                     u4180:
  7129   00163A  90D8               	bcf	status,0,c
  7130   00163C  361B               	rlcf	___fldiv@rem^0,f,c
  7131   00163E  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7132   001640  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7133   001642  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7134   001644  90D8               	bcf	status,0,c
  7135   001646  360F               	rlcf	___fldiv@b^0,f,c
  7136   001648  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7137   00164A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7138   00164C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7139   00164E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7140   001650  EF2C  F00B         	goto	u4191
  7141   001654  EF2E  F00B         	goto	u4190
  7142   001658                     u4191:
  7143   001658  EF2F  F00B         	goto	l1913
  7144   00165C                     u4190:
  7145   00165C  800F               	bsf	___fldiv@b^0,0,c
  7146   00165E                     l1913:
  7147   00165E  90D8               	bcf	status,0,c
  7148   001660  3622               	rlcf	___fldiv@grs^0,f,c
  7149   001662  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7150   001664  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7151   001666  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7152   001668                     l5158:
  7153   001668  5013               	movf	___fldiv@a^0,w,c
  7154   00166A  5C1B               	subwf	___fldiv@rem^0,w,c
  7155   00166C  5014               	movf	(___fldiv@a+1)^0,w,c
  7156   00166E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7157   001670  5015               	movf	(___fldiv@a+2)^0,w,c
  7158   001672  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7159   001674  5016               	movf	(___fldiv@a+3)^0,w,c
  7160   001676  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7161   001678  A0D8               	btfss	status,0,c
  7162   00167A  EF41  F00B         	goto	u4201
  7163   00167E  EF43  F00B         	goto	u4200
  7164   001682                     u4201:
  7165   001682  EF4C  F00B         	goto	l5164
  7166   001686                     u4200:
  7167   001686  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7168   001688  5013               	movf	___fldiv@a^0,w,c
  7169   00168A  5E1B               	subwf	___fldiv@rem^0,f,c
  7170   00168C  5014               	movf	(___fldiv@a+1)^0,w,c
  7171   00168E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7172   001690  5015               	movf	(___fldiv@a+2)^0,w,c
  7173   001692  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7174   001694  5016               	movf	(___fldiv@a+3)^0,w,c
  7175   001696  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7176   001698                     l5164:
  7177   001698  2A27               	incf	___fldiv@aexp^0,f,c
  7178   00169A                     l1910:
  7179   00169A  0E19               	movlw	25
  7180   00169C  6427               	cpfsgt	___fldiv@aexp^0,c
  7181   00169E  EF53  F00B         	goto	u4211
  7182   0016A2  EF55  F00B         	goto	u4210
  7183   0016A6                     u4211:
  7184   0016A6  EF15  F00B         	goto	l5150
  7185   0016AA                     u4210:
  7186   0016AA  501B               	movf	___fldiv@rem^0,w,c
  7187   0016AC  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7188   0016AE  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7189   0016B0  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7190   0016B2  B4D8               	btfsc	status,2,c
  7191   0016B4  EF5E  F00B         	goto	u4221
  7192   0016B8  EF60  F00B         	goto	u4220
  7193   0016BC                     u4221:
  7194   0016BC  EF78  F00B         	goto	l5176
  7195   0016C0                     u4220:
  7196   0016C0  8022               	bsf	___fldiv@grs^0,0,c
  7197   0016C2  EF78  F00B         	goto	l5176
  7198   0016C6                     l5170:
  7199   0016C6  90D8               	bcf	status,0,c
  7200   0016C8  360F               	rlcf	___fldiv@b^0,f,c
  7201   0016CA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7202   0016CC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7203   0016CE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7204   0016D0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7205   0016D2  EF6D  F00B         	goto	u4231
  7206   0016D6  EF6F  F00B         	goto	u4230
  7207   0016DA                     u4231:
  7208   0016DA  EF70  F00B         	goto	l1919
  7209   0016DE                     u4230:
  7210   0016DE  800F               	bsf	___fldiv@b^0,0,c
  7211   0016E0                     l1919:
  7212   0016E0  90D8               	bcf	status,0,c
  7213   0016E2  3622               	rlcf	___fldiv@grs^0,f,c
  7214   0016E4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7215   0016E6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7216   0016E8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7217   0016EA  0620               	decf	___fldiv@new_exp^0,f,c
  7218   0016EC  A0D8               	btfss	status,0,c
  7219   0016EE  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7220   0016F0                     l5176:
  7221   0016F0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7222   0016F2  EF7D  F00B         	goto	u4241
  7223   0016F6  EF7F  F00B         	goto	u4240
  7224   0016FA                     u4241:
  7225   0016FA  EF63  F00B         	goto	l5170
  7226   0016FE                     u4240:
  7227   0016FE  0E00               	movlw	0
  7228   001700  6E27               	movwf	___fldiv@aexp^0,c
  7229   001702  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7230   001704  EF86  F00B         	goto	u4251
  7231   001708  EF88  F00B         	goto	u4250
  7232   00170C                     u4251:
  7233   00170C  EFAC  F00B         	goto	l1921
  7234   001710                     u4250:
  7235   001710  0EFF               	movlw	255
  7236   001712  1422               	andwf	___fldiv@grs^0,w,c
  7237   001714  6E17               	movwf	??___fldiv^0,c
  7238   001716  0EFF               	movlw	255
  7239   001718  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7240   00171A  6E18               	movwf	(??___fldiv+1)^0,c
  7241   00171C  0EFF               	movlw	255
  7242   00171E  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7243   001720  6E19               	movwf	(??___fldiv+2)^0,c
  7244   001722  0E7F               	movlw	127
  7245   001724  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7246   001726  6E1A               	movwf	(??___fldiv+3)^0,c
  7247   001728  5017               	movf	??___fldiv^0,w,c
  7248   00172A  1018               	iorwf	(??___fldiv+1)^0,w,c
  7249   00172C  1019               	iorwf	(??___fldiv+2)^0,w,c
  7250   00172E  101A               	iorwf	(??___fldiv+3)^0,w,c
  7251   001730  B4D8               	btfsc	status,2,c
  7252   001732  EF9D  F00B         	goto	u4261
  7253   001736  EF9F  F00B         	goto	u4260
  7254   00173A                     u4261:
  7255   00173A  EFA3  F00B         	goto	l1922
  7256   00173E                     u4260:
  7257   00173E                     l5184:
  7258   00173E  0E01               	movlw	1
  7259   001740  6E27               	movwf	___fldiv@aexp^0,c
  7260   001742  EFAC  F00B         	goto	l1921
  7261   001746                     l1922:
  7262   001746  A00F               	btfss	___fldiv@b^0,0,c
  7263   001748  EFA8  F00B         	goto	u4271
  7264   00174C  EFAA  F00B         	goto	u4270
  7265   001750                     u4271:
  7266   001750  EFAC  F00B         	goto	l1921
  7267   001754                     u4270:
  7268   001754  EF9F  F00B         	goto	l5184
  7269   001758                     l1921:
  7270   001758  5027               	movf	___fldiv@aexp^0,w,c
  7271   00175A  B4D8               	btfsc	status,2,c
  7272   00175C  EFB2  F00B         	goto	u4281
  7273   001760  EFB4  F00B         	goto	u4280
  7274   001764                     u4281:
  7275   001764  EFD8  F00B         	goto	l5196
  7276   001768                     u4280:
  7277   001768  0E01               	movlw	1
  7278   00176A  260F               	addwf	___fldiv@b^0,f,c
  7279   00176C  0E00               	movlw	0
  7280   00176E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7281   001770  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7282   001772  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7283   001774  A012               	btfss	(___fldiv@b+3)^0,0,c
  7284   001776  EFBF  F00B         	goto	u4291
  7285   00177A  EFC1  F00B         	goto	u4290
  7286   00177E                     u4291:
  7287   00177E  EFD8  F00B         	goto	l5196
  7288   001782                     u4290:
  7289   001782  C00F  F017         	movff	___fldiv@b,??___fldiv
  7290   001786  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7291   00178A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7292   00178E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7293   001792  341A               	rlcf	(??___fldiv+3)^0,w,c
  7294   001794  321A               	rrcf	(??___fldiv+3)^0,f,c
  7295   001796  3219               	rrcf	(??___fldiv+2)^0,f,c
  7296   001798  3218               	rrcf	(??___fldiv+1)^0,f,c
  7297   00179A  3217               	rrcf	??___fldiv^0,f,c
  7298   00179C  C017  F00F         	movff	??___fldiv,___fldiv@b
  7299   0017A0  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7300   0017A4  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7301   0017A8  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7302   0017AC  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7303   0017AE  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7304   0017B0                     l5196:
  7305   0017B0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7306   0017B2  EFE3  F00B         	goto	u4301
  7307   0017B6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7308   0017B8  E108               	bnz	u4300
  7309   0017BA  2820               	incf	___fldiv@new_exp^0,w,c
  7310   0017BC  A0D8               	btfss	status,0,c
  7311   0017BE  EFE3  F00B         	goto	u4301
  7312   0017C2  EFE5  F00B         	goto	u4300
  7313   0017C6                     u4301:
  7314   0017C6  EFF0  F00B         	goto	l5200
  7315   0017CA                     u4300:
  7316   0017CA  0E00               	movlw	0
  7317   0017CC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7318   0017CE  6820               	setf	___fldiv@new_exp^0,c
  7319   0017D0  0E00               	movlw	0
  7320   0017D2  6E0F               	movwf	___fldiv@b^0,c
  7321   0017D4  0E00               	movlw	0
  7322   0017D6  6E10               	movwf	(___fldiv@b+1)^0,c
  7323   0017D8  0E00               	movlw	0
  7324   0017DA  6E11               	movwf	(___fldiv@b+2)^0,c
  7325   0017DC  0E00               	movlw	0
  7326   0017DE  6E12               	movwf	(___fldiv@b+3)^0,c
  7327   0017E0                     l5200:
  7328   0017E0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7329   0017E2  EFFD  F00B         	goto	u4310
  7330   0017E6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7331   0017E8  E106               	bnz	u4311
  7332   0017EA  0420               	decf	___fldiv@new_exp^0,w,c
  7333   0017EC  B0D8               	btfsc	status,0,c
  7334   0017EE  EFFB  F00B         	goto	u4311
  7335   0017F2  EFFD  F00B         	goto	u4310
  7336   0017F6                     u4311:
  7337   0017F6  EF0B  F00C         	goto	l5204
  7338   0017FA                     u4310:
  7339   0017FA  0E00               	movlw	0
  7340   0017FC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7341   0017FE  0E00               	movlw	0
  7342   001800  6E20               	movwf	___fldiv@new_exp^0,c
  7343   001802  0E00               	movlw	0
  7344   001804  6E0F               	movwf	___fldiv@b^0,c
  7345   001806  0E00               	movlw	0
  7346   001808  6E10               	movwf	(___fldiv@b+1)^0,c
  7347   00180A  0E00               	movlw	0
  7348   00180C  6E11               	movwf	(___fldiv@b+2)^0,c
  7349   00180E  0E00               	movlw	0
  7350   001810  6E12               	movwf	(___fldiv@b+3)^0,c
  7351   001812  0E00               	movlw	0
  7352   001814  6E1F               	movwf	___fldiv@sign^0,c
  7353   001816                     l5204:
  7354   001816  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7355   00181A  A026               	btfss	___fldiv@bexp^0,0,c
  7356   00181C  EF12  F00C         	goto	u4321
  7357   001820  EF14  F00C         	goto	u4320
  7358   001824                     u4321:
  7359   001824  EF17  F00C         	goto	l5210
  7360   001828                     u4320:
  7361   001828  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7362   00182A  EF18  F00C         	goto	l5212
  7363   00182E                     l5210:
  7364   00182E  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7365   001830                     l5212:
  7366   001830  90D8               	bcf	status,0,c
  7367   001832  3026               	rrcf	___fldiv@bexp^0,w,c
  7368   001834  6E12               	movwf	(___fldiv@b+3)^0,c
  7369   001836  EFCE  F00A         	goto	l5126
  7370   00183A                     l1908:
  7371   00183A  0012               	return		;funcret
  7372   00183C                     __end_of___fldiv:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function ___fladd *****************
  7376 ;; Defined at:
  7377 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;  b               4   39[COMRAM] unsigned char 
  7380 ;;  a               4   43[COMRAM] unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  grs             1   54[COMRAM] unsigned char 
  7383 ;;  bexp            1   53[COMRAM] unsigned char 
  7384 ;;  aexp            1   52[COMRAM] unsigned char 
  7385 ;;  signs           1   51[COMRAM] unsigned char 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  4   39[COMRAM] unsigned char 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;Total ram usage:       16 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 1
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_I2C_MasterMode_CFG
  7406 ;;		_BaudRateConfig
  7407 ;;		_CCP_PWM_ModeConfig
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text28
  7412   000FE2                     __ptext28:
  7413                           	callstack 0
  7414   000FE2                     ___fladd:
  7415                           	callstack 26
  7416   000FE2  502B               	movf	(___fladd@b+3)^0,w,c
  7417   000FE4  0B80               	andlw	128
  7418   000FE6  6E34               	movwf	___fladd@signs^0,c
  7419   000FE8  502B               	movf	(___fladd@b+3)^0,w,c
  7420   000FEA  242B               	addwf	(___fladd@b+3)^0,w,c
  7421   000FEC  6E36               	movwf	___fladd@bexp^0,c
  7422   000FEE  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7423   000FF0  EFFC  F007         	goto	u3711
  7424   000FF4  EFFE  F007         	goto	u3710
  7425   000FF8                     u3711:
  7426   000FF8  EFFF  F007         	goto	l4886
  7427   000FFC                     u3710:
  7428   000FFC  8036               	bsf	___fladd@bexp^0,0,c
  7429   000FFE                     l4886:
  7430   000FFE  5036               	movf	___fladd@bexp^0,w,c
  7431   001000  B4D8               	btfsc	status,2,c
  7432   001002  EF05  F008         	goto	u3721
  7433   001006  EF07  F008         	goto	u3720
  7434   00100A                     u3721:
  7435   00100A  EF1C  F008         	goto	l4896
  7436   00100E                     u3720:
  7437   00100E  2836               	incf	___fladd@bexp^0,w,c
  7438   001010  A4D8               	btfss	status,2,c
  7439   001012  EF0D  F008         	goto	u3731
  7440   001016  EF0F  F008         	goto	u3730
  7441   00101A                     u3731:
  7442   00101A  EF17  F008         	goto	l4892
  7443   00101E                     u3730:
  7444   00101E  0E00               	movlw	0
  7445   001020  6E28               	movwf	___fladd@b^0,c
  7446   001022  0E00               	movlw	0
  7447   001024  6E29               	movwf	(___fladd@b+1)^0,c
  7448   001026  0E00               	movlw	0
  7449   001028  6E2A               	movwf	(___fladd@b+2)^0,c
  7450   00102A  0E00               	movlw	0
  7451   00102C  6E2B               	movwf	(___fladd@b+3)^0,c
  7452   00102E                     l4892:
  7453   00102E  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7454   001030  0E00               	movlw	0
  7455   001032  6E2B               	movwf	(___fladd@b+3)^0,c
  7456   001034  EF24  F008         	goto	l4898
  7457   001038                     l4896:
  7458   001038  0E00               	movlw	0
  7459   00103A  6E28               	movwf	___fladd@b^0,c
  7460   00103C  0E00               	movlw	0
  7461   00103E  6E29               	movwf	(___fladd@b+1)^0,c
  7462   001040  0E00               	movlw	0
  7463   001042  6E2A               	movwf	(___fladd@b+2)^0,c
  7464   001044  0E00               	movlw	0
  7465   001046  6E2B               	movwf	(___fladd@b+3)^0,c
  7466   001048                     l4898:
  7467   001048  502F               	movf	(___fladd@a+3)^0,w,c
  7468   00104A  0B80               	andlw	128
  7469   00104C  6E35               	movwf	___fladd@aexp^0,c
  7470   00104E  5034               	movf	___fladd@signs^0,w,c
  7471   001050  1835               	xorwf	___fladd@aexp^0,w,c
  7472   001052  B4D8               	btfsc	status,2,c
  7473   001054  EF2E  F008         	goto	u3741
  7474   001058  EF30  F008         	goto	u3740
  7475   00105C                     u3741:
  7476   00105C  EF31  F008         	goto	l4904
  7477   001060                     u3740:
  7478   001060  8C34               	bsf	___fladd@signs^0,6,c
  7479   001062                     l4904:
  7480   001062  502F               	movf	(___fladd@a+3)^0,w,c
  7481   001064  242F               	addwf	(___fladd@a+3)^0,w,c
  7482   001066  6E35               	movwf	___fladd@aexp^0,c
  7483   001068  AE2E               	btfss	(___fladd@a+2)^0,7,c
  7484   00106A  EF39  F008         	goto	u3751
  7485   00106E  EF3B  F008         	goto	u3750
  7486   001072                     u3751:
  7487   001072  EF3C  F008         	goto	l4910
  7488   001076                     u3750:
  7489   001076  8035               	bsf	___fladd@aexp^0,0,c
  7490   001078                     l4910:
  7491   001078  5035               	movf	___fladd@aexp^0,w,c
  7492   00107A  B4D8               	btfsc	status,2,c
  7493   00107C  EF42  F008         	goto	u3761
  7494   001080  EF44  F008         	goto	u3760
  7495   001084                     u3761:
  7496   001084  EF59  F008         	goto	l4920
  7497   001088                     u3760:
  7498   001088  2835               	incf	___fladd@aexp^0,w,c
  7499   00108A  A4D8               	btfss	status,2,c
  7500   00108C  EF4A  F008         	goto	u3771
  7501   001090  EF4C  F008         	goto	u3770
  7502   001094                     u3771:
  7503   001094  EF54  F008         	goto	l4916
  7504   001098                     u3770:
  7505   001098  0E00               	movlw	0
  7506   00109A  6E2C               	movwf	___fladd@a^0,c
  7507   00109C  0E00               	movlw	0
  7508   00109E  6E2D               	movwf	(___fladd@a+1)^0,c
  7509   0010A0  0E00               	movlw	0
  7510   0010A2  6E2E               	movwf	(___fladd@a+2)^0,c
  7511   0010A4  0E00               	movlw	0
  7512   0010A6  6E2F               	movwf	(___fladd@a+3)^0,c
  7513   0010A8                     l4916:
  7514   0010A8  8E2E               	bsf	(___fladd@a+2)^0,7,c
  7515   0010AA  0E00               	movlw	0
  7516   0010AC  6E2F               	movwf	(___fladd@a+3)^0,c
  7517   0010AE  EF61  F008         	goto	l4922
  7518   0010B2                     l4920:
  7519   0010B2  0E00               	movlw	0
  7520   0010B4  6E2C               	movwf	___fladd@a^0,c
  7521   0010B6  0E00               	movlw	0
  7522   0010B8  6E2D               	movwf	(___fladd@a+1)^0,c
  7523   0010BA  0E00               	movlw	0
  7524   0010BC  6E2E               	movwf	(___fladd@a+2)^0,c
  7525   0010BE  0E00               	movlw	0
  7526   0010C0  6E2F               	movwf	(___fladd@a+3)^0,c
  7527   0010C2                     l4922:
  7528   0010C2  5036               	movf	___fladd@bexp^0,w,c
  7529   0010C4  5C35               	subwf	___fladd@aexp^0,w,c
  7530   0010C6  B0D8               	btfsc	status,0,c
  7531   0010C8  EF68  F008         	goto	u3781
  7532   0010CC  EF6A  F008         	goto	u3780
  7533   0010D0                     u3781:
  7534   0010D0  EF91  F008         	goto	l4958
  7535   0010D4                     u3780:
  7536   0010D4  AC34               	btfss	___fladd@signs^0,6,c
  7537   0010D6  EF6F  F008         	goto	u3791
  7538   0010DA  EF71  F008         	goto	u3790
  7539   0010DE                     u3791:
  7540   0010DE  EF73  F008         	goto	l4928
  7541   0010E2                     u3790:
  7542   0010E2  0E80               	movlw	128
  7543   0010E4  1A34               	xorwf	___fladd@signs^0,f,c
  7544   0010E6                     l4928:
  7545   0010E6  C036  F037         	movff	___fladd@bexp,___fladd@grs
  7546   0010EA  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7547   0010EE  C037  F035         	movff	___fladd@grs,___fladd@aexp
  7548   0010F2  C028  F037         	movff	___fladd@b,___fladd@grs
  7549   0010F6  C02C  F028         	movff	___fladd@a,___fladd@b
  7550   0010FA  C037  F02C         	movff	___fladd@grs,___fladd@a
  7551   0010FE  C029  F037         	movff	___fladd@b+1,___fladd@grs
  7552   001102  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  7553   001106  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  7554   00110A  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  7555   00110E  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  7556   001112  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  7557   001116  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  7558   00111A  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  7559   00111E  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  7560   001122                     l4958:
  7561   001122  0E00               	movlw	0
  7562   001124  6E37               	movwf	___fladd@grs^0,c
  7563   001126  5036               	movf	___fladd@bexp^0,w,c
  7564   001128  C035  F030         	movff	___fladd@aexp,??___fladd
  7565   00112C  6A31               	clrf	(??___fladd+1)^0,c
  7566   00112E  5E30               	subwf	??___fladd^0,f,c
  7567   001130  0E00               	movlw	0
  7568   001132  5A31               	subwfb	(??___fladd+1)^0,f,c
  7569   001134  BE31               	btfsc	(??___fladd+1)^0,7,c
  7570   001136  EFA6  F008         	goto	u3801
  7571   00113A  5031               	movf	(??___fladd+1)^0,w,c
  7572   00113C  E109               	bnz	u3800
  7573   00113E  0E1A               	movlw	26
  7574   001140  5C30               	subwf	??___fladd^0,w,c
  7575   001142  A0D8               	btfss	status,0,c
  7576   001144  EFA6  F008         	goto	u3801
  7577   001148  EFA8  F008         	goto	u3800
  7578   00114C                     u3801:
  7579   00114C  EFDF  F008         	goto	l1855
  7580   001150                     u3800:
  7581   001150  5028               	movf	___fladd@b^0,w,c
  7582   001152  1029               	iorwf	(___fladd@b+1)^0,w,c
  7583   001154  102A               	iorwf	(___fladd@b+2)^0,w,c
  7584   001156  102B               	iorwf	(___fladd@b+3)^0,w,c
  7585   001158  A4D8               	btfss	status,2,c
  7586   00115A  EFB1  F008         	goto	u3811
  7587   00115E  EFB4  F008         	goto	u3810
  7588   001162                     u3811:
  7589   001162  0E01               	movlw	1
  7590   001164  EFB5  F008         	goto	u3820
  7591   001168                     u3810:
  7592   001168  0E00               	movlw	0
  7593   00116A                     u3820:
  7594   00116A  6E37               	movwf	___fladd@grs^0,c
  7595   00116C  0E00               	movlw	0
  7596   00116E  6E28               	movwf	___fladd@b^0,c
  7597   001170  0E00               	movlw	0
  7598   001172  6E29               	movwf	(___fladd@b+1)^0,c
  7599   001174  0E00               	movlw	0
  7600   001176  6E2A               	movwf	(___fladd@b+2)^0,c
  7601   001178  0E00               	movlw	0
  7602   00117A  6E2B               	movwf	(___fladd@b+3)^0,c
  7603   00117C  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7604   001180  EFE8  F008         	goto	l1854
  7605   001184                     l1856:
  7606   001184  A037               	btfss	___fladd@grs^0,0,c
  7607   001186  EFC7  F008         	goto	u3831
  7608   00118A  EFC9  F008         	goto	u3830
  7609   00118E                     u3831:
  7610   00118E  EFCF  F008         	goto	l4970
  7611   001192                     u3830:
  7612   001192  90D8               	bcf	status,0,c
  7613   001194  3037               	rrcf	___fladd@grs^0,w,c
  7614   001196  0901               	iorlw	1
  7615   001198  6E37               	movwf	___fladd@grs^0,c
  7616   00119A  EFD1  F008         	goto	l4972
  7617   00119E                     l4970:
  7618   00119E  90D8               	bcf	status,0,c
  7619   0011A0  3237               	rrcf	___fladd@grs^0,f,c
  7620   0011A2                     l4972:
  7621   0011A2  A028               	btfss	___fladd@b^0,0,c
  7622   0011A4  EFD6  F008         	goto	u3841
  7623   0011A8  EFD8  F008         	goto	u3840
  7624   0011AC                     u3841:
  7625   0011AC  EFD9  F008         	goto	l4976
  7626   0011B0                     u3840:
  7627   0011B0  8E37               	bsf	___fladd@grs^0,7,c
  7628   0011B2                     l4976:
  7629   0011B2  342B               	rlcf	(___fladd@b+3)^0,w,c
  7630   0011B4  322B               	rrcf	(___fladd@b+3)^0,f,c
  7631   0011B6  322A               	rrcf	(___fladd@b+2)^0,f,c
  7632   0011B8  3229               	rrcf	(___fladd@b+1)^0,f,c
  7633   0011BA  3228               	rrcf	___fladd@b^0,f,c
  7634   0011BC  2A36               	incf	___fladd@bexp^0,f,c
  7635   0011BE                     l1855:
  7636   0011BE  5035               	movf	___fladd@aexp^0,w,c
  7637   0011C0  5C36               	subwf	___fladd@bexp^0,w,c
  7638   0011C2  A0D8               	btfss	status,0,c
  7639   0011C4  EFE6  F008         	goto	u3851
  7640   0011C8  EFE8  F008         	goto	u3850
  7641   0011CC                     u3851:
  7642   0011CC  EFC2  F008         	goto	l1856
  7643   0011D0                     u3850:
  7644   0011D0                     l1854:
  7645   0011D0  BC34               	btfsc	___fladd@signs^0,6,c
  7646   0011D2  EFED  F008         	goto	u3861
  7647   0011D6  EFEF  F008         	goto	u3860
  7648   0011DA                     u3861:
  7649   0011DA  EF2F  F009         	goto	l5004
  7650   0011DE                     u3860:
  7651   0011DE  5036               	movf	___fladd@bexp^0,w,c
  7652   0011E0  A4D8               	btfss	status,2,c
  7653   0011E2  EFF5  F008         	goto	u3871
  7654   0011E6  EFF7  F008         	goto	u3870
  7655   0011EA                     u3871:
  7656   0011EA  EF01  F009         	goto	l4986
  7657   0011EE                     u3870:
  7658   0011EE  0E00               	movlw	0
  7659   0011F0  6E28               	movwf	?___fladd^0,c
  7660   0011F2  0E00               	movlw	0
  7661   0011F4  6E29               	movwf	(?___fladd+1)^0,c
  7662   0011F6  0E00               	movlw	0
  7663   0011F8  6E2A               	movwf	(?___fladd+2)^0,c
  7664   0011FA  0E00               	movlw	0
  7665   0011FC  6E2B               	movwf	(?___fladd+3)^0,c
  7666   0011FE  EF50  F00A         	goto	l1863
  7667   001202                     l4986:
  7668   001202  502C               	movf	___fladd@a^0,w,c
  7669   001204  2628               	addwf	___fladd@b^0,f,c
  7670   001206  502D               	movf	(___fladd@a+1)^0,w,c
  7671   001208  2229               	addwfc	(___fladd@b+1)^0,f,c
  7672   00120A  502E               	movf	(___fladd@a+2)^0,w,c
  7673   00120C  222A               	addwfc	(___fladd@b+2)^0,f,c
  7674   00120E  502F               	movf	(___fladd@a+3)^0,w,c
  7675   001210  222B               	addwfc	(___fladd@b+3)^0,f,c
  7676   001212  A02B               	btfss	(___fladd@b+3)^0,0,c
  7677   001214  EF0E  F009         	goto	u3881
  7678   001218  EF10  F009         	goto	u3880
  7679   00121C                     u3881:
  7680   00121C  EFBC  F009         	goto	l5040
  7681   001220                     u3880:
  7682   001220  A037               	btfss	___fladd@grs^0,0,c
  7683   001222  EF15  F009         	goto	u3891
  7684   001226  EF17  F009         	goto	u3890
  7685   00122A                     u3891:
  7686   00122A  EF1D  F009         	goto	l4994
  7687   00122E                     u3890:
  7688   00122E  90D8               	bcf	status,0,c
  7689   001230  3037               	rrcf	___fladd@grs^0,w,c
  7690   001232  0901               	iorlw	1
  7691   001234  6E37               	movwf	___fladd@grs^0,c
  7692   001236  EF1F  F009         	goto	l4996
  7693   00123A                     l4994:
  7694   00123A  90D8               	bcf	status,0,c
  7695   00123C  3237               	rrcf	___fladd@grs^0,f,c
  7696   00123E                     l4996:
  7697   00123E  A028               	btfss	___fladd@b^0,0,c
  7698   001240  EF24  F009         	goto	u3901
  7699   001244  EF26  F009         	goto	u3900
  7700   001248                     u3901:
  7701   001248  EF27  F009         	goto	l5000
  7702   00124C                     u3900:
  7703   00124C  8E37               	bsf	___fladd@grs^0,7,c
  7704   00124E                     l5000:
  7705   00124E  342B               	rlcf	(___fladd@b+3)^0,w,c
  7706   001250  322B               	rrcf	(___fladd@b+3)^0,f,c
  7707   001252  322A               	rrcf	(___fladd@b+2)^0,f,c
  7708   001254  3229               	rrcf	(___fladd@b+1)^0,f,c
  7709   001256  3228               	rrcf	___fladd@b^0,f,c
  7710   001258  2A36               	incf	___fladd@bexp^0,f,c
  7711   00125A  EFBC  F009         	goto	l5040
  7712   00125E                     l5004:
  7713   00125E  502C               	movf	___fladd@a^0,w,c
  7714   001260  5C28               	subwf	___fladd@b^0,w,c
  7715   001262  502D               	movf	(___fladd@a+1)^0,w,c
  7716   001264  5829               	subwfb	(___fladd@b+1)^0,w,c
  7717   001266  502E               	movf	(___fladd@a+2)^0,w,c
  7718   001268  582A               	subwfb	(___fladd@b+2)^0,w,c
  7719   00126A  502B               	movf	(___fladd@b+3)^0,w,c
  7720   00126C  0A80               	xorlw	128
  7721   00126E  6E30               	movwf	??___fladd^0,c
  7722   001270  502F               	movf	(___fladd@a+3)^0,w,c
  7723   001272  0A80               	xorlw	128
  7724   001274  5830               	subwfb	??___fladd^0,w,c
  7725   001276  B0D8               	btfsc	status,0,c
  7726   001278  EF40  F009         	goto	u3911
  7727   00127C  EF42  F009         	goto	u3910
  7728   001280                     u3911:
  7729   001280  EF6D  F009         	goto	l5014
  7730   001284                     u3910:
  7731   001284  5028               	movf	___fladd@b^0,w,c
  7732   001286  5C2C               	subwf	___fladd@a^0,w,c
  7733   001288  6E30               	movwf	??___fladd^0,c
  7734   00128A  5029               	movf	(___fladd@b+1)^0,w,c
  7735   00128C  582D               	subwfb	(___fladd@a+1)^0,w,c
  7736   00128E  6E31               	movwf	(??___fladd+1)^0,c
  7737   001290  502A               	movf	(___fladd@b+2)^0,w,c
  7738   001292  582E               	subwfb	(___fladd@a+2)^0,w,c
  7739   001294  6E32               	movwf	(??___fladd+2)^0,c
  7740   001296  502B               	movf	(___fladd@b+3)^0,w,c
  7741   001298  582F               	subwfb	(___fladd@a+3)^0,w,c
  7742   00129A  6E33               	movwf	(??___fladd+3)^0,c
  7743   00129C  0EFF               	movlw	255
  7744   00129E  2430               	addwf	??___fladd^0,w,c
  7745   0012A0  6E28               	movwf	___fladd@b^0,c
  7746   0012A2  0EFF               	movlw	255
  7747   0012A4  2031               	addwfc	(??___fladd+1)^0,w,c
  7748   0012A6  6E29               	movwf	(___fladd@b+1)^0,c
  7749   0012A8  0EFF               	movlw	255
  7750   0012AA  2032               	addwfc	(??___fladd+2)^0,w,c
  7751   0012AC  6E2A               	movwf	(___fladd@b+2)^0,c
  7752   0012AE  0EFF               	movlw	255
  7753   0012B0  2033               	addwfc	(??___fladd+3)^0,w,c
  7754   0012B2  6E2B               	movwf	(___fladd@b+3)^0,c
  7755   0012B4  0E80               	movlw	128
  7756   0012B6  1A34               	xorwf	___fladd@signs^0,f,c
  7757   0012B8  6C37               	negf	___fladd@grs^0,c
  7758   0012BA  5037               	movf	___fladd@grs^0,w,c
  7759   0012BC  A4D8               	btfss	status,2,c
  7760   0012BE  EF63  F009         	goto	u3921
  7761   0012C2  EF65  F009         	goto	u3920
  7762   0012C6                     u3921:
  7763   0012C6  EF75  F009         	goto	l1871
  7764   0012CA                     u3920:
  7765   0012CA  0E01               	movlw	1
  7766   0012CC  2628               	addwf	___fladd@b^0,f,c
  7767   0012CE  0E00               	movlw	0
  7768   0012D0  2229               	addwfc	(___fladd@b+1)^0,f,c
  7769   0012D2  222A               	addwfc	(___fladd@b+2)^0,f,c
  7770   0012D4  222B               	addwfc	(___fladd@b+3)^0,f,c
  7771   0012D6  EF75  F009         	goto	l1871
  7772   0012DA                     l5014:
  7773   0012DA  502C               	movf	___fladd@a^0,w,c
  7774   0012DC  5E28               	subwf	___fladd@b^0,f,c
  7775   0012DE  502D               	movf	(___fladd@a+1)^0,w,c
  7776   0012E0  5A29               	subwfb	(___fladd@b+1)^0,f,c
  7777   0012E2  502E               	movf	(___fladd@a+2)^0,w,c
  7778   0012E4  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  7779   0012E6  502F               	movf	(___fladd@a+3)^0,w,c
  7780   0012E8  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  7781   0012EA                     l1871:
  7782   0012EA  5028               	movf	___fladd@b^0,w,c
  7783   0012EC  1029               	iorwf	(___fladd@b+1)^0,w,c
  7784   0012EE  102A               	iorwf	(___fladd@b+2)^0,w,c
  7785   0012F0  102B               	iorwf	(___fladd@b+3)^0,w,c
  7786   0012F2  A4D8               	btfss	status,2,c
  7787   0012F4  EF7E  F009         	goto	u3931
  7788   0012F8  EF80  F009         	goto	u3930
  7789   0012FC                     u3931:
  7790   0012FC  EFB5  F009         	goto	l5038
  7791   001300                     u3930:
  7792   001300  5037               	movf	___fladd@grs^0,w,c
  7793   001302  A4D8               	btfss	status,2,c
  7794   001304  EF86  F009         	goto	u3941
  7795   001308  EF88  F009         	goto	u3940
  7796   00130C                     u3941:
  7797   00130C  EFB5  F009         	goto	l5038
  7798   001310                     u3940:
  7799   001310  0E00               	movlw	0
  7800   001312  6E28               	movwf	?___fladd^0,c
  7801   001314  0E00               	movlw	0
  7802   001316  6E29               	movwf	(?___fladd+1)^0,c
  7803   001318  0E00               	movlw	0
  7804   00131A  6E2A               	movwf	(?___fladd+2)^0,c
  7805   00131C  0E00               	movlw	0
  7806   00131E  6E2B               	movwf	(?___fladd+3)^0,c
  7807   001320  EF50  F00A         	goto	l1863
  7808   001324                     l5022:
  7809   001324  90D8               	bcf	status,0,c
  7810   001326  3628               	rlcf	___fladd@b^0,f,c
  7811   001328  3629               	rlcf	(___fladd@b+1)^0,f,c
  7812   00132A  362A               	rlcf	(___fladd@b+2)^0,f,c
  7813   00132C  362B               	rlcf	(___fladd@b+3)^0,f,c
  7814   00132E  AE37               	btfss	___fladd@grs^0,7,c
  7815   001330  EF9C  F009         	goto	u3951
  7816   001334  EF9E  F009         	goto	u3950
  7817   001338                     u3951:
  7818   001338  EF9F  F009         	goto	l5028
  7819   00133C                     u3950:
  7820   00133C  8028               	bsf	___fladd@b^0,0,c
  7821   00133E                     l5028:
  7822   00133E  A037               	btfss	___fladd@grs^0,0,c
  7823   001340  EFA4  F009         	goto	u3961
  7824   001344  EFA6  F009         	goto	u3960
  7825   001348                     u3961:
  7826   001348  EFAA  F009         	goto	l5032
  7827   00134C                     u3960:
  7828   00134C  80D8               	bsf	status,0,c
  7829   00134E  3637               	rlcf	___fladd@grs^0,f,c
  7830   001350  EFAC  F009         	goto	l5034
  7831   001354                     l5032:
  7832   001354  90D8               	bcf	status,0,c
  7833   001356  3637               	rlcf	___fladd@grs^0,f,c
  7834   001358                     l5034:
  7835   001358  5036               	movf	___fladd@bexp^0,w,c
  7836   00135A  B4D8               	btfsc	status,2,c
  7837   00135C  EFB2  F009         	goto	u3971
  7838   001360  EFB4  F009         	goto	u3970
  7839   001364                     u3971:
  7840   001364  EFB5  F009         	goto	l5038
  7841   001368                     u3970:
  7842   001368  0636               	decf	___fladd@bexp^0,f,c
  7843   00136A                     l5038:
  7844   00136A  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7845   00136C  EFBA  F009         	goto	u3981
  7846   001370  EFBC  F009         	goto	u3980
  7847   001374                     u3981:
  7848   001374  EF92  F009         	goto	l5022
  7849   001378                     u3980:
  7850   001378                     l5040:
  7851   001378  0E00               	movlw	0
  7852   00137A  6E35               	movwf	___fladd@aexp^0,c
  7853   00137C  AE37               	btfss	___fladd@grs^0,7,c
  7854   00137E  EFC3  F009         	goto	u3991
  7855   001382  EFC5  F009         	goto	u3990
  7856   001386                     u3991:
  7857   001386  EFDD  F009         	goto	l1880
  7858   00138A                     u3990:
  7859   00138A  C037  F030         	movff	___fladd@grs,??___fladd
  7860   00138E  0E7F               	movlw	127
  7861   001390  1630               	andwf	??___fladd^0,f,c
  7862   001392  B4D8               	btfsc	status,2,c
  7863   001394  EFCE  F009         	goto	u4001
  7864   001398  EFD0  F009         	goto	u4000
  7865   00139C                     u4001:
  7866   00139C  EFD4  F009         	goto	l1881
  7867   0013A0                     u4000:
  7868   0013A0                     l5046:
  7869   0013A0  0E01               	movlw	1
  7870   0013A2  6E35               	movwf	___fladd@aexp^0,c
  7871   0013A4  EFDD  F009         	goto	l1880
  7872   0013A8                     l1881:
  7873   0013A8  A028               	btfss	___fladd@b^0,0,c
  7874   0013AA  EFD9  F009         	goto	u4011
  7875   0013AE  EFDB  F009         	goto	u4010
  7876   0013B2                     u4011:
  7877   0013B2  EFDD  F009         	goto	l1880
  7878   0013B6                     u4010:
  7879   0013B6  EFD0  F009         	goto	l5046
  7880   0013BA                     l1880:
  7881   0013BA  5035               	movf	___fladd@aexp^0,w,c
  7882   0013BC  B4D8               	btfsc	status,2,c
  7883   0013BE  EFE3  F009         	goto	u4021
  7884   0013C2  EFE5  F009         	goto	u4020
  7885   0013C6                     u4021:
  7886   0013C6  EF10  F00A         	goto	l5058
  7887   0013CA                     u4020:
  7888   0013CA  0E01               	movlw	1
  7889   0013CC  2628               	addwf	___fladd@b^0,f,c
  7890   0013CE  0E00               	movlw	0
  7891   0013D0  2229               	addwfc	(___fladd@b+1)^0,f,c
  7892   0013D2  222A               	addwfc	(___fladd@b+2)^0,f,c
  7893   0013D4  222B               	addwfc	(___fladd@b+3)^0,f,c
  7894   0013D6  A02B               	btfss	(___fladd@b+3)^0,0,c
  7895   0013D8  EFF0  F009         	goto	u4031
  7896   0013DC  EFF2  F009         	goto	u4030
  7897   0013E0                     u4031:
  7898   0013E0  EF10  F00A         	goto	l5058
  7899   0013E4                     u4030:
  7900   0013E4  C028  F030         	movff	___fladd@b,??___fladd
  7901   0013E8  C029  F031         	movff	___fladd@b+1,??___fladd+1
  7902   0013EC  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  7903   0013F0  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  7904   0013F4  3433               	rlcf	(??___fladd+3)^0,w,c
  7905   0013F6  3233               	rrcf	(??___fladd+3)^0,f,c
  7906   0013F8  3232               	rrcf	(??___fladd+2)^0,f,c
  7907   0013FA  3231               	rrcf	(??___fladd+1)^0,f,c
  7908   0013FC  3230               	rrcf	??___fladd^0,f,c
  7909   0013FE  C030  F028         	movff	??___fladd,___fladd@b
  7910   001402  C031  F029         	movff	??___fladd+1,___fladd@b+1
  7911   001406  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  7912   00140A  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  7913   00140E  2836               	incf	___fladd@bexp^0,w,c
  7914   001410  B4D8               	btfsc	status,2,c
  7915   001412  EF0D  F00A         	goto	u4041
  7916   001416  EF0F  F00A         	goto	u4040
  7917   00141A                     u4041:
  7918   00141A  EF10  F00A         	goto	l5058
  7919   00141E                     u4040:
  7920   00141E  2A36               	incf	___fladd@bexp^0,f,c
  7921   001420                     l5058:
  7922   001420  2836               	incf	___fladd@bexp^0,w,c
  7923   001422  B4D8               	btfsc	status,2,c
  7924   001424  EF16  F00A         	goto	u4051
  7925   001428  EF18  F00A         	goto	u4050
  7926   00142C                     u4051:
  7927   00142C  EF20  F00A         	goto	l5062
  7928   001430                     u4050:
  7929   001430  5036               	movf	___fladd@bexp^0,w,c
  7930   001432  A4D8               	btfss	status,2,c
  7931   001434  EF1E  F00A         	goto	u4061
  7932   001438  EF20  F00A         	goto	u4060
  7933   00143C                     u4061:
  7934   00143C  EF32  F00A         	goto	l5066
  7935   001440                     u4060:
  7936   001440                     l5062:
  7937   001440  0E00               	movlw	0
  7938   001442  6E28               	movwf	___fladd@b^0,c
  7939   001444  0E00               	movlw	0
  7940   001446  6E29               	movwf	(___fladd@b+1)^0,c
  7941   001448  0E00               	movlw	0
  7942   00144A  6E2A               	movwf	(___fladd@b+2)^0,c
  7943   00144C  0E00               	movlw	0
  7944   00144E  6E2B               	movwf	(___fladd@b+3)^0,c
  7945   001450  5036               	movf	___fladd@bexp^0,w,c
  7946   001452  A4D8               	btfss	status,2,c
  7947   001454  EF2E  F00A         	goto	u4071
  7948   001458  EF30  F00A         	goto	u4070
  7949   00145C                     u4071:
  7950   00145C  EF32  F00A         	goto	l5066
  7951   001460                     u4070:
  7952   001460  0E00               	movlw	0
  7953   001462  6E34               	movwf	___fladd@signs^0,c
  7954   001464                     l5066:
  7955   001464  A036               	btfss	___fladd@bexp^0,0,c
  7956   001466  EF37  F00A         	goto	u4081
  7957   00146A  EF39  F00A         	goto	u4080
  7958   00146E                     u4081:
  7959   00146E  EF3C  F00A         	goto	l5070
  7960   001472                     u4080:
  7961   001472  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7962   001474  EF3D  F00A         	goto	l5072
  7963   001478                     l5070:
  7964   001478  9E2A               	bcf	(___fladd@b+2)^0,7,c
  7965   00147A                     l5072:
  7966   00147A  90D8               	bcf	status,0,c
  7967   00147C  3036               	rrcf	___fladd@bexp^0,w,c
  7968   00147E  6E2B               	movwf	(___fladd@b+3)^0,c
  7969   001480  AE34               	btfss	___fladd@signs^0,7,c
  7970   001482  EF45  F00A         	goto	u4091
  7971   001486  EF47  F00A         	goto	u4090
  7972   00148A                     u4091:
  7973   00148A  EF48  F00A         	goto	l5078
  7974   00148E                     u4090:
  7975   00148E  8E2B               	bsf	(___fladd@b+3)^0,7,c
  7976   001490                     l5078:
  7977   001490  C028  F028         	movff	___fladd@b,?___fladd
  7978   001494  C029  F029         	movff	___fladd@b+1,?___fladd+1
  7979   001498  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  7980   00149C  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  7981   0014A0                     l1863:
  7982   0014A0  0012               	return		;funcret
  7983   0014A2                     __end_of___fladd:
  7984                           	callstack 0
  7985                           
  7986 ;; *************** function _ADC_voidADCInit *****************
  7987 ;; Defined at:
  7988 ;;		line 10 in file "MCAL/ADC/ADC.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  Copy_stADC      1   11[COMRAM] PTR struct .
  7991 ;;		 -> ADC(4), 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;		None
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1    wreg      void 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;Total ram usage:        2 bytes
  8008 ;; Hardware stack levels used: 1
  8009 ;; Hardware stack levels required when called: 3
  8010 ;; This function calls:
  8011 ;;		_ADC_ChannelConfig
  8012 ;;		_ADC_ConversionResultConfig
  8013 ;;		_ADC_VoltageRefConfig
  8014 ;; This function is called by:
  8015 ;;		_Application_Init
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text29
  8020   003010                     __ptext29:
  8021                           	callstack 0
  8022   003010                     _ADC_voidADCInit:
  8023                           	callstack 26
  8024   003010                     
  8025                           ;MCAL/ADC/ADC.c: 10: void ADC_voidADCInit(ADC_congig_t *Copy_stADC);MCAL/ADC/ADC.c: 11: 
      +                          {;MCAL/ADC/ADC.c: 13:     (ADCON0bits.ADON = 0);
  8026   003010  90C2               	bcf	194,0,c	;volatile
  8027   003012                     
  8028                           ;MCAL/ADC/ADC.c: 15:     ADCON2bits.ACQT = Copy_stADC->AcquisitionTime;
  8029   003012  500C               	movf	ADC_voidADCInit@Copy_stADC^0,w,c
  8030   003014  6ED9               	movwf	fsr2l,c
  8031   003016  6ADA               	clrf	fsr2h,c
  8032   003018  0E01               	movlw	1
  8033   00301A  26D9               	addwf	fsr2l,f,c
  8034   00301C  50DF               	movf	indf2,w,c
  8035   00301E  6E0D               	movwf	??_ADC_voidADCInit^0,c
  8036   003020  460D               	rlncf	??_ADC_voidADCInit^0,f,c
  8037   003022  460D               	rlncf	??_ADC_voidADCInit^0,f,c
  8038   003024  460D               	rlncf	??_ADC_voidADCInit^0,f,c
  8039   003026  50C0               	movf	192,w,c	;volatile
  8040   003028  180D               	xorwf	??_ADC_voidADCInit^0,w,c
  8041   00302A  0BC7               	andlw	-57
  8042   00302C  180D               	xorwf	??_ADC_voidADCInit^0,w,c
  8043   00302E  6EC0               	movwf	192,c	;volatile
  8044                           
  8045                           ;MCAL/ADC/ADC.c: 17:     ADCON2bits.ADCS = Copy_stADC->clock;
  8046   003030  500C               	movf	ADC_voidADCInit@Copy_stADC^0,w,c
  8047   003032  6ED9               	movwf	fsr2l,c
  8048   003034  6ADA               	clrf	fsr2h,c
  8049   003036  50DF               	movf	indf2,w,c
  8050   003038  6E0D               	movwf	??_ADC_voidADCInit^0,c
  8051   00303A  50C0               	movf	192,w,c	;volatile
  8052   00303C  180D               	xorwf	??_ADC_voidADCInit^0,w,c
  8053   00303E  0BF8               	andlw	-8
  8054   003040  180D               	xorwf	??_ADC_voidADCInit^0,w,c
  8055   003042  6EC0               	movwf	192,c	;volatile
  8056                           
  8057                           ;MCAL/ADC/ADC.c: 19:     ADCON0bits.CHS = Copy_stADC->channel;
  8058   003044  500C               	movf	ADC_voidADCInit@Copy_stADC^0,w,c
  8059   003046  6ED9               	movwf	fsr2l,c
  8060   003048  6ADA               	clrf	fsr2h,c
  8061   00304A  0E02               	movlw	2
  8062   00304C  26D9               	addwf	fsr2l,f,c
  8063   00304E  50DF               	movf	indf2,w,c
  8064   003050  6E0D               	movwf	??_ADC_voidADCInit^0,c
  8065   003052  460D               	rlncf	??_ADC_voidADCInit^0,f,c
  8066   003054  460D               	rlncf	??_ADC_voidADCInit^0,f,c
  8067   003056  50C2               	movf	194,w,c	;volatile
  8068   003058  180D               	xorwf	??_ADC_voidADCInit^0,w,c
  8069   00305A  0BC3               	andlw	-61
  8070   00305C  180D               	xorwf	??_ADC_voidADCInit^0,w,c
  8071   00305E  6EC2               	movwf	194,c	;volatile
  8072   003060                     
  8073                           ;MCAL/ADC/ADC.c: 20:     ADC_ChannelConfig(Copy_stADC->channel);
  8074   003060  500C               	movf	ADC_voidADCInit@Copy_stADC^0,w,c
  8075   003062  6ED9               	movwf	fsr2l,c
  8076   003064  6ADA               	clrf	fsr2h,c
  8077   003066  0E02               	movlw	2
  8078   003068  26D9               	addwf	fsr2l,f,c
  8079   00306A  50DF               	movf	indf2,w,c
  8080   00306C  ECD0  F00F         	call	_ADC_ChannelConfig
  8081   003070                     
  8082                           ;MCAL/ADC/ADC.c: 22:     ADC_ConversionResultConfig(Copy_stADC);
  8083   003070  C00C  F001         	movff	ADC_voidADCInit@Copy_stADC,ADC_ConversionResultConfig@Copy_stADC
  8084   003074  EC06  F01C         	call	_ADC_ConversionResultConfig	;wreg free
  8085   003078                     
  8086                           ;MCAL/ADC/ADC.c: 24:     ADC_VoltageRefConfig(Copy_stADC);
  8087   003078  C00C  F001         	movff	ADC_voidADCInit@Copy_stADC,ADC_VoltageRefConfig@Copy_stADC
  8088   00307C  ECAA  F01B         	call	_ADC_VoltageRefConfig	;wreg free
  8089   003080                     
  8090                           ;MCAL/ADC/ADC.c: 35:     (ADCON0bits.ADON = 1);
  8091   003080  80C2               	bsf	194,0,c	;volatile
  8092   003082  0012               	return		;funcret
  8093   003084                     __end_of_ADC_voidADCInit:
  8094                           	callstack 0
  8095                           
  8096 ;; *************** function _ADC_VoltageRefConfig *****************
  8097 ;; Defined at:
  8098 ;;		line 143 in file "MCAL/ADC/ADC.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;  Copy_stADC      1    0[COMRAM] PTR struct .
  8101 ;;		 -> ADC(4), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      void 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;Total ram usage:        1 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; Hardware stack levels required when called: 1
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_ADC_voidADCInit
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text30
  8128   003754                     __ptext30:
  8129                           	callstack 0
  8130   003754                     _ADC_VoltageRefConfig:
  8131                           	callstack 27
  8132   003754                     
  8133                           ;MCAL/ADC/ADC.c: 143: static void ADC_VoltageRefConfig(ADC_congig_t *Copy_stADC);MCAL/AD
      +                          C/ADC.c: 144: {;MCAL/ADC/ADC.c: 145:     if (0x01 == Copy_stADC->VoltageRef)
  8134   003754  5001               	movf	ADC_VoltageRefConfig@Copy_stADC^0,w,c
  8135   003756  6ED9               	movwf	fsr2l,c
  8136   003758  6ADA               	clrf	fsr2h,c
  8137   00375A  0E03               	movlw	3
  8138   00375C  26D9               	addwf	fsr2l,f,c
  8139   00375E  A0DF               	btfss	indf2,0,c
  8140   003760  EFB4  F01B         	goto	u4601
  8141   003764  EFB6  F01B         	goto	u4600
  8142   003768                     u4601:
  8143   003768  EFBA  F01B         	goto	l557
  8144   00376C                     u4600:
  8145   00376C  8AC1               	bsf	193,5,c	;volatile
  8146   00376E  88C1               	bsf	193,4,c	;volatile
  8147   003770  EFBC  F01B         	goto	l559
  8148   003774                     l557:
  8149   003774  9AC1               	bcf	193,5,c	;volatile
  8150   003776  98C1               	bcf	193,4,c	;volatile
  8151   003778                     l559:
  8152   003778  0012               	return		;funcret
  8153   00377A                     __end_of_ADC_VoltageRefConfig:
  8154                           	callstack 0
  8155                           
  8156 ;; *************** function _ADC_ConversionResultConfig *****************
  8157 ;; Defined at:
  8158 ;;		line 131 in file "MCAL/ADC/ADC.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  Copy_stADC      1    0[COMRAM] PTR struct .
  8161 ;;		 -> ADC(4), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8173 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;Total ram usage:        1 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; Hardware stack levels required when called: 1
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_ADC_voidADCInit
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text31
  8188   00380C                     __ptext31:
  8189                           	callstack 0
  8190   00380C                     _ADC_ConversionResultConfig:
  8191                           	callstack 27
  8192   00380C                     
  8193                           ;MCAL/ADC/ADC.c: 131: static void ADC_ConversionResultConfig(ADC_congig_t *Copy_stADC);M
      +                          CAL/ADC/ADC.c: 132: {;MCAL/ADC/ADC.c: 133:     if (0x01 == Copy_stADC->ResultFormat)
  8194   00380C  5001               	movf	ADC_ConversionResultConfig@Copy_stADC^0,w,c
  8195   00380E  6ED9               	movwf	fsr2l,c
  8196   003810  6ADA               	clrf	fsr2h,c
  8197   003812  0E03               	movlw	3
  8198   003814  26D9               	addwf	fsr2l,f,c
  8199   003816  A2DF               	btfss	indf2,1,c
  8200   003818  EF10  F01C         	goto	u4591
  8201   00381C  EF12  F01C         	goto	u4590
  8202   003820                     u4591:
  8203   003820  EF15  F01C         	goto	l548
  8204   003824                     u4590:
  8205   003824                     
  8206                           ;MCAL/ADC/ADC.c: 134:     {;MCAL/ADC/ADC.c: 135:         (ADCON2bits.ADFM = 1);
  8207   003824  8EC0               	bsf	192,7,c	;volatile
  8208                           
  8209                           ;MCAL/ADC/ADC.c: 136:     }
  8210   003826  EF16  F01C         	goto	l550
  8211   00382A                     l548:
  8212                           
  8213                           ;MCAL/ADC/ADC.c: 138:     {;MCAL/ADC/ADC.c: 139:         (ADCON2bits.ADFM = 0);
  8214   00382A  9EC0               	bcf	192,7,c	;volatile
  8215   00382C                     l550:
  8216   00382C  0012               	return		;funcret
  8217   00382E                     __end_of_ADC_ConversionResultConfig:
  8218                           	callstack 0
  8219                           
  8220 ;; *************** function _App_SetTemperature *****************
  8221 ;; Defined at:
  8222 ;;		line 96 in file "appliction.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  RequiredTemp    1   76[COMRAM] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      unsigned char 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;Total ram usage:        3 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 8
  8243 ;; This function calls:
  8244 ;;		_APP_Get_Number
  8245 ;;		_LCD4Bit_voidSendChar_Pos
  8246 ;;		_LCD4Bit_voidSendCommand
  8247 ;;		_LCD4Bit_voidSendString_Pos
  8248 ;;		_LCD_voidSetCursorPos_4Bit
  8249 ;; This function is called by:
  8250 ;;		_main
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text32
  8255   00228C                     __ptext32:
  8256                           	callstack 0
  8257   00228C                     _App_SetTemperature:
  8258                           	callstack 22
  8259   00228C                     
  8260                           ;appliction.c: 98:     _delay((unsigned long)((200)*(8000000/4000.0)));
  8261   00228C  0E03               	movlw	3
  8262   00228E  6E4C               	movwf	(??_App_SetTemperature+1)^0,c
  8263   002290  0E08               	movlw	8
  8264   002292  6E4B               	movwf	??_App_SetTemperature^0,c
  8265   002294  0E77               	movlw	119
  8266   002296                     u6507:
  8267   002296  2EE8               	decfsz	wreg,f,c
  8268   002298  D7FE               	bra	u6507
  8269   00229A  2E4B               	decfsz	??_App_SetTemperature^0,f,c
  8270   00229C  D7FC               	bra	u6507
  8271   00229E  2E4C               	decfsz	(??_App_SetTemperature+1)^0,f,c
  8272   0022A0  D7FA               	bra	u6507
  8273   0022A2  0000               	nop	
  8274   0022A4                     
  8275                           ;appliction.c: 101:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  8276   0022A4  0E55               	movlw	low _LCD_1
  8277   0022A6  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  8278   0022A8  0E01               	movlw	1
  8279   0022AA  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  8280   0022AC  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  8281   0022B0                     
  8282                           ;appliction.c: 102:     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 1);
  8283   0022B0  0E55               	movlw	low _LCD_1
  8284   0022B2  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  8285   0022B4  0E01               	movlw	1
  8286   0022B6  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  8287   0022B8  0E01               	movlw	1
  8288   0022BA  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  8289   0022BC  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  8290   0022C0                     
  8291                           ;appliction.c: 103:     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 1, "Set Temperature");
  8292   0022C0  0E55               	movlw	low _LCD_1
  8293   0022C2  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  8294   0022C4  0E01               	movlw	1
  8295   0022C6  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  8296   0022C8  0E01               	movlw	1
  8297   0022CA  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  8298   0022CC  0E03               	movlw	low STR_30
  8299   0022CE  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  8300   0022D0  0EFF               	movlw	high STR_30
  8301   0022D2  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  8302   0022D4  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  8303   0022D8                     
  8304                           ;appliction.c: 104:     LCD4Bit_voidSendChar_Pos(&LCD_1, 2, 8, 'C');
  8305   0022D8  0E55               	movlw	low _LCD_1
  8306   0022DA  6E12               	movwf	LCD4Bit_voidSendChar_Pos@Copy_stLCD4Bit^0,c
  8307   0022DC  0E02               	movlw	2
  8308   0022DE  6E13               	movwf	LCD4Bit_voidSendChar_Pos@Copy_u8Row^0,c
  8309   0022E0  0E08               	movlw	8
  8310   0022E2  6E14               	movwf	LCD4Bit_voidSendChar_Pos@Copy_u8Column^0,c
  8311   0022E4  0E43               	movlw	67
  8312   0022E6  6E15               	movwf	LCD4Bit_voidSendChar_Pos@Copy_u8Char^0,c
  8313   0022E8  EC28  F01C         	call	_LCD4Bit_voidSendChar_Pos	;wreg free
  8314   0022EC                     
  8315                           ;appliction.c: 105:     RequiredTemp = APP_Get_Number(2, 1);
  8316   0022EC  0E01               	movlw	1
  8317   0022EE  6E42               	movwf	APP_Get_Number@y^0,c
  8318   0022F0  0E02               	movlw	2
  8319   0022F2  ECFA  F013         	call	_APP_Get_Number
  8320   0022F6  5042               	movf	?_APP_Get_Number^0,w,c
  8321   0022F8  6E4D               	movwf	App_SetTemperature@RequiredTemp^0,c
  8322   0022FA                     
  8323                           ;appliction.c: 106:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  8324   0022FA  0E55               	movlw	low _LCD_1
  8325   0022FC  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  8326   0022FE  0E01               	movlw	1
  8327   002300  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  8328   002302  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  8329   002306                     
  8330                           ;appliction.c: 107:     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 2);
  8331   002306  0E55               	movlw	low _LCD_1
  8332   002308  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  8333   00230A  0E01               	movlw	1
  8334   00230C  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  8335   00230E  0E02               	movlw	2
  8336   002310  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  8337   002312  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  8338   002316                     
  8339                           ;appliction.c: 109:     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 2, "Loading");
  8340   002316  0E55               	movlw	low _LCD_1
  8341   002318  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  8342   00231A  0E01               	movlw	1
  8343   00231C  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  8344   00231E  0E02               	movlw	2
  8345   002320  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  8346   002322  0EBA               	movlw	low STR_31
  8347   002324  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  8348   002326  0EFF               	movlw	high STR_31
  8349   002328  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  8350   00232A  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  8351   00232E                     
  8352                           ;appliction.c: 110:     _delay((unsigned long)((500)*(8000000/4000.0)));
  8353   00232E  0E06               	movlw	6
  8354   002330  6E4C               	movwf	(??_App_SetTemperature+1)^0,c
  8355   002332  0E13               	movlw	19
  8356   002334  6E4B               	movwf	??_App_SetTemperature^0,c
  8357   002336  0EAE               	movlw	174
  8358   002338                     u6517:
  8359   002338  2EE8               	decfsz	wreg,f,c
  8360   00233A  D7FE               	bra	u6517
  8361   00233C  2E4B               	decfsz	??_App_SetTemperature^0,f,c
  8362   00233E  D7FC               	bra	u6517
  8363   002340  2E4C               	decfsz	(??_App_SetTemperature+1)^0,f,c
  8364   002342  D7FA               	bra	u6517
  8365   002344                     
  8366                           ;appliction.c: 111:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  8367   002344  0E55               	movlw	low _LCD_1
  8368   002346  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  8369   002348  0E01               	movlw	1
  8370   00234A  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  8371   00234C  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  8372   002350                     
  8373                           ;appliction.c: 112:     LCD_voidSetCursorPos_4Bit(&LCD_1, 1, 3);
  8374   002350  0E55               	movlw	low _LCD_1
  8375   002352  6E0D               	movwf	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit^0,c
  8376   002354  0E01               	movlw	1
  8377   002356  6E0E               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,c
  8378   002358  0E03               	movlw	3
  8379   00235A  6E0F               	movwf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,c
  8380   00235C  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  8381   002360                     
  8382                           ;appliction.c: 114:     LCD4Bit_voidSendString_Pos(&LCD_1, 1, 2, "Done");
  8383   002360  0E55               	movlw	low _LCD_1
  8384   002362  6E12               	movwf	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit^0,c
  8385   002364  0E01               	movlw	1
  8386   002366  6E13               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Row^0,c
  8387   002368  0E02               	movlw	2
  8388   00236A  6E14               	movwf	LCD4Bit_voidSendString_Pos@Copy_u8Column^0,c
  8389   00236C  0EF1               	movlw	low STR_32
  8390   00236E  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  8391   002370  0EFF               	movlw	high STR_32
  8392   002372  6E16               	movwf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  8393   002374  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  8394   002378                     
  8395                           ;appliction.c: 115:     _delay((unsigned long)((500)*(8000000/4000.0)));
  8396   002378  0E06               	movlw	6
  8397   00237A  6E4C               	movwf	(??_App_SetTemperature+1)^0,c
  8398   00237C  0E13               	movlw	19
  8399   00237E  6E4B               	movwf	??_App_SetTemperature^0,c
  8400   002380  0EAE               	movlw	174
  8401   002382                     u6527:
  8402   002382  2EE8               	decfsz	wreg,f,c
  8403   002384  D7FE               	bra	u6527
  8404   002386  2E4B               	decfsz	??_App_SetTemperature^0,f,c
  8405   002388  D7FC               	bra	u6527
  8406   00238A  2E4C               	decfsz	(??_App_SetTemperature+1)^0,f,c
  8407   00238C  D7FA               	bra	u6527
  8408   00238E                     
  8409                           ;appliction.c: 116:     LCD4Bit_voidSendCommand(&LCD_1, 0x01);
  8410   00238E  0E55               	movlw	low _LCD_1
  8411   002390  6E0B               	movwf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,c
  8412   002392  0E01               	movlw	1
  8413   002394  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  8414   002396  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  8415   00239A                     
  8416                           ;appliction.c: 117:     return RequiredTemp;
  8417   00239A  504D               	movf	App_SetTemperature@RequiredTemp^0,w,c
  8418   00239C  0012               	return		;funcret
  8419   00239E                     __end_of_App_SetTemperature:
  8420                           	callstack 0
  8421                           
  8422 ;; *************** function _LCD4Bit_voidSendChar_Pos *****************
  8423 ;; Defined at:
  8424 ;;		line 63 in file "HAL/LCD/LCD_program.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;  Copy_stLCD4B    1   17[COMRAM] PTR struct .
  8427 ;;		 -> LCD_1(7), 
  8428 ;;  Copy_u8Row      1   18[COMRAM] unsigned char 
  8429 ;;  Copy_u8Colum    1   19[COMRAM] unsigned char 
  8430 ;;  Copy_u8Char     1   20[COMRAM] unsigned char 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;Total ram usage:        4 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 5
  8449 ;; This function calls:
  8450 ;;		_LCD4Bit_voidSendChar
  8451 ;;		_LCD_voidSetCursorPos_4Bit
  8452 ;; This function is called by:
  8453 ;;		_App_SetTemperature
  8454 ;;		_LCD4Bit_voidSendCustomChar
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text33
  8459   003850                     __ptext33:
  8460                           	callstack 0
  8461   003850                     _LCD4Bit_voidSendChar_Pos:
  8462                           	callstack 24
  8463   003850                     
  8464                           ;HAL/LCD/LCD_program.c: 63: void LCD4Bit_voidSendChar_Pos(LCD_4_BIT_T *Copy_stLCD4Bit, u
      +                          8 Copy_u8Row, u8 Copy_u8Column, u8 Copy_u8Char);HAL/LCD/LCD_program.c: 64: {;HAL/LCD/LCD
      +                          _program.c: 65:     LCD_voidSetCursorPos_4Bit(Copy_stLCD4Bit, Copy_u8Row, Copy_u8Column)
      +                          ;
  8465   003850  C012  F00D         	movff	LCD4Bit_voidSendChar_Pos@Copy_stLCD4Bit,LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit
  8466   003854  C013  F00E         	movff	LCD4Bit_voidSendChar_Pos@Copy_u8Row,LCD_voidSetCursorPos_4Bit@Copy_u8Row
  8467   003858  C014  F00F         	movff	LCD4Bit_voidSendChar_Pos@Copy_u8Column,LCD_voidSetCursorPos_4Bit@Copy_u8Column
  8468   00385C  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  8469                           
  8470                           ;HAL/LCD/LCD_program.c: 66:     LCD4Bit_voidSendChar(Copy_stLCD4Bit, Copy_u8Char);
  8471   003860  C012  F00B         	movff	LCD4Bit_voidSendChar_Pos@Copy_stLCD4Bit,LCD4Bit_voidSendChar@Copy_stLCD4Bit
  8472   003864  C015  F00C         	movff	LCD4Bit_voidSendChar_Pos@Copy_u8Char,LCD4Bit_voidSendChar@Copy_u8Char
  8473   003868  EC77  F01A         	call	_LCD4Bit_voidSendChar	;wreg free
  8474   00386C  0012               	return		;funcret
  8475   00386E                     __end_of_LCD4Bit_voidSendChar_Pos:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _APP_Get_Number *****************
  8479 ;; Defined at:
  8480 ;;		line 33 in file "appliction.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  x               1    wreg     unsigned char 
  8483 ;;  y               1   65[COMRAM] unsigned char 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  x               1   69[COMRAM] unsigned char 
  8486 ;;  number          2   71[COMRAM] unsigned short 
  8487 ;;  pressed         1   73[COMRAM] unsigned char 
  8488 ;;  counter_KEY     1   70[COMRAM] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2   65[COMRAM] unsigned short 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8499 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;Total ram usage:        9 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; Hardware stack levels required when called: 7
  8505 ;; This function calls:
  8506 ;;		_KEYPAD_u8KeyPadPressed
  8507 ;;		_LCD4Bit_voidSendNumber
  8508 ;;		___wmul
  8509 ;; This function is called by:
  8510 ;;		_main
  8511 ;;		_App_SetTemperature
  8512 ;;		_LCD_ChoisePrint
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text34
  8517   0027F4                     __ptext34:
  8518                           	callstack 0
  8519   0027F4                     _APP_Get_Number:
  8520                           	callstack 22
  8521                           
  8522                           ;incstack = 0
  8523                           ;APP_Get_Number@x stored from wreg
  8524   0027F4  6E46               	movwf	APP_Get_Number@x^0,c
  8525   0027F6                     
  8526                           ;appliction.c: 33: u16 APP_Get_Number(u8 x, u8 y);appliction.c: 34: {;appliction.c: 35: 
      +                              u8 counter_KEY = 0;
  8527   0027F6  0E00               	movlw	0
  8528   0027F8  6E47               	movwf	APP_Get_Number@counter_KEY^0,c
  8529                           
  8530                           ;appliction.c: 37:     u16 number = 0;
  8531   0027FA  0E00               	movlw	0
  8532   0027FC  6E49               	movwf	(APP_Get_Number@number+1)^0,c
  8533   0027FE  0E00               	movlw	0
  8534   002800  6E48               	movwf	APP_Get_Number@number^0,c
  8535   002802                     l5530:
  8536                           
  8537                           ;appliction.c: 39:     {;appliction.c: 41:         pressed = KEYPAD_u8KeyPadPressed(&Key
      +                          Pad_1);
  8538   002802  0EAE               	movlw	low _KeyPad_1
  8539   002804  6E09               	movwf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,c
  8540   002806  EC52  F012         	call	_KEYPAD_u8KeyPadPressed	;wreg free
  8541   00280A  6E4A               	movwf	APP_Get_Number@pressed^0,c
  8542   00280C                     
  8543                           ;appliction.c: 42:         if (pressed != 0xff)
  8544   00280C  284A               	incf	APP_Get_Number@pressed^0,w,c
  8545   00280E  B4D8               	btfsc	status,2,c
  8546   002810  EF0C  F014         	goto	u4691
  8547   002814  EF0E  F014         	goto	u4690
  8548   002818                     u4691:
  8549   002818  EF01  F014         	goto	l5530
  8550   00281C                     u4690:
  8551   00281C                     
  8552                           ;appliction.c: 43:         {;appliction.c: 44:             if (pressed != 'c' && counter
      +                          _KEY < 4)
  8553   00281C  0E63               	movlw	99
  8554   00281E  184A               	xorwf	APP_Get_Number@pressed^0,w,c
  8555   002820  B4D8               	btfsc	status,2,c
  8556   002822  EF15  F014         	goto	u4701
  8557   002826  EF17  F014         	goto	u4700
  8558   00282A                     u4701:
  8559   00282A  EF4A  F014         	goto	l5548
  8560   00282E                     u4700:
  8561   00282E  0E04               	movlw	4
  8562   002830  6047               	cpfslt	APP_Get_Number@counter_KEY^0,c
  8563   002832  EF1D  F014         	goto	u4711
  8564   002836  EF1F  F014         	goto	u4710
  8565   00283A                     u4711:
  8566   00283A  EF4A  F014         	goto	l5548
  8567   00283E                     u4710:
  8568   00283E                     
  8569                           ;appliction.c: 45:             {;appliction.c: 46:                 _delay((unsigned long
      +                          )((200)*(8000000/4000.0)));
  8570   00283E  0E03               	movlw	3
  8571   002840  6E45               	movwf	(??_APP_Get_Number+1)^0,c
  8572   002842  0E08               	movlw	8
  8573   002844  6E44               	movwf	??_APP_Get_Number^0,c
  8574   002846  0E77               	movlw	119
  8575   002848                     u6537:
  8576   002848  2EE8               	decfsz	wreg,f,c
  8577   00284A  D7FE               	bra	u6537
  8578   00284C  2E44               	decfsz	??_APP_Get_Number^0,f,c
  8579   00284E  D7FC               	bra	u6537
  8580   002850  2E45               	decfsz	(??_APP_Get_Number+1)^0,f,c
  8581   002852  D7FA               	bra	u6537
  8582   002854  0000               	nop	
  8583   002856                     
  8584                           ;appliction.c: 47:                 number *= 10;
  8585   002856  C048  F001         	movff	APP_Get_Number@number,___wmul@multiplier
  8586   00285A  C049  F002         	movff	APP_Get_Number@number+1,___wmul@multiplier+1
  8587   00285E  0E00               	movlw	0
  8588   002860  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8589   002862  0E0A               	movlw	10
  8590   002864  6E03               	movwf	___wmul@multiplicand^0,c
  8591   002866  ECBD  F01B         	call	___wmul	;wreg free
  8592   00286A  C001  F048         	movff	?___wmul,APP_Get_Number@number
  8593   00286E  C002  F049         	movff	?___wmul+1,APP_Get_Number@number+1
  8594   002872                     
  8595                           ;appliction.c: 48:                 number += pressed;
  8596   002872  504A               	movf	APP_Get_Number@pressed^0,w,c
  8597   002874  2648               	addwf	APP_Get_Number@number^0,f,c
  8598   002876  0E00               	movlw	0
  8599   002878  2249               	addwfc	(APP_Get_Number@number+1)^0,f,c
  8600   00287A                     
  8601                           ;appliction.c: 49:                 counter_KEY++;
  8602   00287A  2A47               	incf	APP_Get_Number@counter_KEY^0,f,c
  8603   00287C                     
  8604                           ;appliction.c: 50:                 LCD4Bit_voidSendNumber(&LCD_1, number, x, y);
  8605   00287C  0E55               	movlw	low _LCD_1
  8606   00287E  6E30               	movwf	LCD4Bit_voidSendNumber@Copy_stLCD4Bit^0,c
  8607   002880  C048  F031         	movff	APP_Get_Number@number,LCD4Bit_voidSendNumber@Copy_u16Number
  8608   002884  C049  F032         	movff	APP_Get_Number@number+1,LCD4Bit_voidSendNumber@Copy_u16Number+1
  8609   002888  C046  F033         	movff	APP_Get_Number@x,LCD4Bit_voidSendNumber@Copy_u8Row
  8610   00288C  C042  F034         	movff	APP_Get_Number@y,LCD4Bit_voidSendNumber@Copy_u8Column
  8611   002890  ECB5  F016         	call	_LCD4Bit_voidSendNumber	;wreg free
  8612   002894                     l5548:
  8613                           
  8614                           ;appliction.c: 52:             if ('c' == pressed)
  8615   002894  0E63               	movlw	99
  8616   002896  184A               	xorwf	APP_Get_Number@pressed^0,w,c
  8617   002898  A4D8               	btfss	status,2,c
  8618   00289A  EF51  F014         	goto	u4721
  8619   00289E  EF53  F014         	goto	u4720
  8620   0028A2                     u4721:
  8621   0028A2  EF01  F014         	goto	l5530
  8622   0028A6                     u4720:
  8623   0028A6                     
  8624                           ;appliction.c: 58:     return number;
  8625   0028A6  C048  F042         	movff	APP_Get_Number@number,?_APP_Get_Number
  8626   0028AA  C049  F043         	movff	APP_Get_Number@number+1,?_APP_Get_Number+1
  8627   0028AE  0012               	return		;funcret
  8628   0028B0                     __end_of_APP_Get_Number:
  8629                           	callstack 0
  8630                           
  8631 ;; *************** function ___wmul *****************
  8632 ;; Defined at:
  8633 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  multiplier      2    0[COMRAM] unsigned int 
  8636 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  product         2    4[COMRAM] unsigned int 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  2    0[COMRAM] unsigned int 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0, prodl, prodh
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;Total ram usage:        6 bytes
  8653 ;; Hardware stack levels used: 1
  8654 ;; Hardware stack levels required when called: 1
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_APP_Get_Number
  8659 ;;		_KEYPAD_u16KeypadReturnNumber
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           	psect	text35
  8664   00377A                     __ptext35:
  8665                           	callstack 0
  8666   00377A                     ___wmul:
  8667                           	callstack 27
  8668   00377A  5001               	movf	___wmul@multiplier^0,w,c
  8669   00377C  0203               	mulwf	___wmul@multiplicand^0,c
  8670   00377E  CFF3 F005          	movff	prodl,___wmul@product
  8671   003782  CFF4 F006          	movff	prodh,___wmul@product+1
  8672   003786  5001               	movf	___wmul@multiplier^0,w,c
  8673   003788  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8674   00378A  50F3               	movf	243,w,c
  8675   00378C  2606               	addwf	(___wmul@product+1)^0,f,c
  8676   00378E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8677   003790  0203               	mulwf	___wmul@multiplicand^0,c
  8678   003792  50F3               	movf	243,w,c
  8679   003794  2606               	addwf	(___wmul@product+1)^0,f,c
  8680   003796  C005  F001         	movff	___wmul@product,?___wmul
  8681   00379A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8682   00379E  0012               	return		;funcret
  8683   0037A0                     __end_of___wmul:
  8684                           	callstack 0
  8685                           
  8686 ;; *************** function _LCD4Bit_voidSendNumber *****************
  8687 ;; Defined at:
  8688 ;;		line 228 in file "HAL/LCD/LCD_program.c"
  8689 ;; Parameters:    Size  Location     Type
  8690 ;;  Copy_stLCD4B    1   47[COMRAM] PTR struct .
  8691 ;;		 -> LCD_1(7), 
  8692 ;;  Copy_u16Numb    2   48[COMRAM] unsigned short 
  8693 ;;  Copy_u8Row      1   50[COMRAM] unsigned char 
  8694 ;;  Copy_u8Colum    1   51[COMRAM] unsigned char 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;  Number          6   58[COMRAM] unsigned char [6]
  8697 ;;  Number2         6   52[COMRAM] unsigned char [6]
  8698 ;;  i               1   64[COMRAM] unsigned char 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8708 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8712 ;;Total ram usage:       18 bytes
  8713 ;; Hardware stack levels used: 1
  8714 ;; Hardware stack levels required when called: 6
  8715 ;; This function calls:
  8716 ;;		_LCD4Bit_voidSendString_Pos
  8717 ;;		_memset
  8718 ;;		_sprintf
  8719 ;; This function is called by:
  8720 ;;		_main
  8721 ;;		_APP_Get_Number
  8722 ;;		_LCD_ChoisePrint
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text36
  8727   002D6A                     __ptext36:
  8728                           	callstack 0
  8729   002D6A                     _LCD4Bit_voidSendNumber:
  8730                           	callstack 23
  8731   002D6A                     
  8732                           ;HAL/LCD/LCD_program.c: 228: void LCD4Bit_voidSendNumber(LCD_4_BIT_T *Copy_stLCD4Bit, u1
      +                          6 Copy_u16Number, u8 Copy_u8Row, u8 Copy_u8Column);HAL/LCD/LCD_program.c: 229: {;HAL/LCD
      +                          /LCD_program.c: 230:     u8 Number[6] = {'\0'};
  8733   002D6A  EE20  F03B         	lfsr	2,LCD4Bit_voidSendNumber@Number
  8734   002D6E  0E05               	movlw	5
  8735   002D70                     u4501:
  8736   002D70  6ADE               	clrf	postinc2,c
  8737   002D72  06E8               	decf	wreg,f,c
  8738   002D74  E2FD               	bc	u4501
  8739                           
  8740                           ;HAL/LCD/LCD_program.c: 231:     u8 Number2[6] = {'\0'};
  8741   002D76  EE20  F035         	lfsr	2,LCD4Bit_voidSendNumber@Number2
  8742   002D7A  0E05               	movlw	5
  8743   002D7C                     u4511:
  8744   002D7C  6ADE               	clrf	postinc2,c
  8745   002D7E  06E8               	decf	wreg,f,c
  8746   002D80  E2FD               	bc	u4511
  8747   002D82                     
  8748                           ;HAL/LCD/LCD_program.c: 232:     u8 i = 0;
  8749   002D82  0E00               	movlw	0
  8750   002D84  6E41               	movwf	LCD4Bit_voidSendNumber@i^0,c
  8751   002D86                     
  8752                           ;HAL/LCD/LCD_program.c: 233:     memset((s8 *)Number, ' ', 5);
  8753   002D86  0E3B               	movlw	low LCD4Bit_voidSendNumber@Number
  8754   002D88  6E01               	movwf	memset@dest^0,c
  8755   002D8A  0E00               	movlw	0
  8756   002D8C  6E03               	movwf	(memset@c+1)^0,c
  8757   002D8E  0E20               	movlw	32
  8758   002D90  6E02               	movwf	memset@c^0,c
  8759   002D92  0E00               	movlw	0
  8760   002D94  6E05               	movwf	(memset@n+1)^0,c
  8761   002D96  0E05               	movlw	5
  8762   002D98  6E04               	movwf	memset@n^0,c
  8763   002D9A  EC92  F01B         	call	_memset	;wreg free
  8764   002D9E                     
  8765                           ;HAL/LCD/LCD_program.c: 234:     Number[5] = '\0';
  8766   002D9E  0E00               	movlw	0
  8767   002DA0  6E40               	movwf	(LCD4Bit_voidSendNumber@Number+5)^0,c
  8768   002DA2                     
  8769                           ;HAL/LCD/LCD_program.c: 235:     sprintf((s8 *)Number2, "%i", Copy_u16Number);
  8770   002DA2  0E35               	movlw	low LCD4Bit_voidSendNumber@Number2
  8771   002DA4  6E1E               	movwf	sprintf@s^0,c
  8772   002DA6  0EFB               	movlw	low STR_38
  8773   002DA8  6E1F               	movwf	sprintf@fmt^0,c
  8774   002DAA  0EFF               	movlw	high STR_38
  8775   002DAC  6E20               	movwf	(sprintf@fmt+1)^0,c
  8776   002DAE  C031  F021         	movff	LCD4Bit_voidSendNumber@Copy_u16Number,?_sprintf+3
  8777   002DB2  C032  F022         	movff	LCD4Bit_voidSendNumber@Copy_u16Number+1,?_sprintf+4
  8778   002DB6  EC27  F01B         	call	_sprintf	;wreg free
  8779                           
  8780                           ;HAL/LCD/LCD_program.c: 236:     while (Number2[i] != '\0')
  8781   002DBA  EFEA  F016         	goto	l5324
  8782   002DBE                     l5320:
  8783                           
  8784                           ;HAL/LCD/LCD_program.c: 237:     {;HAL/LCD/LCD_program.c: 238:         Number[i] = Numbe
      +                          r2[i];
  8785   002DBE  5041               	movf	LCD4Bit_voidSendNumber@i^0,w,c
  8786   002DC0  0F35               	addlw	low LCD4Bit_voidSendNumber@Number2
  8787   002DC2  6ED9               	movwf	fsr2l,c
  8788   002DC4  6ADA               	clrf	fsr2h,c
  8789   002DC6  5041               	movf	LCD4Bit_voidSendNumber@i^0,w,c
  8790   002DC8  0F3B               	addlw	low LCD4Bit_voidSendNumber@Number
  8791   002DCA  6EE1               	movwf	fsr1l,c
  8792   002DCC  6AE2               	clrf	fsr1h,c
  8793   002DCE  CFDF FFE7          	movff	indf2,indf1
  8794   002DD2                     
  8795                           ;HAL/LCD/LCD_program.c: 239:         i++;
  8796   002DD2  2A41               	incf	LCD4Bit_voidSendNumber@i^0,f,c
  8797   002DD4                     l5324:
  8798                           
  8799                           ;HAL/LCD/LCD_program.c: 236:     while (Number2[i] != '\0')
  8800   002DD4  5041               	movf	LCD4Bit_voidSendNumber@i^0,w,c
  8801   002DD6  0F35               	addlw	low LCD4Bit_voidSendNumber@Number2
  8802   002DD8  6ED9               	movwf	fsr2l,c
  8803   002DDA  6ADA               	clrf	fsr2h,c
  8804   002DDC  50DF               	movf	indf2,w,c
  8805   002DDE  A4D8               	btfss	status,2,c
  8806   002DE0  EFF4  F016         	goto	u4521
  8807   002DE4  EFF6  F016         	goto	u4520
  8808   002DE8                     u4521:
  8809   002DE8  EFDF  F016         	goto	l5320
  8810   002DEC                     u4520:
  8811   002DEC                     
  8812                           ;HAL/LCD/LCD_program.c: 241:     LCD4Bit_voidSendString_Pos(Copy_stLCD4Bit, Copy_u8Row, 
      +                          Copy_u8Column, Number);
  8813   002DEC  C030  F012         	movff	LCD4Bit_voidSendNumber@Copy_stLCD4Bit,LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit
  8814   002DF0  C033  F013         	movff	LCD4Bit_voidSendNumber@Copy_u8Row,LCD4Bit_voidSendString_Pos@Copy_u8Row
  8815   002DF4  C034  F014         	movff	LCD4Bit_voidSendNumber@Copy_u8Column,LCD4Bit_voidSendString_Pos@Copy_u8Column
  8816   002DF8  0E3B               	movlw	low LCD4Bit_voidSendNumber@Number
  8817   002DFA  6E15               	movwf	LCD4Bit_voidSendString_Pos@Copy_Pu8Str^0,c
  8818   002DFC  6A16               	clrf	(LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1)^0,c
  8819   002DFE  EC17  F01C         	call	_LCD4Bit_voidSendString_Pos	;wreg free
  8820   002E02  0012               	return		;funcret
  8821   002E04                     __end_of_LCD4Bit_voidSendNumber:
  8822                           	callstack 0
  8823                           
  8824 ;; *************** function _sprintf *****************
  8825 ;; Defined at:
  8826 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  s               1   29[COMRAM] PTR unsigned char 
  8829 ;;		 -> LCD4Bit_voidSendNumber@Number2(6), 
  8830 ;;  fmt             2   30[COMRAM] PTR const unsigned char 
  8831 ;;		 -> STR_38(3), 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  f              12   35[COMRAM] struct _IO_FILE
  8834 ;;  ret             2    0        int 
  8835 ;;  ap              1   34[COMRAM] PTR void [1]
  8836 ;;		 -> ?_sprintf(2), 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  2   29[COMRAM] int 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8846 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;Total ram usage:       18 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 5
  8853 ;; This function calls:
  8854 ;;		_vfprintf
  8855 ;; This function is called by:
  8856 ;;		_LCD4Bit_voidSendNumber
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text37
  8861   00364E                     __ptext37:
  8862                           	callstack 0
  8863   00364E                     _sprintf:
  8864                           	callstack 23
  8865   00364E  0E21               	movlw	low (?_sprintf+3)
  8866   003650  6E23               	movwf	sprintf@ap^0,c
  8867   003652  C01E  F024         	movff	sprintf@s,sprintf@f
  8868   003656  0E00               	movlw	0
  8869   003658  6E28               	movwf	(sprintf@f+4)^0,c
  8870   00365A  0E00               	movlw	0
  8871   00365C  6E27               	movwf	(sprintf@f+3)^0,c
  8872   00365E  0E00               	movlw	0
  8873   003660  6E2F               	movwf	(sprintf@f+11)^0,c
  8874   003662  0E00               	movlw	0
  8875   003664  6E2E               	movwf	(sprintf@f+10)^0,c
  8876   003666  0E24               	movlw	low sprintf@f
  8877   003668  6E18               	movwf	vfprintf@fp^0,c
  8878   00366A  C01F  F019         	movff	sprintf@fmt,vfprintf@fmt
  8879   00366E  C020  F01A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  8880   003672  0E23               	movlw	low sprintf@ap
  8881   003674  6E1B               	movwf	vfprintf@ap^0,c
  8882   003676  ECE5  F01A         	call	_vfprintf	;wreg free
  8883   00367A  501E               	movf	sprintf@s^0,w,c
  8884   00367C  2427               	addwf	(sprintf@f+3)^0,w,c
  8885   00367E  6ED9               	movwf	fsr2l,c
  8886   003680  6ADA               	clrf	fsr2h,c
  8887   003682  6ADF               	clrf	indf2,c
  8888   003684  0012               	return		;funcret
  8889   003686                     __end_of_sprintf:
  8890                           	callstack 0
  8891                           
  8892 ;; *************** function _vfprintf *****************
  8893 ;; Defined at:
  8894 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  8897 ;;		 -> sprintf@f(12), 
  8898 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
  8899 ;;		 -> STR_38(3), 
  8900 ;;  ap              1   26[COMRAM] PTR PTR void 
  8901 ;;		 -> sprintf@ap(1), 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  cfmt            2   27[COMRAM] PTR unsigned char 
  8904 ;;		 -> STR_38(3), 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  2   23[COMRAM] int 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;Total ram usage:        6 bytes
  8919 ;; Hardware stack levels used: 1
  8920 ;; Hardware stack levels required when called: 4
  8921 ;; This function calls:
  8922 ;;		_vfpfcnvrt
  8923 ;; This function is called by:
  8924 ;;		_sprintf
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text38
  8929   0035CA                     __ptext38:
  8930                           	callstack 0
  8931   0035CA                     _vfprintf:
  8932                           	callstack 23
  8933   0035CA                     
  8934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  8935   0035CA  C019  F01C         	movff	vfprintf@fmt,vfprintf@cfmt
  8936   0035CE  C01A  F01D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  8937                           
  8938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8939   0035D2  EFF3  F01A         	goto	l4822
  8940   0035D6                     l4820:
  8941                           
  8942                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  8943   0035D6  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  8944   0035DA  0E1C               	movlw	low vfprintf@cfmt
  8945   0035DC  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  8946   0035DE  C01B  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  8947   0035E2  EC29  F00D         	call	_vfpfcnvrt	;wreg free
  8948   0035E6                     l4822:
  8949                           
  8950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  8951   0035E6  C01C  FFF6         	movff	vfprintf@cfmt,tblptrl
  8952   0035EA  C01D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  8953   0035EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8954   0035EE  6AF8               	clrf	tblptru,c
  8955   0035F0                     	endif
  8956   0035F0                     	if	0	;tblptru may be non-zero
  8957   0035F0                     	endif
  8958   0035F0  0008               	tblrd		*
  8959   0035F2  50F5               	movf	tablat,w,c
  8960   0035F4  0900               	iorlw	0
  8961   0035F6  A4D8               	btfss	status,2,c
  8962   0035F8  EF00  F01B         	goto	u3661
  8963   0035FC  EF02  F01B         	goto	u3660
  8964   003600                     u3661:
  8965   003600  EFEB  F01A         	goto	l4820
  8966   003604                     u3660:
  8967   003604                     
  8968                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  8969   003604  0E00               	movlw	0
  8970   003606  6E19               	movwf	(?_vfprintf+1)^0,c
  8971   003608  0E00               	movlw	0
  8972   00360A  6E18               	movwf	?_vfprintf^0,c
  8973   00360C  0012               	return		;funcret
  8974   00360E                     __end_of_vfprintf:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _vfpfcnvrt *****************
  8978 ;; Defined at:
  8979 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  8982 ;;		 -> sprintf@f(12), 
  8983 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  8984 ;;		 -> vfprintf@cfmt(2), 
  8985 ;;  ap              1   12[COMRAM] PTR PTR void 
  8986 ;;		 -> sprintf@ap(1), 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;  convarg         4   18[COMRAM] struct .
  8989 ;;  cp              2   16[COMRAM] PTR unsigned char 
  8990 ;;		 -> STR_38(3), 
  8991 ;;  c               1   22[COMRAM] unsigned char 
  8992 ;;  done            1   15[COMRAM] _Bool 
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      void 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9002 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;Total ram usage:       13 bytes
  9007 ;; Hardware stack levels used: 1
  9008 ;; Hardware stack levels required when called: 3
  9009 ;; This function calls:
  9010 ;;		___awdiv
  9011 ;;		___awmod
  9012 ;;		_abs
  9013 ;;		_fputc
  9014 ;; This function is called by:
  9015 ;;		_vfprintf
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text39
  9020   001A52                     __ptext39:
  9021                           	callstack 0
  9022   001A52                     _vfpfcnvrt:
  9023                           	callstack 23
  9024   001A52                     
  9025                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  9026   001A52  500C               	movf	vfpfcnvrt@fmt^0,w,c
  9027   001A54  6ED9               	movwf	fsr2l,c
  9028   001A56  6ADA               	clrf	fsr2h,c
  9029   001A58  CFDE FFF6          	movff	postinc2,tblptrl
  9030   001A5C  CFDD FFF7          	movff	postdec2,tblptrh
  9031   001A60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9032   001A60  6AF8               	clrf	tblptru,c
  9033   001A62                     	endif
  9034   001A62                     	if	0	;tblptru may be non-zero
  9035   001A62                     	endif
  9036   001A62  0008               	tblrd		*
  9037   001A64  50F5               	movf	tablat,w,c
  9038   001A66  0A25               	xorlw	37
  9039   001A68  A4D8               	btfss	status,2,c
  9040   001A6A  EF39  F00D         	goto	u3531
  9041   001A6E  EF3B  F00D         	goto	u3530
  9042   001A72                     u3531:
  9043   001A72  EF0B  F00E         	goto	l4786
  9044   001A76                     u3530:
  9045   001A76                     
  9046                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  9047   001A76  500C               	movf	vfpfcnvrt@fmt^0,w,c
  9048   001A78  6ED9               	movwf	fsr2l,c
  9049   001A7A  6ADA               	clrf	fsr2h,c
  9050   001A7C  2ADE               	incf	postinc2,f,c
  9051   001A7E  0E00               	movlw	0
  9052   001A80  22DD               	addwfc	postdec2,f,c
  9053   001A82                     
  9054                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  9055   001A82  0E00               	movlw	0
  9056   001A84  0100               	movlb	0	; () banked
  9057   001A86  6FEC               	movwf	(_width+1)& (0+255),b
  9058   001A88  0E00               	movlw	0
  9059   001A8A  6FEB               	movwf	_width& (0+255),b
  9060   001A8C  C0EB  F076         	movff	_width,_flags
  9061   001A90                     
  9062                           ; BSR set to: 0
  9063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  9064   001A90  69ED               	setf	_prec& (0+255),b
  9065   001A92  69EE               	setf	(_prec+1)& (0+255),b
  9066   001A94                     
  9067                           ; BSR set to: 0
  9068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  9069   001A94  500C               	movf	vfpfcnvrt@fmt^0,w,c
  9070   001A96  6ED9               	movwf	fsr2l,c
  9071   001A98  6ADA               	clrf	fsr2h,c
  9072   001A9A  CFDE F011          	movff	postinc2,vfpfcnvrt@cp
  9073   001A9E  CFDD F012          	movff	postdec2,vfpfcnvrt@cp+1
  9074   001AA2                     
  9075                           ; BSR set to: 0
  9076                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  9077   001AA2  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9078   001AA6  C012  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9079   001AAA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9080   001AAA  6AF8               	clrf	tblptru,c
  9081   001AAC                     	endif
  9082   001AAC                     	if	0	;tblptru may be non-zero
  9083   001AAC                     	endif
  9084   001AAC  0008               	tblrd		*
  9085   001AAE  50F5               	movf	tablat,w,c
  9086   001AB0  0A64               	xorlw	100
  9087   001AB2  B4D8               	btfsc	status,2,c
  9088   001AB4  EF5E  F00D         	goto	u3541
  9089   001AB8  EF60  F00D         	goto	u3540
  9090   001ABC                     u3541:
  9091   001ABC  EF6F  F00D         	goto	l4756
  9092   001AC0                     u3540:
  9093   001AC0                     
  9094                           ; BSR set to: 0
  9095   001AC0  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9096   001AC4  C012  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9097   001AC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9098   001AC8  6AF8               	clrf	tblptru,c
  9099   001ACA                     	endif
  9100   001ACA                     	if	0	;tblptru may be non-zero
  9101   001ACA                     	endif
  9102   001ACA  0008               	tblrd		*
  9103   001ACC  50F5               	movf	tablat,w,c
  9104   001ACE  0A69               	xorlw	105
  9105   001AD0  A4D8               	btfss	status,2,c
  9106   001AD2  EF6D  F00D         	goto	u3551
  9107   001AD6  EF6F  F00D         	goto	u3550
  9108   001ADA                     u3551:
  9109   001ADA  EF03  F00E         	goto	l4782
  9110   001ADE                     u3550:
  9111   001ADE                     l4756:
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  9115   001ADE  500D               	movf	vfpfcnvrt@ap^0,w,c
  9116   001AE0  6ED9               	movwf	fsr2l,c
  9117   001AE2  6ADA               	clrf	fsr2h,c
  9118   001AE4  0E02               	movlw	2
  9119   001AE6  26DF               	addwf	indf2,f,c
  9120   001AE8  5CDF               	subwf	indf2,w,c
  9121   001AEA  6ED9               	movwf	fsr2l,c
  9122   001AEC  6ADA               	clrf	fsr2h,c
  9123   001AEE  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  9124   001AF2  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  9125   001AF6                     
  9126                           ; BSR set to: 0
  9127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  9128   001AF6  0E01               	movlw	1
  9129   001AF8  2411               	addwf	vfpfcnvrt@cp^0,w,c
  9130   001AFA  6E0E               	movwf	??_vfpfcnvrt^0,c
  9131   001AFC  0E00               	movlw	0
  9132   001AFE  2012               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  9133   001B00  6E0F               	movwf	(??_vfpfcnvrt+1)^0,c
  9134   001B02  500C               	movf	vfpfcnvrt@fmt^0,w,c
  9135   001B04  6ED9               	movwf	fsr2l,c
  9136   001B06  6ADA               	clrf	fsr2h,c
  9137   001B08  C00E  FFDE         	movff	??_vfpfcnvrt,postinc2
  9138   001B0C  C00F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  9139   001B10                     
  9140                           ; BSR set to: 0
  9141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  9142   001B10  0E20               	movlw	32
  9143   001B12  6E17               	movwf	vfpfcnvrt@c^0,c
  9144                           
  9145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  9146   001B14  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  9147   001B16  EF8F  F00D         	goto	u3561
  9148   001B1A  EF92  F00D         	goto	u3560
  9149   001B1E                     u3561:
  9150   001B1E  0E01               	movlw	1
  9151   001B20  EF93  F00D         	goto	u3570
  9152   001B24                     u3560:
  9153   001B24  0E00               	movlw	0
  9154   001B26                     u3570:
  9155   001B26  6E10               	movwf	vfpfcnvrt@done^0,c
  9156   001B28                     l4762:
  9157                           
  9158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  9159   001B28  0617               	decf	vfpfcnvrt@c^0,f,c
  9160   001B2A  0E00               	movlw	low _dbuf
  9161   001B2C  2417               	addwf	vfpfcnvrt@c^0,w,c
  9162   001B2E  6ED9               	movwf	fsr2l,c
  9163   001B30  6ADA               	clrf	fsr2h,c
  9164   001B32  0E01               	movlw	high _dbuf
  9165   001B34  22DA               	addwfc	fsr2h,f,c
  9166   001B36  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  9167   001B3A  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  9168   001B3E  0E00               	movlw	0
  9169   001B40  6E04               	movwf	(___awmod@divisor+1)^0,c
  9170   001B42  0E0A               	movlw	10
  9171   001B44  6E03               	movwf	___awmod@divisor^0,c
  9172   001B46  ECB6  F014         	call	___awmod	;wreg free
  9173   001B4A  C001  F007         	movff	?___awmod,abs@a
  9174   001B4E  C002  F008         	movff	?___awmod+1,abs@a+1
  9175   001B52  EC78  F01B         	call	_abs	;wreg free
  9176   001B56  5007               	movf	?_abs^0,w,c
  9177   001B58  0F30               	addlw	48
  9178   001B5A  6EDF               	movwf	indf2,c
  9179   001B5C                     
  9180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  9181   001B5C  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  9182   001B60  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  9183   001B64  0E00               	movlw	0
  9184   001B66  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9185   001B68  0E0A               	movlw	10
  9186   001B6A  6E03               	movwf	___awdiv@divisor^0,c
  9187   001B6C  EC3A  F013         	call	___awdiv	;wreg free
  9188   001B70  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  9189   001B74  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  9190   001B78                     
  9191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  9192   001B78  5013               	movf	vfpfcnvrt@convarg^0,w,c
  9193   001B7A  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  9194   001B7C  B4D8               	btfsc	status,2,c
  9195   001B7E  EFC3  F00D         	goto	u3581
  9196   001B82  EFC5  F00D         	goto	u3580
  9197   001B86                     u3581:
  9198   001B86  EFCD  F00D         	goto	l4770
  9199   001B8A                     u3580:
  9200   001B8A  5017               	movf	vfpfcnvrt@c^0,w,c
  9201   001B8C  A4D8               	btfss	status,2,c
  9202   001B8E  EFCB  F00D         	goto	u3591
  9203   001B92  EFCD  F00D         	goto	u3590
  9204   001B96                     u3591:
  9205   001B96  EF94  F00D         	goto	l4762
  9206   001B9A                     u3590:
  9207   001B9A                     l4770:
  9208                           
  9209                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  9210   001B9A  5017               	movf	vfpfcnvrt@c^0,w,c
  9211   001B9C  B4D8               	btfsc	status,2,c
  9212   001B9E  EFD3  F00D         	goto	u3601
  9213   001BA2  EFD5  F00D         	goto	u3600
  9214   001BA6                     u3601:
  9215   001BA6  EFF8  F00D         	goto	l4780
  9216   001BAA                     u3600:
  9217   001BAA  5010               	movf	vfpfcnvrt@done^0,w,c
  9218   001BAC  B4D8               	btfsc	status,2,c
  9219   001BAE  EFDB  F00D         	goto	u3611
  9220   001BB2  EFDD  F00D         	goto	u3610
  9221   001BB6                     u3611:
  9222   001BB6  EFF8  F00D         	goto	l4780
  9223   001BBA                     u3610:
  9224   001BBA                     
  9225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  9226   001BBA  0617               	decf	vfpfcnvrt@c^0,f,c
  9227   001BBC  0E00               	movlw	low _dbuf
  9228   001BBE  2417               	addwf	vfpfcnvrt@c^0,w,c
  9229   001BC0  6ED9               	movwf	fsr2l,c
  9230   001BC2  6ADA               	clrf	fsr2h,c
  9231   001BC4  0E01               	movlw	high _dbuf
  9232   001BC6  22DA               	addwfc	fsr2h,f,c
  9233   001BC8  0E2D               	movlw	45
  9234   001BCA  6EDF               	movwf	indf2,c
  9235   001BCC  EFF8  F00D         	goto	l4780
  9236   001BD0                     l4776:
  9237                           
  9238                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  9239   001BD0  0E00               	movlw	low _dbuf
  9240   001BD2  2417               	addwf	vfpfcnvrt@c^0,w,c
  9241   001BD4  6ED9               	movwf	fsr2l,c
  9242   001BD6  6ADA               	clrf	fsr2h,c
  9243   001BD8  0E01               	movlw	high _dbuf
  9244   001BDA  22DA               	addwfc	fsr2h,f,c
  9245   001BDC  50DF               	movf	indf2,w,c
  9246   001BDE  6E0E               	movwf	??_vfpfcnvrt^0,c
  9247   001BE0  500E               	movf	??_vfpfcnvrt^0,w,c
  9248   001BE2  6E01               	movwf	fputc@c^0,c
  9249   001BE4  6A02               	clrf	(fputc@c+1)^0,c
  9250   001BE6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9251   001BEA  ECBE  F015         	call	_fputc	;wreg free
  9252   001BEE  2A17               	incf	vfpfcnvrt@c^0,f,c
  9253   001BF0                     l4780:
  9254                           
  9255                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  9256   001BF0  0E20               	movlw	32
  9257   001BF2  1817               	xorwf	vfpfcnvrt@c^0,w,c
  9258   001BF4  A4D8               	btfss	status,2,c
  9259   001BF6  EFFF  F00D         	goto	u3621
  9260   001BFA  EF01  F00E         	goto	u3620
  9261   001BFE                     u3621:
  9262   001BFE  EFE8  F00D         	goto	l4776
  9263   001C02                     u3620:
  9264   001C02  EF1D  F00E         	goto	l2048
  9265   001C06                     l4782:
  9266                           
  9267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9268   001C06  500C               	movf	vfpfcnvrt@fmt^0,w,c
  9269   001C08  6ED9               	movwf	fsr2l,c
  9270   001C0A  6ADA               	clrf	fsr2h,c
  9271   001C0C  2ADE               	incf	postinc2,f,c
  9272   001C0E  0E00               	movlw	0
  9273   001C10  22DD               	addwfc	postdec2,f,c
  9274   001C12  EF1D  F00E         	goto	l2048
  9275   001C16                     l4786:
  9276                           
  9277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9278   001C16  500C               	movf	vfpfcnvrt@fmt^0,w,c
  9279   001C18  6ED9               	movwf	fsr2l,c
  9280   001C1A  6ADA               	clrf	fsr2h,c
  9281   001C1C  CFDE FFF6          	movff	postinc2,tblptrl
  9282   001C20  CFDD FFF7          	movff	postdec2,tblptrh
  9283   001C24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9284   001C24  6AF8               	clrf	tblptru,c
  9285   001C26                     	endif
  9286   001C26                     	if	0	;tblptru may be non-zero
  9287   001C26                     	endif
  9288   001C26  0008               	tblrd		*
  9289   001C28  50F5               	movf	tablat,w,c
  9290   001C2A  6E01               	movwf	fputc@c^0,c
  9291   001C2C  6A02               	clrf	(fputc@c+1)^0,c
  9292   001C2E  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9293   001C32  ECBE  F015         	call	_fputc	;wreg free
  9294   001C36  EF03  F00E         	goto	l4782
  9295   001C3A                     l2048:
  9296   001C3A  0012               	return		;funcret
  9297   001C3C                     __end_of_vfpfcnvrt:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function _fputc *****************
  9301 ;; Defined at:
  9302 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  c               2    0[COMRAM] int 
  9305 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  9306 ;;		 -> sprintf@f(12), 
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  2    0[COMRAM] int 
  9311 ;; Registers used:
  9312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9318 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9321 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9322 ;;Total ram usage:        8 bytes
  9323 ;; Hardware stack levels used: 1
  9324 ;; Hardware stack levels required when called: 2
  9325 ;; This function calls:
  9326 ;;		_putch
  9327 ;; This function is called by:
  9328 ;;		_vfpfcnvrt
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text40
  9333   002B7C                     __ptext40:
  9334                           	callstack 0
  9335   002B7C                     _fputc:
  9336                           	callstack 23
  9337   002B7C  5003               	movf	fputc@fp^0,w,c
  9338   002B7E  B4D8               	btfsc	status,2,c
  9339   002B80  EFC4  F015         	goto	u3481
  9340   002B84  EFC6  F015         	goto	u3480
  9341   002B88                     u3481:
  9342   002B88  EFCE  F015         	goto	l4724
  9343   002B8C                     u3480:
  9344   002B8C  5003               	movf	fputc@fp^0,w,c
  9345   002B8E  A4D8               	btfss	status,2,c
  9346   002B90  EFCC  F015         	goto	u3491
  9347   002B94  EFCE  F015         	goto	u3490
  9348   002B98                     u3491:
  9349   002B98  EFD3  F015         	goto	l4726
  9350   002B9C                     u3490:
  9351   002B9C                     l4724:
  9352   002B9C  5001               	movf	fputc@c^0,w,c
  9353   002B9E  EC62  F01C         	call	_putch
  9354   002BA2  EF12  F016         	goto	l2073
  9355   002BA6                     l4726:
  9356   002BA6  5003               	movf	fputc@fp^0,w,c
  9357   002BA8  6ED9               	movwf	fsr2l,c
  9358   002BAA  6ADA               	clrf	fsr2h,c
  9359   002BAC  0E0A               	movlw	10
  9360   002BAE  26D9               	addwf	fsr2l,f,c
  9361   002BB0  50DE               	movf	postinc2,w,c
  9362   002BB2  10DE               	iorwf	postinc2,w,c
  9363   002BB4  B4D8               	btfsc	status,2,c
  9364   002BB6  EFDF  F015         	goto	u3501
  9365   002BBA  EFE1  F015         	goto	u3500
  9366   002BBE                     u3501:
  9367   002BBE  EFFA  F015         	goto	l4730
  9368   002BC2                     u3500:
  9369   002BC2  5003               	movf	fputc@fp^0,w,c
  9370   002BC4  6ED9               	movwf	fsr2l,c
  9371   002BC6  6ADA               	clrf	fsr2h,c
  9372   002BC8  0E0A               	movlw	10
  9373   002BCA  26D9               	addwf	fsr2l,f,c
  9374   002BCC  5003               	movf	fputc@fp^0,w,c
  9375   002BCE  6EE1               	movwf	fsr1l,c
  9376   002BD0  6AE2               	clrf	fsr1h,c
  9377   002BD2  0E03               	movlw	3
  9378   002BD4  26E1               	addwf	fsr1l,f,c
  9379   002BD6  50DE               	movf	postinc2,w,c
  9380   002BD8  5CE6               	subwf	postinc1,w,c
  9381   002BDA  50E6               	movf	postinc1,w,c
  9382   002BDC  0A80               	xorlw	128
  9383   002BDE  6E08               	movwf	(??_fputc+4)^0,c
  9384   002BE0  50DE               	movf	postinc2,w,c
  9385   002BE2  0A80               	xorlw	128
  9386   002BE4  5808               	subwfb	(??_fputc+4)^0,w,c
  9387   002BE6  B0D8               	btfsc	status,0,c
  9388   002BE8  EFF8  F015         	goto	u3511
  9389   002BEC  EFFA  F015         	goto	u3510
  9390   002BF0                     u3511:
  9391   002BF0  EF12  F016         	goto	l2073
  9392   002BF4                     u3510:
  9393   002BF4                     l4730:
  9394   002BF4  5003               	movf	fputc@fp^0,w,c
  9395   002BF6  6ED9               	movwf	fsr2l,c
  9396   002BF8  6ADA               	clrf	fsr2h,c
  9397   002BFA  0E03               	movlw	3
  9398   002BFC  26D9               	addwf	fsr2l,f,c
  9399   002BFE  50DF               	movf	indf2,w,c
  9400   002C00  6E04               	movwf	??_fputc^0,c
  9401   002C02  5003               	movf	fputc@fp^0,w,c
  9402   002C04  6ED9               	movwf	fsr2l,c
  9403   002C06  6ADA               	clrf	fsr2h,c
  9404   002C08  50DF               	movf	indf2,w,c
  9405   002C0A  2404               	addwf	??_fputc^0,w,c
  9406   002C0C  6ED9               	movwf	fsr2l,c
  9407   002C0E  6ADA               	clrf	fsr2h,c
  9408   002C10  C001  FFDF         	movff	fputc@c,indf2
  9409   002C14  5003               	movf	fputc@fp^0,w,c
  9410   002C16  6ED9               	movwf	fsr2l,c
  9411   002C18  6ADA               	clrf	fsr2h,c
  9412   002C1A  0E03               	movlw	3
  9413   002C1C  26D9               	addwf	fsr2l,f,c
  9414   002C1E  2ADE               	incf	postinc2,f,c
  9415   002C20  0E00               	movlw	0
  9416   002C22  22DD               	addwfc	postdec2,f,c
  9417   002C24                     l2073:
  9418   002C24  0012               	return		;funcret
  9419   002C26                     __end_of_fputc:
  9420                           	callstack 0
  9421                           
  9422 ;; *************** function _putch *****************
  9423 ;; Defined at:
  9424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  c               1    wreg     unsigned char 
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  c               1    0[COMRAM] unsigned char 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;Total ram usage:        0 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 1
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_fputc
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text41
  9453   0038C4                     __ptext41:
  9454                           	callstack 0
  9455   0038C4                     _putch:
  9456                           	callstack 23
  9457   0038C4  0012               	return		;funcret
  9458   0038C6                     __end_of_putch:
  9459                           	callstack 0
  9460                           
  9461 ;; *************** function _abs *****************
  9462 ;; Defined at:
  9463 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  9464 ;; Parameters:    Size  Location     Type
  9465 ;;  a               2    6[COMRAM] int 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  2    6[COMRAM] int 
  9470 ;; Registers used:
  9471 ;;		wreg, status,2, status,0
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;Total ram usage:        4 bytes
  9482 ;; Hardware stack levels used: 1
  9483 ;; Hardware stack levels required when called: 1
  9484 ;; This function calls:
  9485 ;;		Nothing
  9486 ;; This function is called by:
  9487 ;;		_vfpfcnvrt
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text42
  9492   0036F0                     __ptext42:
  9493                           	callstack 0
  9494   0036F0                     _abs:
  9495                           	callstack 24
  9496   0036F0  BE08               	btfsc	(abs@a+1)^0,7,c
  9497   0036F2  EF7D  F01B         	goto	u3521
  9498   0036F6  EF7F  F01B         	goto	u3520
  9499   0036FA                     u3521:
  9500   0036FA  EF85  F01B         	goto	l2058
  9501   0036FE                     u3520:
  9502   0036FE  C007  F007         	movff	abs@a,?_abs
  9503   003702  C008  F008         	movff	abs@a+1,?_abs+1
  9504   003706  EF91  F01B         	goto	l2061
  9505   00370A                     l2058:
  9506   00370A  C007  F009         	movff	abs@a,??_abs
  9507   00370E  C008  F00A         	movff	abs@a+1,??_abs+1
  9508   003712  1E09               	comf	??_abs^0,f,c
  9509   003714  1E0A               	comf	(??_abs+1)^0,f,c
  9510   003716  4A09               	infsnz	??_abs^0,f,c
  9511   003718  2A0A               	incf	(??_abs+1)^0,f,c
  9512   00371A  C009  F007         	movff	??_abs,?_abs
  9513   00371E  C00A  F008         	movff	??_abs+1,?_abs+1
  9514   003722                     l2061:
  9515   003722  0012               	return		;funcret
  9516   003724                     __end_of_abs:
  9517                           	callstack 0
  9518                           
  9519 ;; *************** function ___awmod *****************
  9520 ;; Defined at:
  9521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;  dividend        2    0[COMRAM] int 
  9524 ;;  divisor         2    2[COMRAM] int 
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  sign            1    5[COMRAM] unsigned char 
  9527 ;;  counter         1    4[COMRAM] unsigned char 
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  2    0[COMRAM] int 
  9530 ;; Registers used:
  9531 ;;		wreg, status,2, status,0
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9541 ;;Total ram usage:        6 bytes
  9542 ;; Hardware stack levels used: 1
  9543 ;; Hardware stack levels required when called: 1
  9544 ;; This function calls:
  9545 ;;		Nothing
  9546 ;; This function is called by:
  9547 ;;		_vfpfcnvrt
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text43
  9552   00296C                     __ptext43:
  9553                           	callstack 0
  9554   00296C                     ___awmod:
  9555                           	callstack 24
  9556   00296C  0E00               	movlw	0
  9557   00296E  6E06               	movwf	___awmod@sign^0,c
  9558   002970  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9559   002972  EFBF  F014         	goto	u3420
  9560   002976  EFBD  F014         	goto	u3421
  9561   00297A                     u3421:
  9562   00297A  EFC5  F014         	goto	l4692
  9563   00297E                     u3420:
  9564   00297E  6C01               	negf	___awmod@dividend^0,c
  9565   002980  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9566   002982  B0D8               	btfsc	status,0,c
  9567   002984  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9568   002986  0E01               	movlw	1
  9569   002988  6E06               	movwf	___awmod@sign^0,c
  9570   00298A                     l4692:
  9571   00298A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9572   00298C  EFCC  F014         	goto	u3430
  9573   002990  EFCA  F014         	goto	u3431
  9574   002994                     u3431:
  9575   002994  EFD0  F014         	goto	l4696
  9576   002998                     u3430:
  9577   002998  6C03               	negf	___awmod@divisor^0,c
  9578   00299A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9579   00299C  B0D8               	btfsc	status,0,c
  9580   00299E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9581   0029A0                     l4696:
  9582   0029A0  5003               	movf	___awmod@divisor^0,w,c
  9583   0029A2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9584   0029A4  B4D8               	btfsc	status,2,c
  9585   0029A6  EFD7  F014         	goto	u3441
  9586   0029AA  EFD9  F014         	goto	u3440
  9587   0029AE                     u3441:
  9588   0029AE  EFFD  F014         	goto	l4712
  9589   0029B2                     u3440:
  9590   0029B2  0E01               	movlw	1
  9591   0029B4  6E05               	movwf	___awmod@counter^0,c
  9592   0029B6  EFE1  F014         	goto	l4702
  9593   0029BA                     l4700:
  9594   0029BA  90D8               	bcf	status,0,c
  9595   0029BC  3603               	rlcf	___awmod@divisor^0,f,c
  9596   0029BE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9597   0029C0  2A05               	incf	___awmod@counter^0,f,c
  9598   0029C2                     l4702:
  9599   0029C2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9600   0029C4  EFE6  F014         	goto	u3451
  9601   0029C8  EFE8  F014         	goto	u3450
  9602   0029CC                     u3451:
  9603   0029CC  EFDD  F014         	goto	l4700
  9604   0029D0                     u3450:
  9605   0029D0                     l4704:
  9606   0029D0  5003               	movf	___awmod@divisor^0,w,c
  9607   0029D2  5C01               	subwf	___awmod@dividend^0,w,c
  9608   0029D4  5004               	movf	(___awmod@divisor+1)^0,w,c
  9609   0029D6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9610   0029D8  A0D8               	btfss	status,0,c
  9611   0029DA  EFF1  F014         	goto	u3461
  9612   0029DE  EFF3  F014         	goto	u3460
  9613   0029E2                     u3461:
  9614   0029E2  EFF7  F014         	goto	l4708
  9615   0029E6                     u3460:
  9616   0029E6  5003               	movf	___awmod@divisor^0,w,c
  9617   0029E8  5E01               	subwf	___awmod@dividend^0,f,c
  9618   0029EA  5004               	movf	(___awmod@divisor+1)^0,w,c
  9619   0029EC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9620   0029EE                     l4708:
  9621   0029EE  90D8               	bcf	status,0,c
  9622   0029F0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9623   0029F2  3203               	rrcf	___awmod@divisor^0,f,c
  9624   0029F4  2E05               	decfsz	___awmod@counter^0,f,c
  9625   0029F6  EFE8  F014         	goto	l4704
  9626   0029FA                     l4712:
  9627   0029FA  5006               	movf	___awmod@sign^0,w,c
  9628   0029FC  B4D8               	btfsc	status,2,c
  9629   0029FE  EF03  F015         	goto	u3471
  9630   002A02  EF05  F015         	goto	u3470
  9631   002A06                     u3471:
  9632   002A06  EF09  F015         	goto	l4716
  9633   002A0A                     u3470:
  9634   002A0A  6C01               	negf	___awmod@dividend^0,c
  9635   002A0C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9636   002A0E  B0D8               	btfsc	status,0,c
  9637   002A10  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9638   002A12                     l4716:
  9639   002A12  C001  F001         	movff	___awmod@dividend,?___awmod
  9640   002A16  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9641   002A1A  0012               	return		;funcret
  9642   002A1C                     __end_of___awmod:
  9643                           	callstack 0
  9644                           
  9645 ;; *************** function ___awdiv *****************
  9646 ;; Defined at:
  9647 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  dividend        2    0[COMRAM] int 
  9650 ;;  divisor         2    2[COMRAM] int 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  quotient        2    6[COMRAM] int 
  9653 ;;  sign            1    5[COMRAM] unsigned char 
  9654 ;;  counter         1    4[COMRAM] unsigned char 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  2    0[COMRAM] int 
  9657 ;; Registers used:
  9658 ;;		wreg, status,2, status,0
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9665 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9667 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9668 ;;Total ram usage:        8 bytes
  9669 ;; Hardware stack levels used: 1
  9670 ;; Hardware stack levels required when called: 1
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_vfpfcnvrt
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text44
  9679   002674                     __ptext44:
  9680                           	callstack 0
  9681   002674                     ___awdiv:
  9682                           	callstack 24
  9683   002674  0E00               	movlw	0
  9684   002676  6E06               	movwf	___awdiv@sign^0,c
  9685   002678  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9686   00267A  EF43  F013         	goto	u3360
  9687   00267E  EF41  F013         	goto	u3361
  9688   002682                     u3361:
  9689   002682  EF49  F013         	goto	l4648
  9690   002686                     u3360:
  9691   002686  6C03               	negf	___awdiv@divisor^0,c
  9692   002688  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9693   00268A  B0D8               	btfsc	status,0,c
  9694   00268C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9695   00268E  0E01               	movlw	1
  9696   002690  6E06               	movwf	___awdiv@sign^0,c
  9697   002692                     l4648:
  9698   002692  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9699   002694  EF50  F013         	goto	u3370
  9700   002698  EF4E  F013         	goto	u3371
  9701   00269C                     u3371:
  9702   00269C  EF56  F013         	goto	l4654
  9703   0026A0                     u3370:
  9704   0026A0  6C01               	negf	___awdiv@dividend^0,c
  9705   0026A2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9706   0026A4  B0D8               	btfsc	status,0,c
  9707   0026A6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9708   0026A8  0E01               	movlw	1
  9709   0026AA  1A06               	xorwf	___awdiv@sign^0,f,c
  9710   0026AC                     l4654:
  9711   0026AC  0E00               	movlw	0
  9712   0026AE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9713   0026B0  0E00               	movlw	0
  9714   0026B2  6E07               	movwf	___awdiv@quotient^0,c
  9715   0026B4  5003               	movf	___awdiv@divisor^0,w,c
  9716   0026B6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9717   0026B8  B4D8               	btfsc	status,2,c
  9718   0026BA  EF61  F013         	goto	u3381
  9719   0026BE  EF63  F013         	goto	u3380
  9720   0026C2                     u3381:
  9721   0026C2  EF8B  F013         	goto	l4676
  9722   0026C6                     u3380:
  9723   0026C6  0E01               	movlw	1
  9724   0026C8  6E05               	movwf	___awdiv@counter^0,c
  9725   0026CA  EF6B  F013         	goto	l4662
  9726   0026CE                     l4660:
  9727   0026CE  90D8               	bcf	status,0,c
  9728   0026D0  3603               	rlcf	___awdiv@divisor^0,f,c
  9729   0026D2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9730   0026D4  2A05               	incf	___awdiv@counter^0,f,c
  9731   0026D6                     l4662:
  9732   0026D6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9733   0026D8  EF70  F013         	goto	u3391
  9734   0026DC  EF72  F013         	goto	u3390
  9735   0026E0                     u3391:
  9736   0026E0  EF67  F013         	goto	l4660
  9737   0026E4                     u3390:
  9738   0026E4                     l4664:
  9739   0026E4  90D8               	bcf	status,0,c
  9740   0026E6  3607               	rlcf	___awdiv@quotient^0,f,c
  9741   0026E8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9742   0026EA  5003               	movf	___awdiv@divisor^0,w,c
  9743   0026EC  5C01               	subwf	___awdiv@dividend^0,w,c
  9744   0026EE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9745   0026F0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9746   0026F2  A0D8               	btfss	status,0,c
  9747   0026F4  EF7E  F013         	goto	u3401
  9748   0026F8  EF80  F013         	goto	u3400
  9749   0026FC                     u3401:
  9750   0026FC  EF85  F013         	goto	l4672
  9751   002700                     u3400:
  9752   002700  5003               	movf	___awdiv@divisor^0,w,c
  9753   002702  5E01               	subwf	___awdiv@dividend^0,f,c
  9754   002704  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9755   002706  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9756   002708  8007               	bsf	___awdiv@quotient^0,0,c
  9757   00270A                     l4672:
  9758   00270A  90D8               	bcf	status,0,c
  9759   00270C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9760   00270E  3203               	rrcf	___awdiv@divisor^0,f,c
  9761   002710  2E05               	decfsz	___awdiv@counter^0,f,c
  9762   002712  EF72  F013         	goto	l4664
  9763   002716                     l4676:
  9764   002716  5006               	movf	___awdiv@sign^0,w,c
  9765   002718  B4D8               	btfsc	status,2,c
  9766   00271A  EF91  F013         	goto	u3411
  9767   00271E  EF93  F013         	goto	u3410
  9768   002722                     u3411:
  9769   002722  EF97  F013         	goto	l4680
  9770   002726                     u3410:
  9771   002726  6C07               	negf	___awdiv@quotient^0,c
  9772   002728  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9773   00272A  B0D8               	btfsc	status,0,c
  9774   00272C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9775   00272E                     l4680:
  9776   00272E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9777   002732  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9778   002736  0012               	return		;funcret
  9779   002738                     __end_of___awdiv:
  9780                           	callstack 0
  9781                           
  9782 ;; *************** function _memset *****************
  9783 ;; Defined at:
  9784 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;  dest            1    0[COMRAM] PTR void 
  9787 ;;		 -> LCD4Bit_voidSendNumber@Number(6), 
  9788 ;;  c               2    1[COMRAM] int 
  9789 ;;  n               2    3[COMRAM] unsigned int 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  p               1    5[COMRAM] PTR unsigned char 
  9792 ;;		 -> LCD4Bit_voidSendNumber@Number(6), 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      PTR void 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9802 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;Total ram usage:        6 bytes
  9807 ;; Hardware stack levels used: 1
  9808 ;; Hardware stack levels required when called: 1
  9809 ;; This function calls:
  9810 ;;		Nothing
  9811 ;; This function is called by:
  9812 ;;		_LCD4Bit_voidSendNumber
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text45
  9817   003724                     __ptext45:
  9818                           	callstack 0
  9819   003724                     _memset:
  9820                           	callstack 27
  9821   003724  C001  F006         	movff	memset@dest,memset@p
  9822   003728  EF9C  F01B         	goto	l4866
  9823   00372C                     l4862:
  9824   00372C  5006               	movf	memset@p^0,w,c
  9825   00372E  6ED9               	movwf	fsr2l,c
  9826   003730  6ADA               	clrf	fsr2h,c
  9827   003732  C002  FFDF         	movff	memset@c,indf2
  9828   003736  2A06               	incf	memset@p^0,f,c
  9829   003738                     l4866:
  9830   003738  0604               	decf	memset@n^0,f,c
  9831   00373A  A0D8               	btfss	status,0,c
  9832   00373C  0605               	decf	(memset@n+1)^0,f,c
  9833   00373E  2804               	incf	memset@n^0,w,c
  9834   003740  E106               	bnz	u3701
  9835   003742  2805               	incf	(memset@n+1)^0,w,c
  9836   003744  A4D8               	btfss	status,2,c
  9837   003746  EFA7  F01B         	goto	u3701
  9838   00374A  EFA9  F01B         	goto	u3700
  9839   00374E                     u3701:
  9840   00374E  EF96  F01B         	goto	l4862
  9841   003752                     u3700:
  9842   003752  0012               	return		;funcret
  9843   003754                     __end_of_memset:
  9844                           	callstack 0
  9845                           
  9846 ;; *************** function _LCD4Bit_voidSendString_Pos *****************
  9847 ;; Defined at:
  9848 ;;		line 80 in file "HAL/LCD/LCD_program.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  Copy_stLCD4B    1   17[COMRAM] PTR struct .
  9851 ;;		 -> LCD_1(7), 
  9852 ;;  Copy_u8Row      1   18[COMRAM] unsigned char 
  9853 ;;  Copy_u8Colum    1   19[COMRAM] unsigned char 
  9854 ;;  Copy_Pu8Str     2   20[COMRAM] PTR unsigned char 
  9855 ;;		 -> LCD4Bit_voidSendNumber@Number(6), STR_37(9), STR_36(5), STR_35(7), 
  9856 ;;		 -> STR_34(7), STR_33(15), STR_32(5), STR_31(8), 
  9857 ;;		 -> STR_30(16), STR_29(9), STR_28(15), STR_27(8), 
  9858 ;;		 -> STR_26(8), STR_25(6), STR_24(9), STR_23(12), 
  9859 ;;		 -> STR_22(17), STR_21(3), STR_20(6), STR_19(11), 
  9860 ;;		 -> STR_18(10), STR_17(3), STR_16(6), STR_15(13), 
  9861 ;;		 -> STR_14(12), STR_13(5), STR_12(6), STR_11(8), 
  9862 ;;		 -> STR_10(17), STR_9(17), STR_8(11), STR_7(16), 
  9863 ;;		 -> STR_6(17), STR_5(18), STR_4(13), STR_3(21), 
  9864 ;;		 -> STR_2(12), STR_1(17), 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      void 
  9869 ;; Registers used:
  9870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9876 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;Total ram usage:        5 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; Hardware stack levels required when called: 5
  9883 ;; This function calls:
  9884 ;;		_LCD4Bit_voidSendString
  9885 ;;		_LCD_voidSetCursorPos_4Bit
  9886 ;; This function is called by:
  9887 ;;		_main
  9888 ;;		_App_SetTemperature
  9889 ;;		_LCD_ChoisePrint
  9890 ;;		_LCD4Bit_voidSendNumber
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text46
  9895   00382E                     __ptext46:
  9896                           	callstack 0
  9897   00382E                     _LCD4Bit_voidSendString_Pos:
  9898                           	callstack 24
  9899   00382E                     
  9900                           ;HAL/LCD/LCD_program.c: 80: void LCD4Bit_voidSendString_Pos(LCD_4_BIT_T *Copy_stLCD4Bit,
      +                           u8 Copy_u8Row, u8 Copy_u8Column, u8 *Copy_Pu8Str);HAL/LCD/LCD_program.c: 81: {;HAL/LCD/
      +                          LCD_program.c: 82:     LCD_voidSetCursorPos_4Bit(Copy_stLCD4Bit, Copy_u8Row, Copy_u8Colu
      +                          mn);
  9901   00382E  C012  F00D         	movff	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit,LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bi
      +                          t
  9902   003832  C013  F00E         	movff	LCD4Bit_voidSendString_Pos@Copy_u8Row,LCD_voidSetCursorPos_4Bit@Copy_u8Row
  9903   003836  C014  F00F         	movff	LCD4Bit_voidSendString_Pos@Copy_u8Column,LCD_voidSetCursorPos_4Bit@Copy_u8Column
  9904   00383A  EC02  F017         	call	_LCD_voidSetCursorPos_4Bit	;wreg free
  9905   00383E                     
  9906                           ;HAL/LCD/LCD_program.c: 83:     LCD4Bit_voidSendString(Copy_stLCD4Bit, Copy_Pu8Str);
  9907   00383E  C012  F00D         	movff	LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit,LCD4Bit_voidSendString@Copy_stLCD4Bit
  9908   003842  C015  F00E         	movff	LCD4Bit_voidSendString_Pos@Copy_Pu8Str,LCD4Bit_voidSendString@Copy_Pu8Str
  9909   003846  C016  F00F         	movff	LCD4Bit_voidSendString_Pos@Copy_Pu8Str+1,LCD4Bit_voidSendString@Copy_Pu8Str+1
  9910   00384A  ECE1  F018         	call	_LCD4Bit_voidSendString	;wreg free
  9911   00384E  0012               	return		;funcret
  9912   003850                     __end_of_LCD4Bit_voidSendString_Pos:
  9913                           	callstack 0
  9914                           
  9915 ;; *************** function _LCD_voidSetCursorPos_4Bit *****************
  9916 ;; Defined at:
  9917 ;;		line 205 in file "HAL/LCD/LCD_program.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  Copy_stLCD4B    1   12[COMRAM] PTR struct .
  9920 ;;		 -> LCD_1(7), 
  9921 ;;  Copy_u8Row      1   13[COMRAM] unsigned char 
  9922 ;;  Copy_u8Colum    1   14[COMRAM] unsigned char 
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9934 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;Total ram usage:        5 bytes
  9939 ;; Hardware stack levels used: 1
  9940 ;; Hardware stack levels required when called: 4
  9941 ;; This function calls:
  9942 ;;		_LCD4Bit_voidSendCommand
  9943 ;; This function is called by:
  9944 ;;		_main
  9945 ;;		_App_SetTemperature
  9946 ;;		_LCD_ChoisePrint
  9947 ;;		_LCD4Bit_voidSendChar_Pos
  9948 ;;		_LCD4Bit_voidSendString_Pos
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text47
  9953   002E04                     __ptext47:
  9954                           	callstack 0
  9955   002E04                     _LCD_voidSetCursorPos_4Bit:
  9956                           	callstack 26
  9957   002E04                     
  9958                           ;HAL/LCD/LCD_program.c: 205: void LCD_voidSetCursorPos_4Bit(LCD_4_BIT_T *Copy_stLCD4Bit,
      +                           u8 Copy_u8Row, u8 Copy_u8Column);HAL/LCD/LCD_program.c: 206: {;HAL/LCD/LCD_program.c: 2
      +                          07:     Copy_u8Column--;
  9959   002E04  060F               	decf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,f,c
  9960                           
  9961                           ;HAL/LCD/LCD_program.c: 208:     switch (Copy_u8Row)
  9962   002E06  EF29  F017         	goto	l4804
  9963   002E0A                     l4794:
  9964                           
  9965                           ;HAL/LCD/LCD_program.c: 211:         LCD4Bit_voidSendCommand(Copy_stLCD4Bit, (0x80 + Cop
      +                          y_u8Column));
  9966   002E0A  C00D  F00B         	movff	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  9967   002E0E  500F               	movf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,w,c
  9968   002E10  0F80               	addlw	128
  9969   002E12  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  9970   002E14  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  9971                           
  9972                           ;HAL/LCD/LCD_program.c: 212:         break;
  9973   002E18  EF46  F017         	goto	l416
  9974   002E1C                     l4796:
  9975                           
  9976                           ;HAL/LCD/LCD_program.c: 214:         LCD4Bit_voidSendCommand(Copy_stLCD4Bit, (0xc0 + Cop
      +                          y_u8Column));
  9977   002E1C  C00D  F00B         	movff	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  9978   002E20  500F               	movf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,w,c
  9979   002E22  0FC0               	addlw	192
  9980   002E24  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  9981   002E26  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  9982                           
  9983                           ;HAL/LCD/LCD_program.c: 215:         break;
  9984   002E2A  EF46  F017         	goto	l416
  9985   002E2E                     l4798:
  9986                           
  9987                           ;HAL/LCD/LCD_program.c: 217:         LCD4Bit_voidSendCommand(Copy_stLCD4Bit, (0x94 + Cop
      +                          y_u8Column));
  9988   002E2E  C00D  F00B         	movff	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
  9989   002E32  500F               	movf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,w,c
  9990   002E34  0F94               	addlw	148
  9991   002E36  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
  9992   002E38  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
  9993                           
  9994                           ;HAL/LCD/LCD_program.c: 218:         break;
  9995   002E3C  EF46  F017         	goto	l416
  9996   002E40                     l4800:
  9997                           
  9998                           ;HAL/LCD/LCD_program.c: 220:         LCD4Bit_voidSendCommand(Copy_stLCD4Bit, (0xd4 + Cop
      +                          y_u8Column));
  9999   002E40  C00D  F00B         	movff	LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit,LCD4Bit_voidSendCommand@Copy_stLCD4Bit
 10000   002E44  500F               	movf	LCD_voidSetCursorPos_4Bit@Copy_u8Column^0,w,c
 10001   002E46  0FD4               	addlw	212
 10002   002E48  6E0C               	movwf	LCD4Bit_voidSendCommand@Copy_u8Command^0,c
 10003   002E4A  EC50  F01A         	call	_LCD4Bit_voidSendCommand	;wreg free
 10004                           
 10005                           ;HAL/LCD/LCD_program.c: 221:         break;
 10006   002E4E  EF46  F017         	goto	l416
 10007   002E52                     l4804:
 10008   002E52  500E               	movf	LCD_voidSetCursorPos_4Bit@Copy_u8Row^0,w,c
 10009   002E54  6E10               	movwf	??_LCD_voidSetCursorPos_4Bit^0,c
 10010   002E56  6A11               	clrf	(??_LCD_voidSetCursorPos_4Bit+1)^0,c
 10011                           
 10012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10013                           ; Switch size 1, requested type "simple"
 10014                           ; Number of cases is 1, Range of values is 0 to 0
 10015                           ; switch strategies available:
 10016                           ; Name         Instructions Cycles
 10017                           ; simple_byte            4     3 (average)
 10018                           ;	Chosen strategy is simple_byte
 10019   002E58  5011               	movf	(??_LCD_voidSetCursorPos_4Bit+1)^0,w,c
 10020   002E5A  0A00               	xorlw	0	; case 0
 10021   002E5C  B4D8               	btfsc	status,2,c
 10022   002E5E  EF33  F017         	goto	l7218
 10023   002E62  EF46  F017         	goto	l416
 10024   002E66                     l7218:
 10025                           
 10026                           ; Switch size 1, requested type "simple"
 10027                           ; Number of cases is 4, Range of values is 1 to 4
 10028                           ; switch strategies available:
 10029                           ; Name         Instructions Cycles
 10030                           ; simple_byte           13     7 (average)
 10031                           ;	Chosen strategy is simple_byte
 10032   002E66  5010               	movf	??_LCD_voidSetCursorPos_4Bit^0,w,c
 10033   002E68  0A01               	xorlw	1	; case 1
 10034   002E6A  B4D8               	btfsc	status,2,c
 10035   002E6C  EF05  F017         	goto	l4794
 10036   002E70  0A03               	xorlw	3	; case 2
 10037   002E72  B4D8               	btfsc	status,2,c
 10038   002E74  EF0E  F017         	goto	l4796
 10039   002E78  0A01               	xorlw	1	; case 3
 10040   002E7A  B4D8               	btfsc	status,2,c
 10041   002E7C  EF17  F017         	goto	l4798
 10042   002E80  0A07               	xorlw	7	; case 4
 10043   002E82  B4D8               	btfsc	status,2,c
 10044   002E84  EF20  F017         	goto	l4800
 10045   002E88  EF46  F017         	goto	l416
 10046   002E8C                     l416:
 10047   002E8C  0012               	return		;funcret
 10048   002E8E                     __end_of_LCD_voidSetCursorPos_4Bit:
 10049                           	callstack 0
 10050                           
 10051 ;; *************** function _LCD4Bit_voidSendCommand *****************
 10052 ;; Defined at:
 10053 ;;		line 43 in file "HAL/LCD/LCD_program.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  Copy_stLCD4B    1   10[COMRAM] PTR struct .
 10056 ;;		 -> LCD_1(7), 
 10057 ;;  Copy_u8Comma    1   11[COMRAM] unsigned char 
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;Total ram usage:        2 bytes
 10074 ;; Hardware stack levels used: 1
 10075 ;; Hardware stack levels required when called: 3
 10076 ;; This function calls:
 10077 ;;		_GPIO_VoidSetPinMode
 10078 ;;		_LCD_voidSend4bit
 10079 ;;		_LCD_voidSendEnable_4Bit
 10080 ;; This function is called by:
 10081 ;;		_main
 10082 ;;		_App_SetTemperature
 10083 ;;		_LCD_ChoisePrint
 10084 ;;		_LCD4Bit_voidLCD_Init
 10085 ;;		_LCD_voidSetCursorPos_4Bit
 10086 ;;		_LCD4Bit_voidSendCustomChar
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text48
 10091   0034A0                     __ptext48:
 10092                           	callstack 0
 10093   0034A0                     _LCD4Bit_voidSendCommand:
 10094                           	callstack 26
 10095   0034A0                     
 10096                           ;HAL/LCD/LCD_program.c: 43: void LCD4Bit_voidSendCommand(LCD_4_BIT_T *Copy_stLCD4Bit, u8
      +                           Copy_u8Command);HAL/LCD/LCD_program.c: 44: {;HAL/LCD/LCD_program.c: 45:     GPIO_VoidSe
      +                          tPinMode(Copy_stLCD4Bit->LCD_RS.Port, Copy_stLCD4Bit->LCD_RS.Pin, 0);
 10097   0034A0  500B               	movf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,w,c
 10098   0034A2  6ED9               	movwf	fsr2l,c
 10099   0034A4  6ADA               	clrf	fsr2h,c
 10100   0034A6  30DF               	rrcf	223,w,c
 10101   0034A8  32E8               	rrcf	wreg,f,c
 10102   0034AA  32E8               	rrcf	wreg,f,c
 10103   0034AC  0B07               	andlw	7
 10104   0034AE  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10105   0034B0  0E00               	movlw	0
 10106   0034B2  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10107   0034B4  500B               	movf	LCD4Bit_voidSendCommand@Copy_stLCD4Bit^0,w,c
 10108   0034B6  6ED9               	movwf	fsr2l,c
 10109   0034B8  6ADA               	clrf	fsr2h,c
 10110   0034BA  50DF               	movf	223,w,c
 10111   0034BC  0B07               	andlw	7
 10112   0034BE  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10113                           
 10114                           ;HAL/LCD/LCD_program.c: 46:     LCD_voidSend4bit(Copy_stLCD4Bit, Copy_u8Command >> 4);
 10115   0034C2  C00B  F009         	movff	LCD4Bit_voidSendCommand@Copy_stLCD4Bit,LCD_voidSend4bit@Copy_stLCD4Bit
 10116   0034C6  380C               	swapf	LCD4Bit_voidSendCommand@Copy_u8Command^0,w,c
 10117   0034C8  0B0F               	andlw	15
 10118   0034CA  6E0A               	movwf	LCD_voidSend4bit@Copy_u8Command_Data^0,c
 10119   0034CC  EC58  F014         	call	_LCD_voidSend4bit	;wreg free
 10120                           
 10121                           ;HAL/LCD/LCD_program.c: 47:     LCD_voidSendEnable_4Bit(Copy_stLCD4Bit);
 10122   0034D0  C00B  F009         	movff	LCD4Bit_voidSendCommand@Copy_stLCD4Bit,LCD_voidSendEnable_4Bit@Copy_stLCD4Bit
 10123   0034D4  EC15  F019         	call	_LCD_voidSendEnable_4Bit	;wreg free
 10124                           
 10125                           ;HAL/LCD/LCD_program.c: 48:     LCD_voidSend4bit(Copy_stLCD4Bit, Copy_u8Command);
 10126   0034D8  C00B  F009         	movff	LCD4Bit_voidSendCommand@Copy_stLCD4Bit,LCD_voidSend4bit@Copy_stLCD4Bit
 10127   0034DC  C00C  F00A         	movff	LCD4Bit_voidSendCommand@Copy_u8Command,LCD_voidSend4bit@Copy_u8Command_Data
 10128   0034E0  EC58  F014         	call	_LCD_voidSend4bit	;wreg free
 10129                           
 10130                           ;HAL/LCD/LCD_program.c: 49:     LCD_voidSendEnable_4Bit(Copy_stLCD4Bit);
 10131   0034E4  C00B  F009         	movff	LCD4Bit_voidSendCommand@Copy_stLCD4Bit,LCD_voidSendEnable_4Bit@Copy_stLCD4Bit
 10132   0034E8  EC15  F019         	call	_LCD_voidSendEnable_4Bit	;wreg free
 10133   0034EC  0012               	return		;funcret
 10134   0034EE                     __end_of_LCD4Bit_voidSendCommand:
 10135                           	callstack 0
 10136                           
 10137 ;; *************** function _LCD4Bit_voidSendString *****************
 10138 ;; Defined at:
 10139 ;;		line 70 in file "HAL/LCD/LCD_program.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  Copy_stLCD4B    1   12[COMRAM] PTR struct .
 10142 ;;		 -> LCD_1(7), 
 10143 ;;  Copy_Pu8Str     2   13[COMRAM] PTR unsigned char 
 10144 ;;		 -> LCD4Bit_voidSendNumber@Number(6), STR_37(9), STR_36(5), STR_35(7), 
 10145 ;;		 -> STR_34(7), STR_33(15), STR_32(5), STR_31(8), 
 10146 ;;		 -> STR_30(16), STR_29(9), STR_28(15), STR_27(8), 
 10147 ;;		 -> STR_26(8), STR_25(6), STR_24(9), STR_23(12), 
 10148 ;;		 -> STR_22(17), STR_21(3), STR_20(6), STR_19(11), 
 10149 ;;		 -> STR_18(10), STR_17(3), STR_16(6), STR_15(13), 
 10150 ;;		 -> STR_14(12), STR_13(5), STR_12(6), STR_11(8), 
 10151 ;;		 -> STR_10(17), STR_9(17), STR_8(11), STR_7(16), 
 10152 ;;		 -> STR_6(17), STR_5(18), STR_4(13), STR_3(21), 
 10153 ;;		 -> STR_2(12), STR_1(17), 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10168 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10169 ;;Total ram usage:        3 bytes
 10170 ;; Hardware stack levels used: 1
 10171 ;; Hardware stack levels required when called: 4
 10172 ;; This function calls:
 10173 ;;		_LCD4Bit_voidSendChar
 10174 ;; This function is called by:
 10175 ;;		_LCD4Bit_voidSendString_Pos
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text49
 10180   0031C2                     __ptext49:
 10181                           	callstack 0
 10182   0031C2                     _LCD4Bit_voidSendString:
 10183                           	callstack 24
 10184   0031C2                     
 10185                           ;HAL/LCD/LCD_program.c: 70: void LCD4Bit_voidSendString(LCD_4_BIT_T *Copy_stLCD4Bit, u8 
      +                          *Copy_Pu8Str);HAL/LCD/LCD_program.c: 71: {;HAL/LCD/LCD_program.c: 72:     while ('\0' !=
      +                           *(Copy_Pu8Str))
 10186   0031C2  EFFB  F018         	goto	l4816
 10187   0031C6                     l4812:
 10188                           
 10189                           ;HAL/LCD/LCD_program.c: 73:     {;HAL/LCD/LCD_program.c: 74:         LCD4Bit_voidSendCha
      +                          r(Copy_stLCD4Bit, *(Copy_Pu8Str));
 10190   0031C6  C00D  F00B         	movff	LCD4Bit_voidSendString@Copy_stLCD4Bit,LCD4Bit_voidSendChar@Copy_stLCD4Bit
 10191   0031CA  C00E  FFF6         	movff	LCD4Bit_voidSendString@Copy_Pu8Str,tblptrl
 10192   0031CE  C00F  FFF7         	movff	LCD4Bit_voidSendString@Copy_Pu8Str+1,tblptrh
 10193   0031D2  0E00               	movlw	low (__mediumconst shr (0+16))
 10194   0031D4  6EF8               	movwf	tblptru,c
 10195   0031D6  0E0F               	movlw	(high __ramtop+-1)
 10196   0031D8  64F7               	cpfsgt	tblptrh,c
 10197   0031DA  D003               	bra	u3637
 10198   0031DC  0008               	tblrd		*
 10199   0031DE  50F5               	movf	tablat,w,c
 10200   0031E0  D005               	bra	u3630
 10201   0031E2                     u3637:
 10202   0031E2  CFF6 FFE9          	movff	tblptrl,fsr0l
 10203   0031E6  CFF7 FFEA          	movff	tblptrh,fsr0h
 10204   0031EA  50EF               	movf	indf0,w,c
 10205   0031EC                     u3630:
 10206   0031EC  6E0C               	movwf	LCD4Bit_voidSendChar@Copy_u8Char^0,c
 10207   0031EE  EC77  F01A         	call	_LCD4Bit_voidSendChar	;wreg free
 10208   0031F2                     
 10209                           ;HAL/LCD/LCD_program.c: 75:         Copy_Pu8Str++;
 10210   0031F2  4A0E               	infsnz	LCD4Bit_voidSendString@Copy_Pu8Str^0,f,c
 10211   0031F4  2A0F               	incf	(LCD4Bit_voidSendString@Copy_Pu8Str+1)^0,f,c
 10212   0031F6                     l4816:
 10213                           
 10214                           ;HAL/LCD/LCD_program.c: 72:     while ('\0' != *(Copy_Pu8Str))
 10215   0031F6  C00E  FFF6         	movff	LCD4Bit_voidSendString@Copy_Pu8Str,tblptrl
 10216   0031FA  C00F  FFF7         	movff	LCD4Bit_voidSendString@Copy_Pu8Str+1,tblptrh
 10217   0031FE  0E00               	movlw	low (__mediumconst shr (0+16))
 10218   003200  6EF8               	movwf	tblptru,c
 10219   003202  0E0F               	movlw	(high __ramtop+-1)
 10220   003204  64F7               	cpfsgt	tblptrh,c
 10221   003206  D003               	bra	u3647
 10222   003208  0008               	tblrd		*
 10223   00320A  50F5               	movf	tablat,w,c
 10224   00320C  D005               	bra	u3640
 10225   00320E                     u3647:
 10226   00320E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10227   003212  CFF7 FFEA          	movff	tblptrh,fsr0h
 10228   003216  50EF               	movf	indf0,w,c
 10229   003218                     u3640:
 10230   003218  0900               	iorlw	0
 10231   00321A  A4D8               	btfss	status,2,c
 10232   00321C  EF12  F019         	goto	u3651
 10233   003220  EF14  F019         	goto	u3650
 10234   003224                     u3651:
 10235   003224  EFE3  F018         	goto	l4812
 10236   003228                     u3650:
 10237   003228  0012               	return		;funcret
 10238   00322A                     __end_of_LCD4Bit_voidSendString:
 10239                           	callstack 0
 10240                           
 10241 ;; *************** function _LCD4Bit_voidSendChar *****************
 10242 ;; Defined at:
 10243 ;;		line 53 in file "HAL/LCD/LCD_program.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;  Copy_stLCD4B    1   10[COMRAM] PTR struct .
 10246 ;;		 -> LCD_1(7), 
 10247 ;;  Copy_u8Char     1   11[COMRAM] unsigned char 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;		None
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  1    wreg      void 
 10252 ;; Registers used:
 10253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;Total ram usage:        2 bytes
 10264 ;; Hardware stack levels used: 1
 10265 ;; Hardware stack levels required when called: 3
 10266 ;; This function calls:
 10267 ;;		_GPIO_VoidSetPinMode
 10268 ;;		_LCD_voidSend4bit
 10269 ;;		_LCD_voidSendEnable_4Bit
 10270 ;; This function is called by:
 10271 ;;		_LCD4Bit_voidSendChar_Pos
 10272 ;;		_LCD4Bit_voidSendString
 10273 ;;		_LCD4Bit_voidSendCustomChar
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text50
 10278   0034EE                     __ptext50:
 10279                           	callstack 0
 10280   0034EE                     _LCD4Bit_voidSendChar:
 10281                           	callstack 24
 10282   0034EE                     
 10283                           ;HAL/LCD/LCD_program.c: 53: void LCD4Bit_voidSendChar(LCD_4_BIT_T *Copy_stLCD4Bit, u8 Co
      +                          py_u8Char);HAL/LCD/LCD_program.c: 54: {;HAL/LCD/LCD_program.c: 55:     GPIO_VoidSetPinMo
      +                          de(Copy_stLCD4Bit->LCD_RS.Port, Copy_stLCD4Bit->LCD_RS.Pin, 1);
 10284   0034EE  500B               	movf	LCD4Bit_voidSendChar@Copy_stLCD4Bit^0,w,c
 10285   0034F0  6ED9               	movwf	fsr2l,c
 10286   0034F2  6ADA               	clrf	fsr2h,c
 10287   0034F4  30DF               	rrcf	223,w,c
 10288   0034F6  32E8               	rrcf	wreg,f,c
 10289   0034F8  32E8               	rrcf	wreg,f,c
 10290   0034FA  0B07               	andlw	7
 10291   0034FC  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10292   0034FE  0E01               	movlw	1
 10293   003500  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10294   003502  500B               	movf	LCD4Bit_voidSendChar@Copy_stLCD4Bit^0,w,c
 10295   003504  6ED9               	movwf	fsr2l,c
 10296   003506  6ADA               	clrf	fsr2h,c
 10297   003508  50DF               	movf	223,w,c
 10298   00350A  0B07               	andlw	7
 10299   00350C  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10300                           
 10301                           ;HAL/LCD/LCD_program.c: 56:     LCD_voidSend4bit(Copy_stLCD4Bit, Copy_u8Char >> 4);
 10302   003510  C00B  F009         	movff	LCD4Bit_voidSendChar@Copy_stLCD4Bit,LCD_voidSend4bit@Copy_stLCD4Bit
 10303   003514  380C               	swapf	LCD4Bit_voidSendChar@Copy_u8Char^0,w,c
 10304   003516  0B0F               	andlw	15
 10305   003518  6E0A               	movwf	LCD_voidSend4bit@Copy_u8Command_Data^0,c
 10306   00351A  EC58  F014         	call	_LCD_voidSend4bit	;wreg free
 10307                           
 10308                           ;HAL/LCD/LCD_program.c: 57:     LCD_voidSendEnable_4Bit(Copy_stLCD4Bit);
 10309   00351E  C00B  F009         	movff	LCD4Bit_voidSendChar@Copy_stLCD4Bit,LCD_voidSendEnable_4Bit@Copy_stLCD4Bit
 10310   003522  EC15  F019         	call	_LCD_voidSendEnable_4Bit	;wreg free
 10311                           
 10312                           ;HAL/LCD/LCD_program.c: 58:     LCD_voidSend4bit(Copy_stLCD4Bit, Copy_u8Char);
 10313   003526  C00B  F009         	movff	LCD4Bit_voidSendChar@Copy_stLCD4Bit,LCD_voidSend4bit@Copy_stLCD4Bit
 10314   00352A  C00C  F00A         	movff	LCD4Bit_voidSendChar@Copy_u8Char,LCD_voidSend4bit@Copy_u8Command_Data
 10315   00352E  EC58  F014         	call	_LCD_voidSend4bit	;wreg free
 10316                           
 10317                           ;HAL/LCD/LCD_program.c: 59:     LCD_voidSendEnable_4Bit(Copy_stLCD4Bit);
 10318   003532  C00B  F009         	movff	LCD4Bit_voidSendChar@Copy_stLCD4Bit,LCD_voidSendEnable_4Bit@Copy_stLCD4Bit
 10319   003536  EC15  F019         	call	_LCD_voidSendEnable_4Bit	;wreg free
 10320   00353A  0012               	return		;funcret
 10321   00353C                     __end_of_LCD4Bit_voidSendChar:
 10322                           	callstack 0
 10323                           
 10324 ;; *************** function _LCD_voidSendEnable_4Bit *****************
 10325 ;; Defined at:
 10326 ;;		line 167 in file "HAL/LCD/LCD_program.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  Copy_stLCD4B    1    8[COMRAM] PTR struct .
 10329 ;;		 -> LCD_1(7), 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;		None
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  1    wreg      void 
 10334 ;; Registers used:
 10335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10341 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;Total ram usage:        1 bytes
 10346 ;; Hardware stack levels used: 1
 10347 ;; Hardware stack levels required when called: 2
 10348 ;; This function calls:
 10349 ;;		_GPIO_VoidSetPinMode
 10350 ;; This function is called by:
 10351 ;;		_LCD4Bit_voidSendCommand
 10352 ;;		_LCD4Bit_voidSendChar
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text51
 10357   00322A                     __ptext51:
 10358                           	callstack 0
 10359   00322A                     _LCD_voidSendEnable_4Bit:
 10360                           	callstack 26
 10361   00322A                     
 10362                           ;HAL/LCD/LCD_program.c: 167: static void LCD_voidSendEnable_4Bit(LCD_4_BIT_T *Copy_stLCD
      +                          4Bit);HAL/LCD/LCD_program.c: 168: {;HAL/LCD/LCD_program.c: 169:     GPIO_VoidSetPinMode(
      +                          Copy_stLCD4Bit->LCD_EN.Port, Copy_stLCD4Bit->LCD_EN.Pin, 1);
 10363   00322A  5009               	movf	LCD_voidSendEnable_4Bit@Copy_stLCD4Bit^0,w,c
 10364   00322C  6ED9               	movwf	fsr2l,c
 10365   00322E  6ADA               	clrf	fsr2h,c
 10366   003230  0E02               	movlw	2
 10367   003232  26D9               	addwf	fsr2l,f,c
 10368   003234  30DF               	rrcf	223,w,c
 10369   003236  32E8               	rrcf	wreg,f,c
 10370   003238  32E8               	rrcf	wreg,f,c
 10371   00323A  0B07               	andlw	7
 10372   00323C  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10373   00323E  0E01               	movlw	1
 10374   003240  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10375   003242  5009               	movf	LCD_voidSendEnable_4Bit@Copy_stLCD4Bit^0,w,c
 10376   003244  6ED9               	movwf	fsr2l,c
 10377   003246  6ADA               	clrf	fsr2h,c
 10378   003248  0E02               	movlw	2
 10379   00324A  26D9               	addwf	fsr2l,f,c
 10380   00324C  50DF               	movf	223,w,c
 10381   00324E  0B07               	andlw	7
 10382   003250  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10383   003254                     
 10384                           ;HAL/LCD/LCD_program.c: 170:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10385   003254  0E06               	movlw	6
 10386   003256                     u6547:
 10387   003256  2EE8               	decfsz	wreg,f,c
 10388   003258  D7FE               	bra	u6547
 10389   00325A  D000               	nop2	
 10390   00325C                     
 10391                           ;HAL/LCD/LCD_program.c: 171:     GPIO_VoidSetPinMode(Copy_stLCD4Bit->LCD_EN.Port, Copy_s
      +                          tLCD4Bit->LCD_EN.Pin, 0);
 10392   00325C  5009               	movf	LCD_voidSendEnable_4Bit@Copy_stLCD4Bit^0,w,c
 10393   00325E  6ED9               	movwf	fsr2l,c
 10394   003260  6ADA               	clrf	fsr2h,c
 10395   003262  0E02               	movlw	2
 10396   003264  26D9               	addwf	fsr2l,f,c
 10397   003266  30DF               	rrcf	223,w,c
 10398   003268  32E8               	rrcf	wreg,f,c
 10399   00326A  32E8               	rrcf	wreg,f,c
 10400   00326C  0B07               	andlw	7
 10401   00326E  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10402   003270  0E00               	movlw	0
 10403   003272  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10404   003274  5009               	movf	LCD_voidSendEnable_4Bit@Copy_stLCD4Bit^0,w,c
 10405   003276  6ED9               	movwf	fsr2l,c
 10406   003278  6ADA               	clrf	fsr2h,c
 10407   00327A  0E02               	movlw	2
 10408   00327C  26D9               	addwf	fsr2l,f,c
 10409   00327E  50DF               	movf	223,w,c
 10410   003280  0B07               	andlw	7
 10411   003282  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10412                           
 10413                           ;HAL/LCD/LCD_program.c: 172:     _delay((unsigned long)((10)*(8000000/4000000.0)));
 10414   003286  0E06               	movlw	6
 10415   003288                     u6557:
 10416   003288  2EE8               	decfsz	wreg,f,c
 10417   00328A  D7FE               	bra	u6557
 10418   00328C  D000               	nop2	
 10419   00328E  0012               	return		;funcret
 10420   003290                     __end_of_LCD_voidSendEnable_4Bit:
 10421                           	callstack 0
 10422                           
 10423 ;; *************** function _LCD_voidSend4bit *****************
 10424 ;; Defined at:
 10425 ;;		line 159 in file "HAL/LCD/LCD_program.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  Copy_stLCD4B    1    8[COMRAM] PTR struct .
 10428 ;;		 -> LCD_1(7), 
 10429 ;;  Copy_u8Comma    1    9[COMRAM] unsigned char 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;Total ram usage:        2 bytes
 10446 ;; Hardware stack levels used: 1
 10447 ;; Hardware stack levels required when called: 2
 10448 ;; This function calls:
 10449 ;;		_GPIO_VoidSetPinMode
 10450 ;; This function is called by:
 10451 ;;		_LCD4Bit_voidSendCommand
 10452 ;;		_LCD4Bit_voidSendChar
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text52
 10457   0028B0                     __ptext52:
 10458                           	callstack 0
 10459   0028B0                     _LCD_voidSend4bit:
 10460                           	callstack 26
 10461   0028B0                     
 10462                           ;HAL/LCD/LCD_program.c: 159: static void LCD_voidSend4bit(LCD_4_BIT_T *Copy_stLCD4Bit, u
      +                          8 Copy_u8Command_Data);HAL/LCD/LCD_program.c: 160: {;HAL/LCD/LCD_program.c: 161:     GPI
      +                          O_VoidSetPinMode(Copy_stLCD4Bit->DataPin[0].Port, Copy_stLCD4Bit->DataPin[0].Pin, (Copy_
      +                          u8Command_Data >> 0) & (u8)0x01);
 10463   0028B0  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10464   0028B2  6ED9               	movwf	fsr2l,c
 10465   0028B4  6ADA               	clrf	fsr2h,c
 10466   0028B6  0E03               	movlw	3
 10467   0028B8  26D9               	addwf	fsr2l,f,c
 10468   0028BA  30DF               	rrcf	223,w,c
 10469   0028BC  32E8               	rrcf	wreg,f,c
 10470   0028BE  32E8               	rrcf	wreg,f,c
 10471   0028C0  0B07               	andlw	7
 10472   0028C2  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10473   0028C4  500A               	movf	LCD_voidSend4bit@Copy_u8Command_Data^0,w,c
 10474   0028C6  0B01               	andlw	1
 10475   0028C8  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10476   0028CA  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10477   0028CC  6ED9               	movwf	fsr2l,c
 10478   0028CE  6ADA               	clrf	fsr2h,c
 10479   0028D0  0E03               	movlw	3
 10480   0028D2  26D9               	addwf	fsr2l,f,c
 10481   0028D4  50DF               	movf	223,w,c
 10482   0028D6  0B07               	andlw	7
 10483   0028D8  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10484                           
 10485                           ;HAL/LCD/LCD_program.c: 162:     GPIO_VoidSetPinMode(Copy_stLCD4Bit->DataPin[1].Port, Co
      +                          py_stLCD4Bit->DataPin[1].Pin, (Copy_u8Command_Data >> 1) & (u8)0x01);
 10486   0028DC  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10487   0028DE  6ED9               	movwf	fsr2l,c
 10488   0028E0  6ADA               	clrf	fsr2h,c
 10489   0028E2  0E04               	movlw	4
 10490   0028E4  26D9               	addwf	fsr2l,f,c
 10491   0028E6  30DF               	rrcf	223,w,c
 10492   0028E8  32E8               	rrcf	wreg,f,c
 10493   0028EA  32E8               	rrcf	wreg,f,c
 10494   0028EC  0B07               	andlw	7
 10495   0028EE  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10496   0028F0  90D8               	bcf	status,0,c
 10497   0028F2  300A               	rrcf	LCD_voidSend4bit@Copy_u8Command_Data^0,w,c
 10498   0028F4  0B01               	andlw	1
 10499   0028F6  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10500   0028F8  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10501   0028FA  6ED9               	movwf	fsr2l,c
 10502   0028FC  6ADA               	clrf	fsr2h,c
 10503   0028FE  0E04               	movlw	4
 10504   002900  26D9               	addwf	fsr2l,f,c
 10505   002902  50DF               	movf	223,w,c
 10506   002904  0B07               	andlw	7
 10507   002906  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10508                           
 10509                           ;HAL/LCD/LCD_program.c: 163:     GPIO_VoidSetPinMode(Copy_stLCD4Bit->DataPin[2].Port, Co
      +                          py_stLCD4Bit->DataPin[2].Pin, (Copy_u8Command_Data >> 2) & (u8)0x01);
 10510   00290A  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10511   00290C  6ED9               	movwf	fsr2l,c
 10512   00290E  6ADA               	clrf	fsr2h,c
 10513   002910  0E05               	movlw	5
 10514   002912  26D9               	addwf	fsr2l,f,c
 10515   002914  30DF               	rrcf	223,w,c
 10516   002916  32E8               	rrcf	wreg,f,c
 10517   002918  32E8               	rrcf	wreg,f,c
 10518   00291A  0B07               	andlw	7
 10519   00291C  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10520   00291E  400A               	rrncf	LCD_voidSend4bit@Copy_u8Command_Data^0,w,c
 10521   002920  42E8               	rrncf	wreg,f,c
 10522   002922  0B3F               	andlw	63
 10523   002924  0B01               	andlw	1
 10524   002926  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10525   002928  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10526   00292A  6ED9               	movwf	fsr2l,c
 10527   00292C  6ADA               	clrf	fsr2h,c
 10528   00292E  0E05               	movlw	5
 10529   002930  26D9               	addwf	fsr2l,f,c
 10530   002932  50DF               	movf	223,w,c
 10531   002934  0B07               	andlw	7
 10532   002936  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10533                           
 10534                           ;HAL/LCD/LCD_program.c: 164:     GPIO_VoidSetPinMode(Copy_stLCD4Bit->DataPin[3].Port, Co
      +                          py_stLCD4Bit->DataPin[3].Pin, (Copy_u8Command_Data >> 3) & (u8)0x01);
 10535   00293A  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10536   00293C  6ED9               	movwf	fsr2l,c
 10537   00293E  6ADA               	clrf	fsr2h,c
 10538   002940  0E06               	movlw	6
 10539   002942  26D9               	addwf	fsr2l,f,c
 10540   002944  30DF               	rrcf	223,w,c
 10541   002946  32E8               	rrcf	wreg,f,c
 10542   002948  32E8               	rrcf	wreg,f,c
 10543   00294A  0B07               	andlw	7
 10544   00294C  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10545   00294E  380A               	swapf	LCD_voidSend4bit@Copy_u8Command_Data^0,w,c
 10546   002950  46E8               	rlncf	wreg,f,c
 10547   002952  0B1F               	andlw	31
 10548   002954  0B01               	andlw	1
 10549   002956  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10550   002958  5009               	movf	LCD_voidSend4bit@Copy_stLCD4Bit^0,w,c
 10551   00295A  6ED9               	movwf	fsr2l,c
 10552   00295C  6ADA               	clrf	fsr2h,c
 10553   00295E  0E06               	movlw	6
 10554   002960  26D9               	addwf	fsr2l,f,c
 10555   002962  50DF               	movf	223,w,c
 10556   002964  0B07               	andlw	7
 10557   002966  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10558   00296A  0012               	return		;funcret
 10559   00296C                     __end_of_LCD_voidSend4bit:
 10560                           	callstack 0
 10561                           
 10562 ;; *************** function _KEYPAD_u8KeyPadPressed *****************
 10563 ;; Defined at:
 10564 ;;		line 18 in file "HAL/KeyPad/KEYPAD_program.c"
 10565 ;; Parameters:    Size  Location     Type
 10566 ;;  Copy_stKeyPa    1    8[COMRAM] PTR struct .
 10567 ;;		 -> KeyPad_1(16), 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  j               1   14[COMRAM] unsigned char 
 10570 ;;  q               1   12[COMRAM] unsigned char 
 10571 ;;  i               1   13[COMRAM] unsigned char 
 10572 ;;  Local_u8GPIO    1   11[COMRAM] unsigned char 
 10573 ;;  Local_u8Keyp    1   10[COMRAM] unsigned char 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      unsigned char 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10583 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;Total ram usage:        7 bytes
 10588 ;; Hardware stack levels used: 1
 10589 ;; Hardware stack levels required when called: 2
 10590 ;; This function calls:
 10591 ;;		_GPIO_VoidSetPinMode
 10592 ;;		_GPIO_u8ReadPin
 10593 ;; This function is called by:
 10594 ;;		_main
 10595 ;;		_APP_Get_Number
 10596 ;;		_KEYPAD_u16KeypadReturnNumber
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text53
 10601   0024A4                     __ptext53:
 10602                           	callstack 0
 10603   0024A4                     _KEYPAD_u8KeyPadPressed:
 10604                           	callstack 26
 10605   0024A4                     
 10606                           ;HAL/KeyPad/KEYPAD_program.c: 18: u8 KEYPAD_u8KeyPadPressed(KeyPad_T *Copy_stKeyPad);HAL
      +                          /KeyPad/KEYPAD_program.c: 19: {;HAL/KeyPad/KEYPAD_program.c: 20:     u8 Local_u8KeypadPr
      +                          essed = 0xFF;
 10607   0024A4  680B               	setf	KEYPAD_u8KeyPadPressed@Local_u8KeypadPressed^0,c
 10608   0024A6                     
 10609                           ;HAL/KeyPad/KEYPAD_program.c: 22:     for (u8 i = 0; i < 4; i++)
 10610   0024A6  0E00               	movlw	0
 10611   0024A8  6E0E               	movwf	KEYPAD_u8KeyPadPressed@i^0,c
 10612   0024AA                     l5336:
 10613                           
 10614                           ;HAL/KeyPad/KEYPAD_program.c: 23:     {;HAL/KeyPad/KEYPAD_program.c: 25:         for (u8
      +                           q = 0; q < 4; q++)
 10615   0024AA  0E00               	movlw	0
 10616   0024AC  6E0D               	movwf	KEYPAD_u8KeyPadPressed@q^0,c
 10617   0024AE                     l5342:
 10618                           
 10619                           ;HAL/KeyPad/KEYPAD_program.c: 26:         {;HAL/KeyPad/KEYPAD_program.c: 28:            
      +                           GPIO_VoidSetPinMode(Copy_stKeyPad->RowPinConfig[q].Port, Copy_stKeyPad->RowPinConfig[q]
      +                          .Pin, 0);
 10620   0024AE  500D               	movf	KEYPAD_u8KeyPadPressed@q^0,w,c
 10621   0024B0  0D02               	mullw	2
 10622   0024B2  5009               	movf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,w,c
 10623   0024B4  24F3               	addwf	243,w,c
 10624   0024B6  6ED9               	movwf	fsr2l,c
 10625   0024B8  6ADA               	clrf	fsr2h,c
 10626   0024BA  0E01               	movlw	1
 10627   0024BC  26D9               	addwf	fsr2l,f,c
 10628   0024BE  50DF               	movf	indf2,w,c
 10629   0024C0  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10630   0024C2  0E00               	movlw	0
 10631   0024C4  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10632   0024C6  500D               	movf	KEYPAD_u8KeyPadPressed@q^0,w,c
 10633   0024C8  0D02               	mullw	2
 10634   0024CA  5009               	movf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,w,c
 10635   0024CC  24F3               	addwf	243,w,c
 10636   0024CE  6ED9               	movwf	fsr2l,c
 10637   0024D0  6ADA               	clrf	fsr2h,c
 10638   0024D2  50DF               	movf	indf2,w,c
 10639   0024D4  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10640   0024D8                     
 10641                           ;HAL/KeyPad/KEYPAD_program.c: 29:         }
 10642   0024D8  2A0D               	incf	KEYPAD_u8KeyPadPressed@q^0,f,c
 10643   0024DA  0E03               	movlw	3
 10644   0024DC  640D               	cpfsgt	KEYPAD_u8KeyPadPressed@q^0,c
 10645   0024DE  EF73  F012         	goto	u4531
 10646   0024E2  EF75  F012         	goto	u4530
 10647   0024E6                     u4531:
 10648   0024E6  EF57  F012         	goto	l5342
 10649   0024EA                     u4530:
 10650   0024EA                     
 10651                           ;HAL/KeyPad/KEYPAD_program.c: 30:         GPIO_VoidSetPinMode(Copy_stKeyPad->RowPinConfi
      +                          g[i].Port, Copy_stKeyPad->RowPinConfig[i].Pin, 1);
 10652   0024EA  500E               	movf	KEYPAD_u8KeyPadPressed@i^0,w,c
 10653   0024EC  0D02               	mullw	2
 10654   0024EE  5009               	movf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,w,c
 10655   0024F0  24F3               	addwf	243,w,c
 10656   0024F2  6ED9               	movwf	fsr2l,c
 10657   0024F4  6ADA               	clrf	fsr2h,c
 10658   0024F6  0E01               	movlw	1
 10659   0024F8  26D9               	addwf	fsr2l,f,c
 10660   0024FA  50DF               	movf	indf2,w,c
 10661   0024FC  6E01               	movwf	GPIO_VoidSetPinMode@Copy_u8Pin^0,c
 10662   0024FE  0E01               	movlw	1
 10663   002500  6E02               	movwf	GPIO_VoidSetPinMode@Copy_u8Mode^0,c
 10664   002502  500E               	movf	KEYPAD_u8KeyPadPressed@i^0,w,c
 10665   002504  0D02               	mullw	2
 10666   002506  5009               	movf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,w,c
 10667   002508  24F3               	addwf	243,w,c
 10668   00250A  6ED9               	movwf	fsr2l,c
 10669   00250C  6ADA               	clrf	fsr2h,c
 10670   00250E  50DF               	movf	indf2,w,c
 10671   002510  EC0E  F015         	call	_GPIO_VoidSetPinMode
 10672   002514                     
 10673                           ;HAL/KeyPad/KEYPAD_program.c: 31:         _delay((unsigned long)((10)*(8000000/4000.0)))
      +                          ;
 10674   002514  0E1A               	movlw	26
 10675   002516  6E0A               	movwf	??_KEYPAD_u8KeyPadPressed^0,c
 10676   002518  0EF8               	movlw	248
 10677   00251A                     u6567:
 10678   00251A  2EE8               	decfsz	wreg,f,c
 10679   00251C  D7FE               	bra	u6567
 10680   00251E  2E0A               	decfsz	??_KEYPAD_u8KeyPadPressed^0,f,c
 10681   002520  D7FC               	bra	u6567
 10682   002522  D000               	nop2	
 10683   002524                     
 10684                           ;HAL/KeyPad/KEYPAD_program.c: 32:         for (u8 j = 0; j < 4; j++)
 10685   002524  0E00               	movlw	0
 10686   002526  6E0F               	movwf	KEYPAD_u8KeyPadPressed@j^0,c
 10687   002528                     l5358:
 10688                           
 10689                           ;HAL/KeyPad/KEYPAD_program.c: 33:         {;HAL/KeyPad/KEYPAD_program.c: 35:            
      +                           Local_u8GPIOReturned = GPIO_u8ReadPin(Copy_stKeyPad->CoulmPinConfig[j].Port, Copy_stKey
      +                          Pad->CoulmPinConfig[j].Pin);
 10690   002528  500F               	movf	KEYPAD_u8KeyPadPressed@j^0,w,c
 10691   00252A  0D02               	mullw	2
 10692   00252C  5009               	movf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,w,c
 10693   00252E  24F3               	addwf	243,w,c
 10694   002530  6ED9               	movwf	fsr2l,c
 10695   002532  6ADA               	clrf	fsr2h,c
 10696   002534  0E09               	movlw	9
 10697   002536  26D9               	addwf	fsr2l,f,c
 10698   002538  50DF               	movf	indf2,w,c
 10699   00253A  6E01               	movwf	GPIO_u8ReadPin@Copy_u8Pin^0,c
 10700   00253C  500F               	movf	KEYPAD_u8KeyPadPressed@j^0,w,c
 10701   00253E  0D02               	mullw	2
 10702   002540  5009               	movf	KEYPAD_u8KeyPadPressed@Copy_stKeyPad^0,w,c
 10703   002542  24F3               	addwf	243,w,c
 10704   002544  6ED9               	movwf	fsr2l,c
 10705   002546  6ADA               	clrf	fsr2h,c
 10706   002548  0E08               	movlw	8
 10707   00254A  26D9               	addwf	fsr2l,f,c
 10708   00254C  50DF               	movf	indf2,w,c
 10709   00254E  EC07  F01B         	call	_GPIO_u8ReadPin
 10710   002552  6E0C               	movwf	KEYPAD_u8KeyPadPressed@Local_u8GPIOReturned^0,c
 10711   002554                     
 10712                           ;HAL/KeyPad/KEYPAD_program.c: 36:             if (Local_u8GPIOReturned == 1)
 10713   002554  040C               	decf	KEYPAD_u8KeyPadPressed@Local_u8GPIOReturned^0,w,c
 10714   002556  A4D8               	btfss	status,2,c
 10715   002558  EFB0  F012         	goto	u4541
 10716   00255C  EFB2  F012         	goto	u4540
 10717   002560                     u4541:
 10718   002560  EFBB  F012         	goto	l5364
 10719   002564                     u4540:
 10720   002564                     
 10721                           ;HAL/KeyPad/KEYPAD_program.c: 37:             {;HAL/KeyPad/KEYPAD_program.c: 38:        
      +                                   Local_u8KeypadPressed = Au8elements[i][j];
 10722   002564  500E               	movf	KEYPAD_u8KeyPadPressed@i^0,w,c
 10723   002566  0D04               	mullw	4
 10724   002568  50F3               	movf	243,w,c
 10725   00256A  0F80               	addlw	low _Au8elements
 10726   00256C  240F               	addwf	KEYPAD_u8KeyPadPressed@j^0,w,c
 10727   00256E  6ED9               	movwf	fsr2l,c
 10728   002570  6ADA               	clrf	fsr2h,c
 10729   002572  50DF               	movf	indf2,w,c
 10730   002574  6E0B               	movwf	KEYPAD_u8KeyPadPressed@Local_u8KeypadPressed^0,c
 10731   002576                     l5364:
 10732                           
 10733                           ;HAL/KeyPad/KEYPAD_program.c: 40:         }
 10734   002576  2A0F               	incf	KEYPAD_u8KeyPadPressed@j^0,f,c
 10735   002578  0E03               	movlw	3
 10736   00257A  640F               	cpfsgt	KEYPAD_u8KeyPadPressed@j^0,c
 10737   00257C  EFC2  F012         	goto	u4551
 10738   002580  EFC4  F012         	goto	u4550
 10739   002584                     u4551:
 10740   002584  EF94  F012         	goto	l5358
 10741   002588                     u4550:
 10742   002588                     
 10743                           ;HAL/KeyPad/KEYPAD_program.c: 41:     }
 10744   002588  2A0E               	incf	KEYPAD_u8KeyPadPressed@i^0,f,c
 10745   00258A  0E03               	movlw	3
 10746   00258C  640E               	cpfsgt	KEYPAD_u8KeyPadPressed@i^0,c
 10747   00258E  EFCB  F012         	goto	u4561
 10748   002592  EFCD  F012         	goto	u4560
 10749   002596                     u4561:
 10750   002596  EF55  F012         	goto	l5336
 10751   00259A                     u4560:
 10752   00259A                     
 10753                           ;HAL/KeyPad/KEYPAD_program.c: 42:     return Local_u8KeypadPressed;
 10754   00259A  500B               	movf	KEYPAD_u8KeyPadPressed@Local_u8KeypadPressed^0,w,c
 10755   00259C  0012               	return		;funcret
 10756   00259E                     __end_of_KEYPAD_u8KeyPadPressed:
 10757                           	callstack 0
 10758                           
 10759 ;; *************** function _GPIO_u8ReadPin *****************
 10760 ;; Defined at:
 10761 ;;		line 36 in file "MCAL/GPIO/GPIO_Program.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  Copy_u8Port     1    wreg     unsigned char 
 10764 ;;  Copy_u8Pin      1    0[COMRAM] unsigned char 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  Copy_u8Port     1    5[COMRAM] unsigned char 
 10767 ;;  Localu8Retur    1    6[COMRAM] unsigned char 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  1    wreg      unsigned char 
 10770 ;; Registers used:
 10771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10777 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;Total ram usage:        7 bytes
 10782 ;; Hardware stack levels used: 1
 10783 ;; Hardware stack levels required when called: 1
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		_KEYPAD_u8KeyPadPressed
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text54
 10792   00360E                     __ptext54:
 10793                           	callstack 0
 10794   00360E                     _GPIO_u8ReadPin:
 10795                           	callstack 26
 10796                           
 10797                           ;incstack = 0
 10798                           ;GPIO_u8ReadPin@Copy_u8Port stored from wreg
 10799   00360E  6E06               	movwf	GPIO_u8ReadPin@Copy_u8Port^0,c
 10800   003610                     
 10801                           ;MCAL/GPIO/GPIO_Program.c: 38:     Localu8Returned = ((*port_registers[Copy_u8Port] >>Co
      +                          py_u8Pin) &1);
 10802   003610  C001  F002         	movff	GPIO_u8ReadPin@Copy_u8Pin,??_GPIO_u8ReadPin
 10803   003614  5006               	movf	GPIO_u8ReadPin@Copy_u8Port^0,w,c
 10804   003616  0D02               	mullw	2
 10805   003618  50F3               	movf	243,w,c
 10806   00361A  0F90               	addlw	low _port_registers
 10807   00361C  6ED9               	movwf	fsr2l,c
 10808   00361E  6ADA               	clrf	fsr2h,c
 10809   003620  CFDE F003          	movff	postinc2,??_GPIO_u8ReadPin+1
 10810   003624  CFDD F004          	movff	postdec2,??_GPIO_u8ReadPin+2
 10811   003628  C003  FFD9         	movff	??_GPIO_u8ReadPin+1,fsr2l
 10812   00362C  C004  FFDA         	movff	??_GPIO_u8ReadPin+2,fsr2h
 10813   003630  50DF               	movf	indf2,w,c
 10814   003632  6E05               	movwf	(??_GPIO_u8ReadPin+3)^0,c
 10815   003634  2A02               	incf	??_GPIO_u8ReadPin^0,f,c
 10816   003636  EF1F  F01B         	goto	u3694
 10817   00363A                     u3695:
 10818   00363A  90D8               	bcf	status,0,c
 10819   00363C  3205               	rrcf	(??_GPIO_u8ReadPin+3)^0,f,c
 10820   00363E                     u3694:
 10821   00363E  2E02               	decfsz	??_GPIO_u8ReadPin^0,f,c
 10822   003640  EF1D  F01B         	goto	u3695
 10823   003644  5005               	movf	(??_GPIO_u8ReadPin+3)^0,w,c
 10824   003646  0B01               	andlw	1
 10825   003648  6E07               	movwf	GPIO_u8ReadPin@Localu8Returned^0,c
 10826   00364A                     
 10827                           ;MCAL/GPIO/GPIO_Program.c: 39:     return Localu8Returned;
 10828   00364A  5007               	movf	GPIO_u8ReadPin@Localu8Returned^0,w,c
 10829   00364C  0012               	return		;funcret
 10830   00364E                     __end_of_GPIO_u8ReadPin:
 10831                           	callstack 0
 10832                           
 10833 ;; *************** function _GPIO_VoidSetPinMode *****************
 10834 ;; Defined at:
 10835 ;;		line 53 in file "MCAL/GPIO/GPIO_Program.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  Copy_u8Port     1    wreg     unsigned char 
 10838 ;;  Copy_u8Pin      1    0[COMRAM] unsigned char 
 10839 ;;  Copy_u8Mode     1    1[COMRAM] unsigned char 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  Copy_u8Port     1    7[COMRAM] unsigned char 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;Total ram usage:        8 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; Hardware stack levels required when called: 1
 10858 ;; This function calls:
 10859 ;;		Nothing
 10860 ;; This function is called by:
 10861 ;;		_KEYPAD_u8KeyPadPressed
 10862 ;;		_LCD4Bit_voidSendCommand
 10863 ;;		_LCD4Bit_voidSendChar
 10864 ;;		_LCD_voidSend4bit
 10865 ;;		_LCD_voidSendEnable_4Bit
 10866 ;;		_LED_voidLedInt
 10867 ;;		_LED_voidLedOn
 10868 ;;		_LED_voidLedOff
 10869 ;;		_DCMOTOR_voidDcMotorInt
 10870 ;;		_DCMOTOR_voidDcMotoroTurnOff
 10871 ;;		_DCMOTOR_voidDcMotoroTurnForward
 10872 ;;		_DCMOTOR_voidDcMotoroTurnReverse
 10873 ;;		_LCD8Bit_voidSendCommand
 10874 ;;		_LCD8Bit_voidSendChar
 10875 ;;		_LCD_voidSendEnable_8Bit
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           	psect	text55
 10880   002A1C                     __ptext55:
 10881                           	callstack 0
 10882   002A1C                     _GPIO_VoidSetPinMode:
 10883                           	callstack 28
 10884                           
 10885                           ;incstack = 0
 10886                           ;GPIO_VoidSetPinMode@Copy_u8Port stored from wreg
 10887   002A1C  6E08               	movwf	GPIO_VoidSetPinMode@Copy_u8Port^0,c
 10888   002A1E                     
 10889                           ;MCAL/GPIO/GPIO_Program.c: 54:     switch (Copy_u8Mode) {
 10890   002A1E  EF50  F015         	goto	l4626
 10891   002A22                     l4620:
 10892                           
 10893                           ;MCAL/GPIO/GPIO_Program.c: 56:             (*lat_registers[Copy_u8Port] |= (1<<Copy_u8Pi
      +                          n));
 10894   002A22  C001  F003         	movff	GPIO_VoidSetPinMode@Copy_u8Pin,??_GPIO_VoidSetPinMode
 10895   002A26  0E01               	movlw	1
 10896   002A28  6E04               	movwf	(??_GPIO_VoidSetPinMode+1)^0,c
 10897   002A2A  2A03               	incf	??_GPIO_VoidSetPinMode^0,f,c
 10898   002A2C  EF1A  F015         	goto	u3344
 10899   002A30                     u3345:
 10900   002A30  90D8               	bcf	status,0,c
 10901   002A32  3604               	rlcf	(??_GPIO_VoidSetPinMode+1)^0,f,c
 10902   002A34                     u3344:
 10903   002A34  2E03               	decfsz	??_GPIO_VoidSetPinMode^0,f,c
 10904   002A36  EF18  F015         	goto	u3345
 10905   002A3A  5008               	movf	GPIO_VoidSetPinMode@Copy_u8Port^0,w,c
 10906   002A3C  0D02               	mullw	2
 10907   002A3E  50F3               	movf	243,w,c
 10908   002A40  0F9A               	addlw	low _lat_registers
 10909   002A42  6ED9               	movwf	fsr2l,c
 10910   002A44  6ADA               	clrf	fsr2h,c
 10911   002A46  CFDE F005          	movff	postinc2,??_GPIO_VoidSetPinMode+2
 10912   002A4A  CFDD F006          	movff	postdec2,??_GPIO_VoidSetPinMode+3
 10913   002A4E  C005  FFD9         	movff	??_GPIO_VoidSetPinMode+2,fsr2l
 10914   002A52  C006  FFDA         	movff	??_GPIO_VoidSetPinMode+3,fsr2h
 10915   002A56  5004               	movf	(??_GPIO_VoidSetPinMode+1)^0,w,c
 10916   002A58  12DF               	iorwf	indf2,f,c
 10917                           
 10918                           ;MCAL/GPIO/GPIO_Program.c: 57:             break;
 10919   002A5A  EF65  F015         	goto	l800
 10920   002A5E                     l4622:
 10921                           
 10922                           ;MCAL/GPIO/GPIO_Program.c: 59:             (*lat_registers[Copy_u8Port] &= ~(1<<Copy_u8P
      +                          in));
 10923   002A5E  C001  F003         	movff	GPIO_VoidSetPinMode@Copy_u8Pin,??_GPIO_VoidSetPinMode
 10924   002A62  0E01               	movlw	1
 10925   002A64  6E04               	movwf	(??_GPIO_VoidSetPinMode+1)^0,c
 10926   002A66  2A03               	incf	??_GPIO_VoidSetPinMode^0,f,c
 10927   002A68  EF38  F015         	goto	u3354
 10928   002A6C                     u3355:
 10929   002A6C  90D8               	bcf	status,0,c
 10930   002A6E  3604               	rlcf	(??_GPIO_VoidSetPinMode+1)^0,f,c
 10931   002A70                     u3354:
 10932   002A70  2E03               	decfsz	??_GPIO_VoidSetPinMode^0,f,c
 10933   002A72  EF36  F015         	goto	u3355
 10934   002A76  5004               	movf	(??_GPIO_VoidSetPinMode+1)^0,w,c
 10935   002A78  0AFF               	xorlw	255
 10936   002A7A  6E05               	movwf	(??_GPIO_VoidSetPinMode+2)^0,c
 10937   002A7C  5008               	movf	GPIO_VoidSetPinMode@Copy_u8Port^0,w,c
 10938   002A7E  0D02               	mullw	2
 10939   002A80  50F3               	movf	243,w,c
 10940   002A82  0F9A               	addlw	low _lat_registers
 10941   002A84  6ED9               	movwf	fsr2l,c
 10942   002A86  6ADA               	clrf	fsr2h,c
 10943   002A88  CFDE F006          	movff	postinc2,??_GPIO_VoidSetPinMode+3
 10944   002A8C  CFDD F007          	movff	postdec2,??_GPIO_VoidSetPinMode+4
 10945   002A90  C006  FFD9         	movff	??_GPIO_VoidSetPinMode+3,fsr2l
 10946   002A94  C007  FFDA         	movff	??_GPIO_VoidSetPinMode+4,fsr2h
 10947   002A98  5005               	movf	(??_GPIO_VoidSetPinMode+2)^0,w,c
 10948   002A9A  16DF               	andwf	indf2,f,c
 10949                           
 10950                           ;MCAL/GPIO/GPIO_Program.c: 61:             break;
 10951   002A9C  EF65  F015         	goto	l800
 10952   002AA0                     l4626:
 10953   002AA0  5002               	movf	GPIO_VoidSetPinMode@Copy_u8Mode^0,w,c
 10954   002AA2  6E03               	movwf	??_GPIO_VoidSetPinMode^0,c
 10955   002AA4  6A04               	clrf	(??_GPIO_VoidSetPinMode+1)^0,c
 10956                           
 10957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10958                           ; Switch size 1, requested type "simple"
 10959                           ; Number of cases is 1, Range of values is 0 to 0
 10960                           ; switch strategies available:
 10961                           ; Name         Instructions Cycles
 10962                           ; simple_byte            4     3 (average)
 10963                           ;	Chosen strategy is simple_byte
 10964   002AA6  5004               	movf	(??_GPIO_VoidSetPinMode+1)^0,w,c
 10965   002AA8  0A00               	xorlw	0	; case 0
 10966   002AAA  B4D8               	btfsc	status,2,c
 10967   002AAC  EF5A  F015         	goto	l7220
 10968   002AB0  EF65  F015         	goto	l800
 10969   002AB4                     l7220:
 10970                           
 10971                           ; Switch size 1, requested type "simple"
 10972                           ; Number of cases is 2, Range of values is 0 to 1
 10973                           ; switch strategies available:
 10974                           ; Name         Instructions Cycles
 10975                           ; simple_byte            7     4 (average)
 10976                           ;	Chosen strategy is simple_byte
 10977   002AB4  5003               	movf	??_GPIO_VoidSetPinMode^0,w,c
 10978   002AB6  0A00               	xorlw	0	; case 0
 10979   002AB8  B4D8               	btfsc	status,2,c
 10980   002ABA  EF2F  F015         	goto	l4622
 10981   002ABE  0A01               	xorlw	1	; case 1
 10982   002AC0  B4D8               	btfsc	status,2,c
 10983   002AC2  EF11  F015         	goto	l4620
 10984   002AC6  EF65  F015         	goto	l800
 10985   002ACA                     l800:
 10986   002ACA  0012               	return		;funcret
 10987   002ACC                     __end_of_GPIO_VoidSetPinMode:
 10988                           	callstack 0
 10989                           
 10990 ;; *************** function _APP_CheckLights *****************
 10991 ;; Defined at:
 10992 ;;		line 148 in file "appliction.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;  MyData          1   15[COMRAM] PTR volatile struct .
 10995 ;;		 -> Data(4), 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  Adc_result      2   16[COMRAM] unsigned short 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;Total ram usage:        3 bytes
 11012 ;; Hardware stack levels used: 1
 11013 ;; Hardware stack levels required when called: 4
 11014 ;; This function calls:
 11015 ;;		_ADC_u16GetConversion
 11016 ;; This function is called by:
 11017 ;;		_main
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text56
 11022   00183C                     __ptext56:
 11023                           	callstack 0
 11024   00183C                     _APP_CheckLights:
 11025                           	callstack 26
 11026   00183C                     
 11027                           ;appliction.c: 148: void APP_CheckLights(Data_t *MyData);appliction.c: 149: {;appliction
      +                          .c: 150:     u16 Adc_result = ADC_u16GetConversion(&ADC, ADC_CHANNEL_AN0);
 11028   00183C  0ECB               	movlw	low _ADC
 11029   00183E  6E0C               	movwf	ADC_u16GetConversion@Copy_stADC^0,c
 11030   001840  0E00               	movlw	0
 11031   001842  6E0D               	movwf	ADC_u16GetConversion@channel^0,c
 11032   001844  EC43  F01B         	call	_ADC_u16GetConversion	;wreg free
 11033   001848  C00C  F011         	movff	?_ADC_u16GetConversion,APP_CheckLights@Adc_result
 11034   00184C  C00D  F012         	movff	?_ADC_u16GetConversion+1,APP_CheckLights@Adc_result+1
 11035   001850                     
 11036                           ;appliction.c: 151:     if (Adc_result >= 0 && Adc_result < 124)
 11037   001850  5012               	movf	(APP_CheckLights@Adc_result+1)^0,w,c
 11038   001852  E107               	bnz	u5131
 11039   001854  0E7C               	movlw	124
 11040   001856  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11041   001858  B0D8               	btfsc	status,0,c
 11042   00185A  EF31  F00C         	goto	u5131
 11043   00185E  EF33  F00C         	goto	u5130
 11044   001862                     u5131:
 11045   001862  EF3C  F00C         	goto	l5874
 11046   001866                     u5130:
 11047   001866                     
 11048                           ;appliction.c: 152:     {;appliction.c: 153:         MyData->Light = 8;
 11049   001866  5010               	movf	APP_CheckLights@MyData^0,w,c
 11050   001868  6ED9               	movwf	fsr2l,c
 11051   00186A  6ADA               	clrf	fsr2h,c
 11052   00186C  0E03               	movlw	3
 11053   00186E  26D9               	addwf	fsr2l,f,c
 11054   001870  0E08               	movlw	8
 11055   001872  6EDF               	movwf	indf2,c
 11056                           
 11057                           ;appliction.c: 154:     }
 11058   001874  EF28  F00D         	goto	l237
 11059   001878                     l5874:
 11060   001878  5012               	movf	(APP_CheckLights@Adc_result+1)^0,w,c
 11061   00187A  E109               	bnz	u5140
 11062   00187C  0E7C               	movlw	124
 11063   00187E  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11064   001880  A0D8               	btfss	status,0,c
 11065   001882  EF45  F00C         	goto	u5141
 11066   001886  EF47  F00C         	goto	u5140
 11067   00188A                     u5141:
 11068   00188A  EF5B  F00C         	goto	l5880
 11069   00188E                     u5140:
 11070   00188E  5012               	movf	(APP_CheckLights@Adc_result+1)^0,w,c
 11071   001890  E107               	bnz	u5151
 11072   001892  0EF8               	movlw	248
 11073   001894  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11074   001896  B0D8               	btfsc	status,0,c
 11075   001898  EF50  F00C         	goto	u5151
 11076   00189C  EF52  F00C         	goto	u5150
 11077   0018A0                     u5151:
 11078   0018A0  EF5B  F00C         	goto	l5880
 11079   0018A4                     u5150:
 11080   0018A4                     
 11081                           ;appliction.c: 156:     {;appliction.c: 157:         MyData->Light = 7;
 11082   0018A4  5010               	movf	APP_CheckLights@MyData^0,w,c
 11083   0018A6  6ED9               	movwf	fsr2l,c
 11084   0018A8  6ADA               	clrf	fsr2h,c
 11085   0018AA  0E03               	movlw	3
 11086   0018AC  26D9               	addwf	fsr2l,f,c
 11087   0018AE  0E07               	movlw	7
 11088   0018B0  6EDF               	movwf	indf2,c
 11089                           
 11090                           ;appliction.c: 158:     }
 11091   0018B2  EF28  F00D         	goto	l237
 11092   0018B6                     l5880:
 11093   0018B6  5012               	movf	(APP_CheckLights@Adc_result+1)^0,w,c
 11094   0018B8  E109               	bnz	u5160
 11095   0018BA  0EF8               	movlw	248
 11096   0018BC  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11097   0018BE  A0D8               	btfss	status,0,c
 11098   0018C0  EF64  F00C         	goto	u5161
 11099   0018C4  EF66  F00C         	goto	u5160
 11100   0018C8                     u5161:
 11101   0018C8  EF7A  F00C         	goto	l5886
 11102   0018CC                     u5160:
 11103   0018CC  0E74               	movlw	116
 11104   0018CE  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11105   0018D0  0E01               	movlw	1
 11106   0018D2  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11107   0018D4  B0D8               	btfsc	status,0,c
 11108   0018D6  EF6F  F00C         	goto	u5171
 11109   0018DA  EF71  F00C         	goto	u5170
 11110   0018DE                     u5171:
 11111   0018DE  EF7A  F00C         	goto	l5886
 11112   0018E2                     u5170:
 11113   0018E2                     
 11114                           ;appliction.c: 160:     {;appliction.c: 161:         MyData->Light = 6;
 11115   0018E2  5010               	movf	APP_CheckLights@MyData^0,w,c
 11116   0018E4  6ED9               	movwf	fsr2l,c
 11117   0018E6  6ADA               	clrf	fsr2h,c
 11118   0018E8  0E03               	movlw	3
 11119   0018EA  26D9               	addwf	fsr2l,f,c
 11120   0018EC  0E06               	movlw	6
 11121   0018EE  6EDF               	movwf	indf2,c
 11122                           
 11123                           ;appliction.c: 162:     }
 11124   0018F0  EF28  F00D         	goto	l237
 11125   0018F4                     l5886:
 11126   0018F4  0E74               	movlw	116
 11127   0018F6  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11128   0018F8  0E01               	movlw	1
 11129   0018FA  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11130   0018FC  A0D8               	btfss	status,0,c
 11131   0018FE  EF83  F00C         	goto	u5181
 11132   001902  EF85  F00C         	goto	u5180
 11133   001906                     u5181:
 11134   001906  EF99  F00C         	goto	l5892
 11135   00190A                     u5180:
 11136   00190A  0EF0               	movlw	240
 11137   00190C  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11138   00190E  0E01               	movlw	1
 11139   001910  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11140   001912  B0D8               	btfsc	status,0,c
 11141   001914  EF8E  F00C         	goto	u5191
 11142   001918  EF90  F00C         	goto	u5190
 11143   00191C                     u5191:
 11144   00191C  EF99  F00C         	goto	l5892
 11145   001920                     u5190:
 11146   001920                     
 11147                           ;appliction.c: 164:     {;appliction.c: 165:         MyData->Light = 5;
 11148   001920  5010               	movf	APP_CheckLights@MyData^0,w,c
 11149   001922  6ED9               	movwf	fsr2l,c
 11150   001924  6ADA               	clrf	fsr2h,c
 11151   001926  0E03               	movlw	3
 11152   001928  26D9               	addwf	fsr2l,f,c
 11153   00192A  0E05               	movlw	5
 11154   00192C  6EDF               	movwf	indf2,c
 11155                           
 11156                           ;appliction.c: 166:     }
 11157   00192E  EF28  F00D         	goto	l237
 11158   001932                     l5892:
 11159   001932  0EF0               	movlw	240
 11160   001934  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11161   001936  0E01               	movlw	1
 11162   001938  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11163   00193A  A0D8               	btfss	status,0,c
 11164   00193C  EFA2  F00C         	goto	u5201
 11165   001940  EFA4  F00C         	goto	u5200
 11166   001944                     u5201:
 11167   001944  EFB8  F00C         	goto	l5898
 11168   001948                     u5200:
 11169   001948  0E6C               	movlw	108
 11170   00194A  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11171   00194C  0E02               	movlw	2
 11172   00194E  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11173   001950  B0D8               	btfsc	status,0,c
 11174   001952  EFAD  F00C         	goto	u5211
 11175   001956  EFAF  F00C         	goto	u5210
 11176   00195A                     u5211:
 11177   00195A  EFB8  F00C         	goto	l5898
 11178   00195E                     u5210:
 11179   00195E                     
 11180                           ;appliction.c: 168:     {;appliction.c: 169:         MyData->Light = 4;
 11181   00195E  5010               	movf	APP_CheckLights@MyData^0,w,c
 11182   001960  6ED9               	movwf	fsr2l,c
 11183   001962  6ADA               	clrf	fsr2h,c
 11184   001964  0E03               	movlw	3
 11185   001966  26D9               	addwf	fsr2l,f,c
 11186   001968  0E04               	movlw	4
 11187   00196A  6EDF               	movwf	indf2,c
 11188                           
 11189                           ;appliction.c: 170:     }
 11190   00196C  EF28  F00D         	goto	l237
 11191   001970                     l5898:
 11192   001970  0E6C               	movlw	108
 11193   001972  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11194   001974  0E02               	movlw	2
 11195   001976  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11196   001978  A0D8               	btfss	status,0,c
 11197   00197A  EFC1  F00C         	goto	u5221
 11198   00197E  EFC3  F00C         	goto	u5220
 11199   001982                     u5221:
 11200   001982  EFD7  F00C         	goto	l5904
 11201   001986                     u5220:
 11202   001986  0EE8               	movlw	232
 11203   001988  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11204   00198A  0E02               	movlw	2
 11205   00198C  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11206   00198E  B0D8               	btfsc	status,0,c
 11207   001990  EFCC  F00C         	goto	u5231
 11208   001994  EFCE  F00C         	goto	u5230
 11209   001998                     u5231:
 11210   001998  EFD7  F00C         	goto	l5904
 11211   00199C                     u5230:
 11212   00199C                     
 11213                           ;appliction.c: 172:     {;appliction.c: 173:         MyData->Light = 3;
 11214   00199C  5010               	movf	APP_CheckLights@MyData^0,w,c
 11215   00199E  6ED9               	movwf	fsr2l,c
 11216   0019A0  6ADA               	clrf	fsr2h,c
 11217   0019A2  0E03               	movlw	3
 11218   0019A4  26D9               	addwf	fsr2l,f,c
 11219   0019A6  0E03               	movlw	3
 11220   0019A8  6EDF               	movwf	indf2,c
 11221                           
 11222                           ;appliction.c: 174:     }
 11223   0019AA  EF28  F00D         	goto	l237
 11224   0019AE                     l5904:
 11225   0019AE  0EE8               	movlw	232
 11226   0019B0  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11227   0019B2  0E02               	movlw	2
 11228   0019B4  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11229   0019B6  A0D8               	btfss	status,0,c
 11230   0019B8  EFE0  F00C         	goto	u5241
 11231   0019BC  EFE2  F00C         	goto	u5240
 11232   0019C0                     u5241:
 11233   0019C0  EFF6  F00C         	goto	l5910
 11234   0019C4                     u5240:
 11235   0019C4  0E64               	movlw	100
 11236   0019C6  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11237   0019C8  0E03               	movlw	3
 11238   0019CA  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11239   0019CC  B0D8               	btfsc	status,0,c
 11240   0019CE  EFEB  F00C         	goto	u5251
 11241   0019D2  EFED  F00C         	goto	u5250
 11242   0019D6                     u5251:
 11243   0019D6  EFF6  F00C         	goto	l5910
 11244   0019DA                     u5250:
 11245   0019DA                     
 11246                           ;appliction.c: 176:     {;appliction.c: 177:         MyData->Light = 2;
 11247   0019DA  5010               	movf	APP_CheckLights@MyData^0,w,c
 11248   0019DC  6ED9               	movwf	fsr2l,c
 11249   0019DE  6ADA               	clrf	fsr2h,c
 11250   0019E0  0E03               	movlw	3
 11251   0019E2  26D9               	addwf	fsr2l,f,c
 11252   0019E4  0E02               	movlw	2
 11253   0019E6  6EDF               	movwf	indf2,c
 11254                           
 11255                           ;appliction.c: 178:     }
 11256   0019E8  EF28  F00D         	goto	l237
 11257   0019EC                     l5910:
 11258   0019EC  0E64               	movlw	100
 11259   0019EE  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11260   0019F0  0E03               	movlw	3
 11261   0019F2  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11262   0019F4  A0D8               	btfss	status,0,c
 11263   0019F6  EFFF  F00C         	goto	u5261
 11264   0019FA  EF01  F00D         	goto	u5260
 11265   0019FE                     u5261:
 11266   0019FE  EF15  F00D         	goto	l5916
 11267   001A02                     u5260:
 11268   001A02  0EE0               	movlw	224
 11269   001A04  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11270   001A06  0E03               	movlw	3
 11271   001A08  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11272   001A0A  B0D8               	btfsc	status,0,c
 11273   001A0C  EF0A  F00D         	goto	u5271
 11274   001A10  EF0C  F00D         	goto	u5270
 11275   001A14                     u5271:
 11276   001A14  EF15  F00D         	goto	l5916
 11277   001A18                     u5270:
 11278   001A18                     
 11279                           ;appliction.c: 180:     {;appliction.c: 181:         MyData->Light = 1;
 11280   001A18  5010               	movf	APP_CheckLights@MyData^0,w,c
 11281   001A1A  6ED9               	movwf	fsr2l,c
 11282   001A1C  6ADA               	clrf	fsr2h,c
 11283   001A1E  0E03               	movlw	3
 11284   001A20  26D9               	addwf	fsr2l,f,c
 11285   001A22  0E01               	movlw	1
 11286   001A24  6EDF               	movwf	indf2,c
 11287                           
 11288                           ;appliction.c: 182:     }
 11289   001A26  EF28  F00D         	goto	l237
 11290   001A2A                     l5916:
 11291   001A2A  0EE0               	movlw	224
 11292   001A2C  5C11               	subwf	APP_CheckLights@Adc_result^0,w,c
 11293   001A2E  0E03               	movlw	3
 11294   001A30  5812               	subwfb	(APP_CheckLights@Adc_result+1)^0,w,c
 11295   001A32  A0D8               	btfss	status,0,c
 11296   001A34  EF1E  F00D         	goto	u5281
 11297   001A38  EF20  F00D         	goto	u5280
 11298   001A3C                     u5281:
 11299   001A3C  EF28  F00D         	goto	l231
 11300   001A40                     u5280:
 11301   001A40                     
 11302                           ;appliction.c: 184:     {;appliction.c: 185:         MyData->Light = 0;
 11303   001A40  5010               	movf	APP_CheckLights@MyData^0,w,c
 11304   001A42  6ED9               	movwf	fsr2l,c
 11305   001A44  6ADA               	clrf	fsr2h,c
 11306   001A46  0E03               	movlw	3
 11307   001A48  26D9               	addwf	fsr2l,f,c
 11308   001A4A  6ADF               	clrf	indf2,c
 11309   001A4C  EF28  F00D         	goto	l237
 11310   001A50                     l231:
 11311   001A50                     l237:
 11312   001A50  0012               	return		;funcret
 11313   001A52                     __end_of_APP_CheckLights:
 11314                           	callstack 0
 11315                           
 11316 ;; *************** function _ADC_u16GetConversion *****************
 11317 ;; Defined at:
 11318 ;;		line 74 in file "MCAL/ADC/ADC.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  Copy_stADC      1   11[COMRAM] PTR struct .
 11321 ;;		 -> ADC(4), 
 11322 ;;  channel         1   12[COMRAM] unsigned char 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;  result          2   13[COMRAM] unsigned short 
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  2   11[COMRAM] unsigned short 
 11327 ;; Registers used:
 11328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11338 ;;Total ram usage:        4 bytes
 11339 ;; Hardware stack levels used: 1
 11340 ;; Hardware stack levels required when called: 3
 11341 ;; This function calls:
 11342 ;;		_ADC_ChannelConfig
 11343 ;;		_ADC_u16GetConversionResult
 11344 ;;		_ADC_voidStatrtConversion
 11345 ;; This function is called by:
 11346 ;;		_APP_CheckLights
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text57
 11351   003686                     __ptext57:
 11352                           	callstack 0
 11353   003686                     _ADC_u16GetConversion:
 11354                           	callstack 26
 11355   003686                     
 11356                           ;MCAL/ADC/ADC.c: 77:     ADC_ChannelConfig(channel);
 11357   003686  500D               	movf	ADC_u16GetConversion@channel^0,w,c
 11358   003688  ECD0  F00F         	call	_ADC_ChannelConfig
 11359   00368C                     
 11360                           ;MCAL/ADC/ADC.c: 78:     ADC_voidStatrtConversion(Copy_stADC);
 11361   00368C  C00C  F001         	movff	ADC_u16GetConversion@Copy_stADC,ADC_voidStatrtConversion@Copy_stADC
 11362   003690  EC60  F01C         	call	_ADC_voidStatrtConversion	;wreg free
 11363   003694                     l524:
 11364                           
 11365                           ;MCAL/ADC/ADC.c: 79:     while (ADCON0bits.GO_nDONE)
 11366   003694  B2C2               	btfsc	194,1,c	;volatile
 11367   003696  EF4F  F01B         	goto	u5011
 11368   00369A  EF51  F01B         	goto	u5010
 11369   00369E                     u5011:
 11370   00369E  EF4A  F01B         	goto	l524
 11371   0036A2                     u5010:
 11372   0036A2                     
 11373                           ;MCAL/ADC/ADC.c: 81:     result = ADC_u16GetConversionResult(Copy_stADC);
 11374   0036A2  C00C  F001         	movff	ADC_u16GetConversion@Copy_stADC,ADC_u16GetConversionResult@Copy_stADC
 11375   0036A6  EC9E  F01A         	call	_ADC_u16GetConversionResult	;wreg free
 11376   0036AA  C001  F00E         	movff	?_ADC_u16GetConversionResult,ADC_u16GetConversion@result
 11377   0036AE  C002  F00F         	movff	?_ADC_u16GetConversionResult+1,ADC_u16GetConversion@result+1
 11378   0036B2                     
 11379                           ;MCAL/ADC/ADC.c: 82:     return result;
 11380   0036B2  C00E  F00C         	movff	ADC_u16GetConversion@result,?_ADC_u16GetConversion
 11381   0036B6  C00F  F00D         	movff	ADC_u16GetConversion@result+1,?_ADC_u16GetConversion+1
 11382   0036BA  0012               	return		;funcret
 11383   0036BC                     __end_of_ADC_u16GetConversion:
 11384                           	callstack 0
 11385                           
 11386 ;; *************** function _ADC_voidStatrtConversion *****************
 11387 ;; Defined at:
 11388 ;;		line 52 in file "MCAL/ADC/ADC.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;  Copy_stADC      1    0[COMRAM] PTR struct .
 11391 ;;		 -> ADC(4), 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;		None
 11394 ;; Return value:  Size  Location     Type
 11395 ;;                  1    wreg      void 
 11396 ;; Registers used:
 11397 ;;		None
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11403 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;Total ram usage:        1 bytes
 11408 ;; Hardware stack levels used: 1
 11409 ;; Hardware stack levels required when called: 1
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_ADC_u16GetConversion
 11414 ;;		_ADC_voidSelectChannel
 11415 ;; This function uses a non-reentrant model
 11416 ;;
 11417                           
 11418                           	psect	text58
 11419   0038C0                     __ptext58:
 11420                           	callstack 0
 11421   0038C0                     _ADC_voidStatrtConversion:
 11422                           	callstack 27
 11423   0038C0                     
 11424                           ;MCAL/ADC/ADC.c: 52: void ADC_voidStatrtConversion(ADC_congig_t *Copy_stADC);MCAL/ADC/AD
      +                          C.c: 53: {;MCAL/ADC/ADC.c: 54:     (ADCON0bits.GO_nDONE = 1);
 11425   0038C0  82C2               	bsf	194,1,c	;volatile
 11426   0038C2  0012               	return		;funcret
 11427   0038C4                     __end_of_ADC_voidStatrtConversion:
 11428                           	callstack 0
 11429                           
 11430 ;; *************** function _ADC_u16GetConversionResult *****************
 11431 ;; Defined at:
 11432 ;;		line 62 in file "MCAL/ADC/ADC.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  Copy_stADC      1    0[COMRAM] PTR struct .
 11435 ;;		 -> ADC(4), 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;		None
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  2    0[COMRAM] unsigned short 
 11440 ;; Registers used:
 11441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11447 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11450 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11451 ;;Total ram usage:        4 bytes
 11452 ;; Hardware stack levels used: 1
 11453 ;; Hardware stack levels required when called: 1
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_ADC_u16GetConversion
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text59
 11462   00353C                     __ptext59:
 11463                           	callstack 0
 11464   00353C                     _ADC_u16GetConversionResult:
 11465                           	callstack 27
 11466   00353C                     
 11467                           ;MCAL/ADC/ADC.c: 62: u16 ADC_u16GetConversionResult(ADC_congig_t *Copy_stADC);MCAL/ADC/A
      +                          DC.c: 63: {;MCAL/ADC/ADC.c: 64:     if (0x01 == Copy_stADC->ResultFormat)
 11468   00353C  5001               	movf	ADC_u16GetConversionResult@Copy_stADC^0,w,c
 11469   00353E  6ED9               	movwf	fsr2l,c
 11470   003540  6ADA               	clrf	fsr2h,c
 11471   003542  0E03               	movlw	3
 11472   003544  26D9               	addwf	fsr2l,f,c
 11473   003546  A2DF               	btfss	indf2,1,c
 11474   003548  EFA8  F01A         	goto	u4611
 11475   00354C  EFAA  F01A         	goto	u4610
 11476   003550                     u4611:
 11477   003550  EFB5  F01A         	goto	l5442
 11478   003554                     u4610:
 11479   003554                     
 11480                           ;MCAL/ADC/ADC.c: 65:     {;MCAL/ADC/ADC.c: 66:         return ((ADRESH << 8) + ADRESL);
 11481   003554  50C4               	movf	196,w,c	;volatile
 11482   003556  6E04               	movwf	(??_ADC_u16GetConversionResult+1)^0,c
 11483   003558  6A03               	clrf	??_ADC_u16GetConversionResult^0,c
 11484   00355A  50C3               	movf	195,w,c	;volatile
 11485   00355C  2403               	addwf	??_ADC_u16GetConversionResult^0,w,c
 11486   00355E  6E01               	movwf	?_ADC_u16GetConversionResult^0,c
 11487   003560  0E00               	movlw	0
 11488   003562  2004               	addwfc	(??_ADC_u16GetConversionResult+1)^0,w,c
 11489   003564  6E02               	movwf	(?_ADC_u16GetConversionResult+1)^0,c
 11490   003566  EFC2  F01A         	goto	l520
 11491   00356A                     l5442:
 11492                           
 11493                           ;MCAL/ADC/ADC.c: 69:     {;MCAL/ADC/ADC.c: 70:         return (ADRESH << 2);
 11494   00356A  50C4               	movf	196,w,c	;volatile
 11495   00356C  6E03               	movwf	??_ADC_u16GetConversionResult^0,c
 11496   00356E  6A04               	clrf	(??_ADC_u16GetConversionResult+1)^0,c
 11497   003570  90D8               	bcf	status,0,c
 11498   003572  3603               	rlcf	??_ADC_u16GetConversionResult^0,f,c
 11499   003574  3604               	rlcf	(??_ADC_u16GetConversionResult+1)^0,f,c
 11500   003576  90D8               	bcf	status,0,c
 11501   003578  3603               	rlcf	??_ADC_u16GetConversionResult^0,f,c
 11502   00357A  3604               	rlcf	(??_ADC_u16GetConversionResult+1)^0,f,c
 11503   00357C  C003  F001         	movff	??_ADC_u16GetConversionResult,?_ADC_u16GetConversionResult
 11504   003580  C004  F002         	movff	??_ADC_u16GetConversionResult+1,?_ADC_u16GetConversionResult+1
 11505   003584                     l520:
 11506   003584  0012               	return		;funcret
 11507   003586                     __end_of_ADC_u16GetConversionResult:
 11508                           	callstack 0
 11509                           
 11510 ;; *************** function _ADC_ChannelConfig *****************
 11511 ;; Defined at:
 11512 ;;		line 85 in file "MCAL/ADC/ADC.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  channel         1    wreg     enum E2570
 11515 ;; Auto vars:     Size  Location     Type
 11516 ;;  channel         1   10[COMRAM] enum E2570
 11517 ;; Return value:  Size  Location     Type
 11518 ;;                  1    wreg      void 
 11519 ;; Registers used:
 11520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11521 ;; Tracked objects:
 11522 ;;		On entry : 0/0
 11523 ;;		On exit  : 0/0
 11524 ;;		Unchanged: 0/0
 11525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11530 ;;Total ram usage:        3 bytes
 11531 ;; Hardware stack levels used: 1
 11532 ;; Hardware stack levels required when called: 2
 11533 ;; This function calls:
 11534 ;;		_GPIO_VoidSetPinDirection
 11535 ;; This function is called by:
 11536 ;;		_ADC_voidADCInit
 11537 ;;		_ADC_u16GetConversion
 11538 ;;		_ADC_voidSelectChannel
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text60
 11543   001FA0                     __ptext60:
 11544                           	callstack 0
 11545   001FA0                     _ADC_ChannelConfig:
 11546                           	callstack 26
 11547                           
 11548                           ;incstack = 0
 11549                           ;ADC_ChannelConfig@channel stored from wreg
 11550   001FA0  6E0B               	movwf	ADC_ChannelConfig@channel^0,c
 11551   001FA2                     
 11552                           ;MCAL/ADC/ADC.c: 85: static void ADC_ChannelConfig(ADC_Channel_Select_t channel);MCAL/AD
      +                          C/ADC.c: 86: {;MCAL/ADC/ADC.c: 87:     ADCON0bits.CHS = channel;
 11553   001FA2  C00B  F009         	movff	ADC_ChannelConfig@channel,??_ADC_ChannelConfig
 11554   001FA6  4609               	rlncf	??_ADC_ChannelConfig^0,f,c
 11555   001FA8  4609               	rlncf	??_ADC_ChannelConfig^0,f,c
 11556   001FAA  50C2               	movf	194,w,c	;volatile
 11557   001FAC  1809               	xorwf	??_ADC_ChannelConfig^0,w,c
 11558   001FAE  0BC3               	andlw	-61
 11559   001FB0  1809               	xorwf	??_ADC_ChannelConfig^0,w,c
 11560   001FB2  6EC2               	movwf	194,c	;volatile
 11561                           
 11562                           ;MCAL/ADC/ADC.c: 88:     switch (channel)
 11563   001FB4  EF4F  F010         	goto	l5420
 11564   001FB8                     l5394:
 11565                           
 11566                           ;MCAL/ADC/ADC.c: 91:         GPIO_VoidSetPinDirection(PORTA, 0, 1);
 11567   001FB8  0E00               	movlw	0
 11568   001FBA  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11569   001FBC  0E01               	movlw	1
 11570   001FBE  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11571   001FC0  5080               	movf	128,w,c	;volatile
 11572   001FC2  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11573                           
 11574                           ;MCAL/ADC/ADC.c: 92:         break;
 11575   001FC6  EF90  F010         	goto	l545
 11576   001FCA                     l5396:
 11577                           
 11578                           ;MCAL/ADC/ADC.c: 94:         GPIO_VoidSetPinDirection(PORTA, 1, 1);
 11579   001FCA  0E01               	movlw	1
 11580   001FCC  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11581   001FCE  0E01               	movlw	1
 11582   001FD0  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11583   001FD2  5080               	movf	128,w,c	;volatile
 11584   001FD4  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11585                           
 11586                           ;MCAL/ADC/ADC.c: 95:         break;
 11587   001FD8  EF90  F010         	goto	l545
 11588   001FDC                     l5398:
 11589                           
 11590                           ;MCAL/ADC/ADC.c: 97:         GPIO_VoidSetPinDirection(PORTA, 2, 1);
 11591   001FDC  0E02               	movlw	2
 11592   001FDE  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11593   001FE0  0E01               	movlw	1
 11594   001FE2  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11595   001FE4  5080               	movf	128,w,c	;volatile
 11596   001FE6  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11597                           
 11598                           ;MCAL/ADC/ADC.c: 98:         break;
 11599   001FEA  EF90  F010         	goto	l545
 11600   001FEE                     l5400:
 11601                           
 11602                           ;MCAL/ADC/ADC.c: 100:         GPIO_VoidSetPinDirection(PORTA, 3, 1);
 11603   001FEE  0E03               	movlw	3
 11604   001FF0  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11605   001FF2  0E01               	movlw	1
 11606   001FF4  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11607   001FF6  5080               	movf	128,w,c	;volatile
 11608   001FF8  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11609                           
 11610                           ;MCAL/ADC/ADC.c: 101:         break;
 11611   001FFC  EF90  F010         	goto	l545
 11612   002000                     l5402:
 11613                           
 11614                           ;MCAL/ADC/ADC.c: 103:         GPIO_VoidSetPinDirection(PORTA, 5, 1);
 11615   002000  0E05               	movlw	5
 11616   002002  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11617   002004  0E01               	movlw	1
 11618   002006  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11619   002008  5080               	movf	128,w,c	;volatile
 11620   00200A  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11621   00200E                     l537:
 11622                           
 11623                           ;MCAL/ADC/ADC.c: 105:         GPIO_VoidSetPinDirection(PORTE, 0, 1);
 11624   00200E  0E00               	movlw	0
 11625   002010  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11626   002012  0E01               	movlw	1
 11627   002014  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11628   002016  5084               	movf	132,w,c	;volatile
 11629   002018  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11630                           
 11631                           ;MCAL/ADC/ADC.c: 106:         break;
 11632   00201C  EF90  F010         	goto	l545
 11633   002020                     l5404:
 11634                           
 11635                           ;MCAL/ADC/ADC.c: 108:         GPIO_VoidSetPinDirection(PORTE, 1, 1);
 11636   002020  0E01               	movlw	1
 11637   002022  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11638   002024  0E01               	movlw	1
 11639   002026  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11640   002028  5084               	movf	132,w,c	;volatile
 11641   00202A  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11642                           
 11643                           ;MCAL/ADC/ADC.c: 109:         break;
 11644   00202E  EF90  F010         	goto	l545
 11645   002032                     l5406:
 11646                           
 11647                           ;MCAL/ADC/ADC.c: 111:         GPIO_VoidSetPinDirection(PORTE, 2, 1);
 11648   002032  0E02               	movlw	2
 11649   002034  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11650   002036  0E01               	movlw	1
 11651   002038  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11652   00203A  5084               	movf	132,w,c	;volatile
 11653   00203C  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11654                           
 11655                           ;MCAL/ADC/ADC.c: 112:         break;
 11656   002040  EF90  F010         	goto	l545
 11657   002044                     l5408:
 11658                           
 11659                           ;MCAL/ADC/ADC.c: 114:         GPIO_VoidSetPinDirection(PORTB, 2, 1);
 11660   002044  0E02               	movlw	2
 11661   002046  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11662   002048  0E01               	movlw	1
 11663   00204A  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11664   00204C  5081               	movf	129,w,c	;volatile
 11665   00204E  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11666                           
 11667                           ;MCAL/ADC/ADC.c: 115:         break;
 11668   002052  EF90  F010         	goto	l545
 11669   002056                     l5410:
 11670                           
 11671                           ;MCAL/ADC/ADC.c: 117:         GPIO_VoidSetPinDirection(PORTB, 3, 1);
 11672   002056  0E03               	movlw	3
 11673   002058  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11674   00205A  0E01               	movlw	1
 11675   00205C  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11676   00205E  5081               	movf	129,w,c	;volatile
 11677   002060  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11678                           
 11679                           ;MCAL/ADC/ADC.c: 118:         break;
 11680   002064  EF90  F010         	goto	l545
 11681   002068                     l5412:
 11682                           
 11683                           ;MCAL/ADC/ADC.c: 120:         GPIO_VoidSetPinDirection(PORTB, 1, 1);
 11684   002068  0E01               	movlw	1
 11685   00206A  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11686   00206C  0E01               	movlw	1
 11687   00206E  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11688   002070  5081               	movf	129,w,c	;volatile
 11689   002072  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11690                           
 11691                           ;MCAL/ADC/ADC.c: 121:         break;
 11692   002076  EF90  F010         	goto	l545
 11693   00207A                     l5414:
 11694                           
 11695                           ;MCAL/ADC/ADC.c: 123:         GPIO_VoidSetPinDirection(PORTB, 4, 1);
 11696   00207A  0E04               	movlw	4
 11697   00207C  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11698   00207E  0E01               	movlw	1
 11699   002080  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11700   002082  5081               	movf	129,w,c	;volatile
 11701   002084  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11702                           
 11703                           ;MCAL/ADC/ADC.c: 124:         break;
 11704   002088  EF90  F010         	goto	l545
 11705   00208C                     l5416:
 11706                           
 11707                           ;MCAL/ADC/ADC.c: 126:         GPIO_VoidSetPinDirection(PORTB, 0, 1);
 11708   00208C  0E00               	movlw	0
 11709   00208E  6E01               	movwf	GPIO_VoidSetPinDirection@Copy_u8Pin^0,c
 11710   002090  0E01               	movlw	1
 11711   002092  6E02               	movwf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,c
 11712   002094  5081               	movf	129,w,c	;volatile
 11713   002096  EC66  F015         	call	_GPIO_VoidSetPinDirection
 11714                           
 11715                           ;MCAL/ADC/ADC.c: 127:         break;
 11716   00209A  EF90  F010         	goto	l545
 11717   00209E                     l5420:
 11718   00209E  500B               	movf	ADC_ChannelConfig@channel^0,w,c
 11719   0020A0  6E09               	movwf	??_ADC_ChannelConfig^0,c
 11720   0020A2  6A0A               	clrf	(??_ADC_ChannelConfig+1)^0,c
 11721                           
 11722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11723                           ; Switch size 1, requested type "simple"
 11724                           ; Number of cases is 1, Range of values is 0 to 0
 11725                           ; switch strategies available:
 11726                           ; Name         Instructions Cycles
 11727                           ; simple_byte            4     3 (average)
 11728                           ;	Chosen strategy is simple_byte
 11729   0020A4  500A               	movf	(??_ADC_ChannelConfig+1)^0,w,c
 11730   0020A6  0A00               	xorlw	0	; case 0
 11731   0020A8  B4D8               	btfsc	status,2,c
 11732   0020AA  EF59  F010         	goto	l7222
 11733   0020AE  EF90  F010         	goto	l545
 11734   0020B2                     l7222:
 11735                           
 11736                           ; Switch size 1, requested type "simple"
 11737                           ; Number of cases is 13, Range of values is 0 to 12
 11738                           ; switch strategies available:
 11739                           ; Name         Instructions Cycles
 11740                           ; simple_byte           40    21 (average)
 11741                           ;	Chosen strategy is simple_byte
 11742   0020B2  5009               	movf	??_ADC_ChannelConfig^0,w,c
 11743   0020B4  0A00               	xorlw	0	; case 0
 11744   0020B6  B4D8               	btfsc	status,2,c
 11745   0020B8  EFDC  F00F         	goto	l5394
 11746   0020BC  0A01               	xorlw	1	; case 1
 11747   0020BE  B4D8               	btfsc	status,2,c
 11748   0020C0  EFE5  F00F         	goto	l5396
 11749   0020C4  0A03               	xorlw	3	; case 2
 11750   0020C6  B4D8               	btfsc	status,2,c
 11751   0020C8  EFEE  F00F         	goto	l5398
 11752   0020CC  0A01               	xorlw	1	; case 3
 11753   0020CE  B4D8               	btfsc	status,2,c
 11754   0020D0  EFF7  F00F         	goto	l5400
 11755   0020D4  0A07               	xorlw	7	; case 4
 11756   0020D6  B4D8               	btfsc	status,2,c
 11757   0020D8  EF00  F010         	goto	l5402
 11758   0020DC  0A01               	xorlw	1	; case 5
 11759   0020DE  B4D8               	btfsc	status,2,c
 11760   0020E0  EF07  F010         	goto	l537
 11761   0020E4  0A03               	xorlw	3	; case 6
 11762   0020E6  B4D8               	btfsc	status,2,c
 11763   0020E8  EF10  F010         	goto	l5404
 11764   0020EC  0A01               	xorlw	1	; case 7
 11765   0020EE  B4D8               	btfsc	status,2,c
 11766   0020F0  EF19  F010         	goto	l5406
 11767   0020F4  0A0F               	xorlw	15	; case 8
 11768   0020F6  B4D8               	btfsc	status,2,c
 11769   0020F8  EF22  F010         	goto	l5408
 11770   0020FC  0A01               	xorlw	1	; case 9
 11771   0020FE  B4D8               	btfsc	status,2,c
 11772   002100  EF2B  F010         	goto	l5410
 11773   002104  0A03               	xorlw	3	; case 10
 11774   002106  B4D8               	btfsc	status,2,c
 11775   002108  EF34  F010         	goto	l5412
 11776   00210C  0A01               	xorlw	1	; case 11
 11777   00210E  B4D8               	btfsc	status,2,c
 11778   002110  EF3D  F010         	goto	l5414
 11779   002114  0A07               	xorlw	7	; case 12
 11780   002116  B4D8               	btfsc	status,2,c
 11781   002118  EF46  F010         	goto	l5416
 11782   00211C  EF90  F010         	goto	l545
 11783   002120                     l545:
 11784   002120  0012               	return		;funcret
 11785   002122                     __end_of_ADC_ChannelConfig:
 11786                           	callstack 0
 11787                           
 11788 ;; *************** function _GPIO_VoidSetPinDirection *****************
 11789 ;; Defined at:
 11790 ;;		line 23 in file "MCAL/GPIO/GPIO_Program.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  Copy_u8Port     1    wreg     unsigned char 
 11793 ;;  Copy_u8Pin      1    0[COMRAM] unsigned char 
 11794 ;;  Copy_u8Direc    1    1[COMRAM] unsigned char 
 11795 ;; Auto vars:     Size  Location     Type
 11796 ;;  Copy_u8Port     1    7[COMRAM] unsigned char 
 11797 ;; Return value:  Size  Location     Type
 11798 ;;                  1    wreg      void 
 11799 ;; Registers used:
 11800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11801 ;; Tracked objects:
 11802 ;;		On entry : 0/0
 11803 ;;		On exit  : 0/0
 11804 ;;		Unchanged: 0/0
 11805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11810 ;;Total ram usage:        8 bytes
 11811 ;; Hardware stack levels used: 1
 11812 ;; Hardware stack levels required when called: 1
 11813 ;; This function calls:
 11814 ;;		Nothing
 11815 ;; This function is called by:
 11816 ;;		_KEYPAD_voidKeyPadInt
 11817 ;;		_LCD4Bit_voidLCD_Init
 11818 ;;		_LED_voidLedInt
 11819 ;;		_ADC_ChannelConfig
 11820 ;;		_DCMOTOR_voidDcMotorInt
 11821 ;;		_LCD8Bit_voidLCD_Init
 11822 ;;		_CCP_PWM_ModeConfig
 11823 ;;		_SPI_ModeConfig
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text61
 11828   002ACC                     __ptext61:
 11829                           	callstack 0
 11830   002ACC                     _GPIO_VoidSetPinDirection:
 11831                           	callstack 27
 11832                           
 11833                           ;incstack = 0
 11834                           ;GPIO_VoidSetPinDirection@Copy_u8Port stored from wreg
 11835   002ACC  6E08               	movwf	GPIO_VoidSetPinDirection@Copy_u8Port^0,c
 11836   002ACE                     
 11837                           ;MCAL/GPIO/GPIO_Program.c: 25:     switch (Copy_u8Direction) {
 11838   002ACE  EFA8  F015         	goto	l4840
 11839   002AD2                     l4834:
 11840                           
 11841                           ;MCAL/GPIO/GPIO_Program.c: 27:             (*tris_registers[Copy_u8Port] |= (1<<Copy_u8P
      +                          in));
 11842   002AD2  C001  F003         	movff	GPIO_VoidSetPinDirection@Copy_u8Pin,??_GPIO_VoidSetPinDirection
 11843   002AD6  0E01               	movlw	1
 11844   002AD8  6E04               	movwf	(??_GPIO_VoidSetPinDirection+1)^0,c
 11845   002ADA  2A03               	incf	??_GPIO_VoidSetPinDirection^0,f,c
 11846   002ADC  EF72  F015         	goto	u3674
 11847   002AE0                     u3675:
 11848   002AE0  90D8               	bcf	status,0,c
 11849   002AE2  3604               	rlcf	(??_GPIO_VoidSetPinDirection+1)^0,f,c
 11850   002AE4                     u3674:
 11851   002AE4  2E03               	decfsz	??_GPIO_VoidSetPinDirection^0,f,c
 11852   002AE6  EF70  F015         	goto	u3675
 11853   002AEA  5008               	movf	GPIO_VoidSetPinDirection@Copy_u8Port^0,w,c
 11854   002AEC  0D02               	mullw	2
 11855   002AEE  50F3               	movf	243,w,c
 11856   002AF0  0FA4               	addlw	low _tris_registers
 11857   002AF2  6ED9               	movwf	fsr2l,c
 11858   002AF4  6ADA               	clrf	fsr2h,c
 11859   002AF6  CFDE F005          	movff	postinc2,??_GPIO_VoidSetPinDirection+2
 11860   002AFA  CFDD F006          	movff	postdec2,??_GPIO_VoidSetPinDirection+3
 11861   002AFE  C005  FFD9         	movff	??_GPIO_VoidSetPinDirection+2,fsr2l
 11862   002B02  C006  FFDA         	movff	??_GPIO_VoidSetPinDirection+3,fsr2h
 11863   002B06  5004               	movf	(??_GPIO_VoidSetPinDirection+1)^0,w,c
 11864   002B08  12DF               	iorwf	indf2,f,c
 11865                           
 11866                           ;MCAL/GPIO/GPIO_Program.c: 28:             break;
 11867   002B0A  EFBD  F015         	goto	l784
 11868   002B0E                     l4836:
 11869                           
 11870                           ;MCAL/GPIO/GPIO_Program.c: 30:             (*tris_registers[Copy_u8Port] &= ~(1<<Copy_u8
      +                          Pin));
 11871   002B0E  C001  F003         	movff	GPIO_VoidSetPinDirection@Copy_u8Pin,??_GPIO_VoidSetPinDirection
 11872   002B12  0E01               	movlw	1
 11873   002B14  6E04               	movwf	(??_GPIO_VoidSetPinDirection+1)^0,c
 11874   002B16  2A03               	incf	??_GPIO_VoidSetPinDirection^0,f,c
 11875   002B18  EF90  F015         	goto	u3684
 11876   002B1C                     u3685:
 11877   002B1C  90D8               	bcf	status,0,c
 11878   002B1E  3604               	rlcf	(??_GPIO_VoidSetPinDirection+1)^0,f,c
 11879   002B20                     u3684:
 11880   002B20  2E03               	decfsz	??_GPIO_VoidSetPinDirection^0,f,c
 11881   002B22  EF8E  F015         	goto	u3685
 11882   002B26  5004               	movf	(??_GPIO_VoidSetPinDirection+1)^0,w,c
 11883   002B28  0AFF               	xorlw	255
 11884   002B2A  6E05               	movwf	(??_GPIO_VoidSetPinDirection+2)^0,c
 11885   002B2C  5008               	movf	GPIO_VoidSetPinDirection@Copy_u8Port^0,w,c
 11886   002B2E  0D02               	mullw	2
 11887   002B30  50F3               	movf	243,w,c
 11888   002B32  0FA4               	addlw	low _tris_registers
 11889   002B34  6ED9               	movwf	fsr2l,c
 11890   002B36  6ADA               	clrf	fsr2h,c
 11891   002B38  CFDE F006          	movff	postinc2,??_GPIO_VoidSetPinDirection+3
 11892   002B3C  CFDD F007          	movff	postdec2,??_GPIO_VoidSetPinDirection+4
 11893   002B40  C006  FFD9         	movff	??_GPIO_VoidSetPinDirection+3,fsr2l
 11894   002B44  C007  FFDA         	movff	??_GPIO_VoidSetPinDirection+4,fsr2h
 11895   002B48  5005               	movf	(??_GPIO_VoidSetPinDirection+2)^0,w,c
 11896   002B4A  16DF               	andwf	indf2,f,c
 11897                           
 11898                           ;MCAL/GPIO/GPIO_Program.c: 32:             break;
 11899   002B4C  EFBD  F015         	goto	l784
 11900   002B50                     l4840:
 11901   002B50  5002               	movf	GPIO_VoidSetPinDirection@Copy_u8Direction^0,w,c
 11902   002B52  6E03               	movwf	??_GPIO_VoidSetPinDirection^0,c
 11903   002B54  6A04               	clrf	(??_GPIO_VoidSetPinDirection+1)^0,c
 11904                           
 11905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11906                           ; Switch size 1, requested type "simple"
 11907                           ; Number of cases is 1, Range of values is 0 to 0
 11908                           ; switch strategies available:
 11909                           ; Name         Instructions Cycles
 11910                           ; simple_byte            4     3 (average)
 11911                           ;	Chosen strategy is simple_byte
 11912   002B56  5004               	movf	(??_GPIO_VoidSetPinDirection+1)^0,w,c
 11913   002B58  0A00               	xorlw	0	; case 0
 11914   002B5A  B4D8               	btfsc	status,2,c
 11915   002B5C  EFB2  F015         	goto	l7224
 11916   002B60  EFBD  F015         	goto	l784
 11917   002B64                     l7224:
 11918                           
 11919                           ; Switch size 1, requested type "simple"
 11920                           ; Number of cases is 2, Range of values is 0 to 1
 11921                           ; switch strategies available:
 11922                           ; Name         Instructions Cycles
 11923                           ; simple_byte            7     4 (average)
 11924                           ;	Chosen strategy is simple_byte
 11925   002B64  5003               	movf	??_GPIO_VoidSetPinDirection^0,w,c
 11926   002B66  0A00               	xorlw	0	; case 0
 11927   002B68  B4D8               	btfsc	status,2,c
 11928   002B6A  EF87  F015         	goto	l4836
 11929   002B6E  0A01               	xorlw	1	; case 1
 11930   002B70  B4D8               	btfsc	status,2,c
 11931   002B72  EF69  F015         	goto	l4834
 11932   002B76  EFBD  F015         	goto	l784
 11933   002B7A                     l784:
 11934   002B7A  0012               	return		;funcret
 11935   002B7C                     __end_of_GPIO_VoidSetPinDirection:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function _InterruptManger *****************
 11939 ;; Defined at:
 11940 ;;		line 93 in file "MCAL/Interrupt/Interrupt_manger.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;		None
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;		None
 11945 ;; Return value:  Size  Location     Type
 11946 ;;                  1    wreg      void 
 11947 ;; Registers used:
 11948 ;;		None
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;Total ram usage:        0 bytes
 11959 ;; Hardware stack levels used: 1
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		Interrupt level 2
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           	psect	intcode
 11968   000008                     __pintcode:
 11969                           	callstack 0
 11970   000008                     _InterruptManger:
 11971                           	callstack 22
 11972                           
 11973                           ;incstack = 0
 11974   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11975   00000A  ED5D  F01C         	call	int_func,f	;refresh shadow registers
 11976                           
 11977                           	psect	intcode_body
 11978   0038BA                     __pintcode_body:
 11979                           	callstack 22
 11980   0038BA                     int_func:
 11981                           	callstack 22
 11982   0038BA  0006               	pop		; remove dummy address from shadow register refresh
 11983   0038BC  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11984   0038BE  0011               	retfie		f
 11985   0038C0                     __end_of_InterruptManger:
 11986                           	callstack 0
 11987                           
 11988                           	psect	rparam
 11989   000000                     
 11990                           	psect	temp
 11991   00007E                     btemp:
 11992                           	callstack 0
 11993   00007E                     	ds	1
 11994   000000                     int$flags	set	btemp
 11995   000000                     wtemp8	set	btemp+1
 11996   000000                     ttemp5	set	btemp+1
 11997   000000                     ttemp6	set	btemp+4
 11998   000000                     ttemp7	set	btemp+8
 11999                           
 12000                           	psect	config
 12001                           
 12002                           ; Padding undefined space
 12003   300000                     	org	3145728
 12004   300000  FF                 	db	255
 12005                           
 12006                           ;Config register CONFIG1H @ 0x300001
 12007                           ;	Oscillator Selection bits
 12008                           ;	OSC = HS, HS oscillator
 12009                           ;	Fail-Safe Clock Monitor Enable bit
 12010                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12011                           ;	Internal/External Oscillator Switchover bit
 12012                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12013   300001                     	org	3145729
 12014   300001  02                 	db	2
 12015                           
 12016                           ;Config register CONFIG2L @ 0x300002
 12017                           ;	Power-up Timer Enable bit
 12018                           ;	PWRT = OFF, PWRT disabled
 12019                           ;	Brown-out Reset Enable bits
 12020                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 12021                           ;	Brown Out Reset Voltage bits
 12022                           ;	BORV = 3, Minimum setting
 12023   300002                     	org	3145730
 12024   300002  19                 	db	25
 12025                           
 12026                           ;Config register CONFIG2H @ 0x300003
 12027                           ;	Watchdog Timer Enable bit
 12028                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12029                           ;	Watchdog Timer Postscale Select bits
 12030                           ;	WDTPS = 2048, 1:2048
 12031   300003                     	org	3145731
 12032   300003  16                 	db	22
 12033                           
 12034                           ; Padding undefined space
 12035   300004                     	org	3145732
 12036   300004  FF                 	db	255
 12037                           
 12038                           ;Config register CONFIG3H @ 0x300005
 12039                           ;	CCP2 MUX bit
 12040                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12041                           ;	PORTB A/D Enable bit
 12042                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12043                           ;	Low-Power Timer1 Oscillator Enable bit
 12044                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12045                           ;	MCLR Pin Enable bit
 12046                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 12047   300005                     	org	3145733
 12048   300005  01                 	db	1
 12049                           
 12050                           ;Config register CONFIG4L @ 0x300006
 12051                           ;	Stack Full/Underflow Reset Enable bit
 12052                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12053                           ;	Single-Supply ICSP Enable bit
 12054                           ;	LVP = OFF, Single-Supply ICSP disabled
 12055                           ;	Extended Instruction Set Enable bit
 12056                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12057                           ;	Background Debugger Enable bit
 12058                           ;	DEBUG = 0x1, unprogrammed default
 12059   300006                     	org	3145734
 12060   300006  80                 	db	128
 12061                           
 12062                           ; Padding undefined space
 12063   300007                     	org	3145735
 12064   300007  FF                 	db	255
 12065                           
 12066                           ;Config register CONFIG5L @ 0x300008
 12067                           ;	Code Protection bit
 12068                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12069                           ;	Code Protection bit
 12070                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12071                           ;	Code Protection bit
 12072                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12073                           ;	Code Protection bit
 12074                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12075   300008                     	org	3145736
 12076   300008  0F                 	db	15
 12077                           
 12078                           ;Config register CONFIG5H @ 0x300009
 12079                           ;	Boot Block Code Protection bit
 12080                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12081                           ;	Data EEPROM Code Protection bit
 12082                           ;	CPD = OFF, Data EEPROM not code-protected
 12083   300009                     	org	3145737
 12084   300009  C0                 	db	192
 12085                           
 12086                           ;Config register CONFIG6L @ 0x30000A
 12087                           ;	Write Protection bit
 12088                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12089                           ;	Write Protection bit
 12090                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12091                           ;	Write Protection bit
 12092                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12093                           ;	Write Protection bit
 12094                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12095   30000A                     	org	3145738
 12096   30000A  0F                 	db	15
 12097                           
 12098                           ;Config register CONFIG6H @ 0x30000B
 12099                           ;	Configuration Register Write Protection bit
 12100                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12101                           ;	Boot Block Write Protection bit
 12102                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12103                           ;	Data EEPROM Write Protection bit
 12104                           ;	WRTD = OFF, Data EEPROM not write-protected
 12105   30000B                     	org	3145739
 12106   30000B  E0                 	db	224
 12107                           
 12108                           ;Config register CONFIG7L @ 0x30000C
 12109                           ;	Table Read Protection bit
 12110                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12111                           ;	Table Read Protection bit
 12112                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12113                           ;	Table Read Protection bit
 12114                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12115                           ;	Table Read Protection bit
 12116                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12117   30000C                     	org	3145740
 12118   30000C  0F                 	db	15
 12119                           
 12120                           ;Config register CONFIG7H @ 0x30000D
 12121                           ;	Boot Block Table Read Protection bit
 12122                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12123   30000D                     	org	3145741
 12124   30000D  40                 	db	64
 12125                           tosu	equ	0xFFF
 12126                           tosh	equ	0xFFE
 12127                           tosl	equ	0xFFD
 12128                           stkptr	equ	0xFFC
 12129                           pclatu	equ	0xFFB
 12130                           pclath	equ	0xFFA
 12131                           pcl	equ	0xFF9
 12132                           tblptru	equ	0xFF8
 12133                           tblptrh	equ	0xFF7
 12134                           tblptrl	equ	0xFF6
 12135                           tablat	equ	0xFF5
 12136                           prodh	equ	0xFF4
 12137                           prodl	equ	0xFF3
 12138                           indf0	equ	0xFEF
 12139                           postinc0	equ	0xFEE
 12140                           postdec0	equ	0xFED
 12141                           preinc0	equ	0xFEC
 12142                           plusw0	equ	0xFEB
 12143                           fsr0h	equ	0xFEA
 12144                           fsr0l	equ	0xFE9
 12145                           wreg	equ	0xFE8
 12146                           indf1	equ	0xFE7
 12147                           postinc1	equ	0xFE6
 12148                           postdec1	equ	0xFE5
 12149                           preinc1	equ	0xFE4
 12150                           plusw1	equ	0xFE3
 12151                           fsr1h	equ	0xFE2
 12152                           fsr1l	equ	0xFE1
 12153                           bsr	equ	0xFE0
 12154                           indf2	equ	0xFDF
 12155                           postinc2	equ	0xFDE
 12156                           postdec2	equ	0xFDD
 12157                           preinc2	equ	0xFDC
 12158                           plusw2	equ	0xFDB
 12159                           fsr2h	equ	0xFDA
 12160                           fsr2l	equ	0xFD9
 12161                           status	equ	0xFD8

Data Sizes:
    Strings     375
    Constant    0
    Data        103
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     79     125
    BANK0           128      0     128
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_ConversionResultConfig@Copy_stADC	PTR struct . size(1) Largest target is 4
		 -> ADC(BANK0[4]), 

    ADC_u16GetConversion@Copy_stADC	PTR struct . size(1) Largest target is 4
		 -> ADC(BANK0[4]), 

    ADC_u16GetConversionResult@Copy_stADC	PTR struct . size(1) Largest target is 4
		 -> ADC(BANK0[4]), 

    ADC_voidADCInit@Copy_stADC	PTR struct . size(1) Largest target is 4
		 -> ADC(BANK0[4]), 

    ADC_voidStatrtConversion@Copy_stADC	PTR struct . size(1) Largest target is 4
		 -> ADC(BANK0[4]), 

    ADC_VoltageRefConfig@Copy_stADC	PTR struct . size(1) Largest target is 4
		 -> ADC(BANK0[4]), 

    APP_CheckLights@MyData	PTR volatile struct . size(1) Largest target is 4
		 -> Data(COMRAM[4]), 

    BaudRateConfig@Copy_stUsart	PTR const struct . size(1) Largest target is 6
		 -> uart_TX(BANK0[6]), 

    CCP1_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C_MasterMode_CFG@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_SendStuct@MyData	PTR volatile struct . size(1) Largest target is 4
		 -> Data(COMRAM[4]), 

    I2C_SendStuct@ptr	PTR unsigned char  size(1) Largest target is 4
		 -> Data(COMRAM[4]), 

    I2C_SlaveMode_CFG@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_u8ReadByteBlocking@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_u8ReadRegByte@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_u8WriteByteBlocking@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_voidI2CInit@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_voidSendRebeatStartCond@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_voidSendStartCond@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    I2C_voidSendStopCond@Copy_stI2C	PTR const struct . size(1) Largest target is 5
		 -> i2c_obj(COMRAM[5]), 

    KEYPAD_u8KeyPadPressed@Copy_stKeyPad	PTR struct . size(1) Largest target is 16
		 -> KeyPad_1(BANK0[16]), 

    KEYPAD_voidKeyPadInt@Copy_stKeyPad	PTR struct . size(1) Largest target is 16
		 -> KeyPad_1(BANK0[16]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllllhlll[1]), LATB(BITBIGSFRllllhllh[1]), LATC(BITBIGSFRllllhllh[1]), LATD(BITBIGSFRllllhllh[1]), 
		 -> LATE(BITBIGSFRllllhllh[1]), 

    LCD4Bit_voidLCD_Init@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD4Bit_voidSendChar@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD4Bit_voidSendChar_Pos@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD4Bit_voidSendCommand@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD4Bit_voidSendNumber@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD4Bit_voidSendString@Copy_Pu8Str	PTR unsigned char  size(2) Largest target is 21
		 -> LCD4Bit_voidSendNumber@Number(COMRAM[6]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[8]), 
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_14(CODE[12]), STR_15(CODE[13]), 
		 -> STR_16(CODE[6]), STR_17(CODE[3]), STR_18(CODE[10]), STR_19(CODE[11]), 
		 -> STR_2(CODE[12]), STR_20(CODE[6]), STR_21(CODE[3]), STR_22(CODE[17]), 
		 -> STR_23(CODE[12]), STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[8]), 
		 -> STR_27(CODE[8]), STR_28(CODE[15]), STR_29(CODE[9]), STR_3(CODE[21]), 
		 -> STR_30(CODE[16]), STR_31(CODE[8]), STR_32(CODE[5]), STR_33(CODE[15]), 
		 -> STR_34(CODE[7]), STR_35(CODE[7]), STR_36(CODE[5]), STR_37(CODE[9]), 
		 -> STR_4(CODE[13]), STR_5(CODE[18]), STR_6(CODE[17]), STR_7(CODE[16]), 
		 -> STR_8(CODE[11]), STR_9(CODE[17]), 

    LCD4Bit_voidSendString@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD4Bit_voidSendString_Pos@Copy_Pu8Str	PTR unsigned char  size(2) Largest target is 21
		 -> LCD4Bit_voidSendNumber@Number(COMRAM[6]), STR_1(CODE[17]), STR_10(CODE[17]), STR_11(CODE[8]), 
		 -> STR_12(CODE[6]), STR_13(CODE[5]), STR_14(CODE[12]), STR_15(CODE[13]), 
		 -> STR_16(CODE[6]), STR_17(CODE[3]), STR_18(CODE[10]), STR_19(CODE[11]), 
		 -> STR_2(CODE[12]), STR_20(CODE[6]), STR_21(CODE[3]), STR_22(CODE[17]), 
		 -> STR_23(CODE[12]), STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[8]), 
		 -> STR_27(CODE[8]), STR_28(CODE[15]), STR_29(CODE[9]), STR_3(CODE[21]), 
		 -> STR_30(CODE[16]), STR_31(CODE[8]), STR_32(CODE[5]), STR_33(CODE[15]), 
		 -> STR_34(CODE[7]), STR_35(CODE[7]), STR_36(CODE[5]), STR_37(CODE[9]), 
		 -> STR_4(CODE[13]), STR_5(CODE[18]), STR_6(CODE[17]), STR_7(CODE[16]), 
		 -> STR_8(CODE[11]), STR_9(CODE[17]), 

    LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD_voidSend4bit@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD_voidSendEnable_4Bit@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit	PTR struct . size(1) Largest target is 7
		 -> LCD_1(COMRAM[7]), 

    LED_voidLedInt@Copy_stLed	PTR struct . size(1) Largest target is 3
		 -> LED_LOCK(COMRAM[3]), 

    LED_voidLedOff@Copy_stLed	PTR struct . size(1) Largest target is 3
		 -> LED_LOCK(COMRAM[3]), 

    LED_voidLedOn@Copy_stLed	PTR struct . size(1) Largest target is 3
		 -> LED_LOCK(COMRAM[3]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> LCD4Bit_voidSendNumber@Number(COMRAM[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> LCD4Bit_voidSendNumber@Number(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(ABS[1]), PORTB(ABS[1]), PORTC(ABS[1]), PORTD(ABS[1]), 
		 -> PORTE(ABS[1]), 

    rx_config@Copy_stUsart	PTR const struct . size(1) Largest target is 6
		 -> uart_TX(BANK0[6]), 

    S4067$buffer	PTR unsigned char  size(2) Largest target is 0

    S4067$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 6
		 -> LCD4Bit_voidSendNumber@Number(COMRAM[6]), 

    SPI_INTERRUPT_HANDELER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> LCD4Bit_voidSendNumber@Number2(COMRAM[6]), 

    TIMER0_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer2InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllllhlll[1]), TRISB(BITBIGSFRllllhlh[1]), TRISC(BITBIGSFRllllhlh[1]), TRISD(BITBIGSFRllllhlh[1]), 
		 -> TRISE(BITBIGSFRllllhlh[1]), 

    Tx_config@Copy_stUsart	PTR const struct . size(1) Largest target is 6
		 -> uart_TX(BANK0[6]), 

    USART_voidAsynchUsartInit@Copy_stUsart	PTR const struct . size(1) Largest target is 6
		 -> uart_TX(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_38(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_App_SetTemperature
    _LED_voidLedOn->_GPIO_VoidSetPinMode
    _LED_voidLedOff->_GPIO_VoidSetPinMode
    _LCD_ChoisePrint->_APP_Get_Number
    _I2C_u8ReadRegByte->_I2C_u8ReadByteBlocking
    _I2C_u8ReadRegByte->_I2C_u8WriteByteBlocking
    _I2C_SendStuct->_I2C_u8WriteByteBlocking
    _Application_Init->_USART_voidAsynchUsartInit
    _USART_voidAsynchUsartInit->_BaudRateConfig
    _BaudRateConfig->___fltol
    _LED_voidLedInt->_GPIO_VoidSetPinDirection
    _LED_voidLedInt->_GPIO_VoidSetPinMode
    _LCD4Bit_voidLCD_Init->_LCD4Bit_voidSendCommand
    _KEYPAD_voidKeyPadInt->_GPIO_VoidSetPinDirection
    _I2C_voidI2CInit->_I2C_MasterMode_CFG
    _I2C_MasterMode_CFG->___fltol
    ___fltol->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _ADC_voidADCInit->_ADC_ChannelConfig
    _App_SetTemperature->_APP_Get_Number
    _LCD4Bit_voidSendChar_Pos->_LCD_voidSetCursorPos_4Bit
    _APP_Get_Number->_LCD4Bit_voidSendNumber
    _LCD4Bit_voidSendNumber->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD4Bit_voidSendString_Pos->_LCD_voidSetCursorPos_4Bit
    _LCD_voidSetCursorPos_4Bit->_LCD4Bit_voidSendCommand
    _LCD4Bit_voidSendCommand->_LCD_voidSend4bit
    _LCD4Bit_voidSendString->_LCD4Bit_voidSendChar
    _LCD4Bit_voidSendChar->_LCD_voidSend4bit
    _LCD_voidSendEnable_4Bit->_GPIO_VoidSetPinMode
    _LCD_voidSend4bit->_GPIO_VoidSetPinMode
    _KEYPAD_u8KeyPadPressed->_GPIO_VoidSetPinMode
    _APP_CheckLights->_ADC_u16GetConversion
    _ADC_u16GetConversion->_ADC_ChannelConfig
    _ADC_ChannelConfig->_GPIO_VoidSetPinDirection

Critical Paths under _InterruptManger in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManger in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManger in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManger in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManger in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManger in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManger in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManger in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManger in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManger in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManger in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManger in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManger in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManger in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManger in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManger in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManger in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  783234
                                             77 COMRAM     2     2      0
                    _APP_CheckLights
                     _APP_Get_Number
                 _App_SetTemperature
                   _Application_Init
                      _EEPROM_u8Read
                   _EEPROM_voidWrite
                      _I2C_SendStuct
                  _I2C_u8ReadRegByte
             _KEYPAD_u8KeyPadPressed
            _LCD4Bit_voidSendCommand
             _LCD4Bit_voidSendNumber
         _LCD4Bit_voidSendString_Pos
                    _LCD_ChoisePrint
          _LCD_voidSetCursorPos_4Bit
                     _LED_voidLedOff
                      _LED_voidLedOn
 ---------------------------------------------------------------------------------
 (1) _LED_voidLedOn                                        3     2      1    4856
                                              8 COMRAM     3     2      1
                _GPIO_VoidSetPinMode
 ---------------------------------------------------------------------------------
 (1) _LED_voidLedOff                                       3     2      1    4856
                                              8 COMRAM     3     2      1
                _GPIO_VoidSetPinMode
 ---------------------------------------------------------------------------------
 (1) _LCD_ChoisePrint                                      1     1      0  232921
                                             74 COMRAM     1     1      0
                     _APP_Get_Number
            _LCD4Bit_voidSendCommand
             _LCD4Bit_voidSendNumber
         _LCD4Bit_voidSendString_Pos
          _LCD_voidSetCursorPos_4Bit
 ---------------------------------------------------------------------------------
 (1) _I2C_u8ReadRegByte                                    4     1      3    4670
                                              3 COMRAM     4     1      3
             _I2C_u8ReadByteBlocking
            _I2C_u8WriteByteBlocking
        _I2C_voidSendRebeatStartCond
              _I2C_voidSendStartCond
               _I2C_voidSendStopCond
 ---------------------------------------------------------------------------------
 (2) _I2C_voidSendRebeatStartCond                          1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _I2C_u8ReadByteBlocking                               3     1      2     242
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _I2C_SendStuct                                        6     5      1    2659
                                              3 COMRAM     6     5      1
            _I2C_u8WriteByteBlocking
              _I2C_voidSendStartCond
               _I2C_voidSendStopCond
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_voidSendStopCond                                 1     0      1     250
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _I2C_voidSendStartCond                                1     0      1     250
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _I2C_u8WriteByteBlocking                              3     1      2    1284
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _EEPROM_voidWrite                                     4     1      3     546
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_u8Read                                        2     0      2     348
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Application_Init                                     0     0      0   69347
                    _ADC_voidADCInit
                    _I2C_voidI2CInit
               _KEYPAD_voidKeyPadInt
               _LCD4Bit_voidLCD_Init
                     _LED_voidLedInt
          _USART_voidAsynchUsartInit
 ---------------------------------------------------------------------------------
 (2) _USART_voidAsynchUsartInit                            1     0      1    8579
                                             76 COMRAM     1     0      1
                     _BaudRateConfig
                          _Tx_config
                          _rx_config
 ---------------------------------------------------------------------------------
 (3) _rx_config                                            3     2      1     120
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Tx_config                                            3     2      1     120
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _BaudRateConfig                                      11    10      1    8131
                                             65 COMRAM    11    10      1
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _LED_voidLedInt                                       3     2      1   11242
                                              8 COMRAM     3     2      1
           _GPIO_VoidSetPinDirection
                _GPIO_VoidSetPinMode
 ---------------------------------------------------------------------------------
 (2) _LCD4Bit_voidLCD_Init                                 2     1      1   27846
                                             12 COMRAM     2     1      1
           _GPIO_VoidSetPinDirection
            _LCD4Bit_voidSendCommand
 ---------------------------------------------------------------------------------
 (2) _KEYPAD_voidKeyPadInt                                 3     2      1    6686
                                              8 COMRAM     3     2      1
           _GPIO_VoidSetPinDirection
 ---------------------------------------------------------------------------------
 (2) _I2C_voidI2CInit                                      3     2      1    8204
                                             68 COMRAM     3     2      1
                 _I2C_MasterMode_CFG
                  _I2C_SlaveMode_CFG
 ---------------------------------------------------------------------------------
 (3) _I2C_SlaveMode_CFG                                    2     1      1      98
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterMode_CFG                                   3     2      1    7832
                                             65 COMRAM     3     2      1
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1116
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     631
                                             55 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2923
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3020
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_voidADCInit                                      2     1      1    6790
                                             11 COMRAM     2     1      1
                  _ADC_ChannelConfig
         _ADC_ConversionResultConfig
               _ADC_VoltageRefConfig
 ---------------------------------------------------------------------------------
 (3) _ADC_VoltageRefConfig                                 1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _ADC_ConversionResultConfig                           1     0      1      98
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _App_SetTemperature                                   3     3      0  216279
                                             74 COMRAM     3     3      0
                     _APP_Get_Number
           _LCD4Bit_voidSendChar_Pos
            _LCD4Bit_voidSendCommand
         _LCD4Bit_voidSendString_Pos
          _LCD_voidSetCursorPos_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD4Bit_voidSendChar_Pos                             4     0      4   44129
                                             17 COMRAM     4     0      4
               _LCD4Bit_voidSendChar
          _LCD_voidSetCursorPos_4Bit
 ---------------------------------------------------------------------------------
 (2) _APP_Get_Number                                       9     7      2   68407
                                             65 COMRAM     9     7      2
             _KEYPAD_u8KeyPadPressed
             _LCD4Bit_voidSendNumber
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1363
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD4Bit_voidSendNumber                              18    13      5   60749
                                             47 COMRAM    18    13      5
         _LCD4Bit_voidSendString_Pos
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             20    15      5    3287
                                             29 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     2      4    2936
                                             23 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13    10      3    2586
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               6     1      5     324
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (2) _LCD4Bit_voidSendString_Pos                           5     0      5   55292
                                             17 COMRAM     5     0      5
             _LCD4Bit_voidSendString
          _LCD_voidSetCursorPos_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_voidSetCursorPos_4Bit                            5     2      3   27505
                                             12 COMRAM     5     2      3
            _LCD4Bit_voidSendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD4Bit_voidSendCommand                              2     0      2   20922
                                             10 COMRAM     2     0      2
                _GPIO_VoidSetPinMode
                   _LCD_voidSend4bit
            _LCD_voidSendEnable_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD4Bit_voidSendString                               3     0      3   16125
                                             12 COMRAM     3     0      3
               _LCD4Bit_voidSendChar
 ---------------------------------------------------------------------------------
 (4) _LCD4Bit_voidSendChar                                 2     0      2   15906
                                             10 COMRAM     2     0      2
                _GPIO_VoidSetPinMode
                   _LCD_voidSend4bit
            _LCD_voidSendEnable_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_voidSendEnable_4Bit                              1     0      1    5062
                                              8 COMRAM     1     0      1
                _GPIO_VoidSetPinMode
 ---------------------------------------------------------------------------------
 (3) _LCD_voidSend4bit                                     2     0      2    5542
                                              8 COMRAM     2     0      2
                _GPIO_VoidSetPinMode
 ---------------------------------------------------------------------------------
 (3) _KEYPAD_u8KeyPadPressed                               7     6      1    5764
                                              8 COMRAM     7     6      1
                _GPIO_VoidSetPinMode
                     _GPIO_u8ReadPin
 ---------------------------------------------------------------------------------
 (4) _GPIO_u8ReadPin                                       7     6      1     144
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (2) _GPIO_VoidSetPinMode                                  8     6      2    4670
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _APP_CheckLights                                      3     2      1    8113
                                             15 COMRAM     3     2      1
               _ADC_u16GetConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_u16GetConversion                                 4     2      2    6878
                                             11 COMRAM     4     2      2
                  _ADC_ChannelConfig
         _ADC_u16GetConversionResult
           _ADC_voidStatrtConversion
 ---------------------------------------------------------------------------------
 (3) _ADC_voidStatrtConversion                             1     0      1     152
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _ADC_u16GetConversionResult                           4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ADC_ChannelConfig                                    3     3      0    6386
                                              8 COMRAM     3     3      0
           _GPIO_VoidSetPinDirection
 ---------------------------------------------------------------------------------
 (3) _GPIO_VoidSetPinDirection                             8     6      2    6342
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _InterruptManger                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_CheckLights
     _ADC_u16GetConversion
       _ADC_ChannelConfig
         _GPIO_VoidSetPinDirection
       _ADC_u16GetConversionResult
       _ADC_voidStatrtConversion
   _APP_Get_Number
     _KEYPAD_u8KeyPadPressed
       _GPIO_VoidSetPinMode
       _GPIO_u8ReadPin
     _LCD4Bit_voidSendNumber
       _LCD4Bit_voidSendString_Pos
         _LCD4Bit_voidSendString
           _LCD4Bit_voidSendChar
             _GPIO_VoidSetPinMode
             _LCD_voidSend4bit
               _GPIO_VoidSetPinMode
             _LCD_voidSendEnable_4Bit
               _GPIO_VoidSetPinMode
         _LCD_voidSetCursorPos_4Bit
           _LCD4Bit_voidSendCommand
             _GPIO_VoidSetPinMode
             _LCD_voidSend4bit
             _LCD_voidSendEnable_4Bit
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
     ___wmul
   _App_SetTemperature
     _APP_Get_Number
     _LCD4Bit_voidSendChar_Pos
       _LCD4Bit_voidSendChar
       _LCD_voidSetCursorPos_4Bit
     _LCD4Bit_voidSendCommand
     _LCD4Bit_voidSendString_Pos
     _LCD_voidSetCursorPos_4Bit
   _Application_Init
     _ADC_voidADCInit
       _ADC_ChannelConfig
       _ADC_ConversionResultConfig
       _ADC_VoltageRefConfig
     _I2C_voidI2CInit
       _I2C_MasterMode_CFG
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
         ___fltol
           ___fladd (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _I2C_SlaveMode_CFG
     _KEYPAD_voidKeyPadInt
       _GPIO_VoidSetPinDirection
     _LCD4Bit_voidLCD_Init
       _GPIO_VoidSetPinDirection
       _LCD4Bit_voidSendCommand
     _LED_voidLedInt
       _GPIO_VoidSetPinDirection
       _GPIO_VoidSetPinMode
     _USART_voidAsynchUsartInit
       _BaudRateConfig
         ___fladd
         ___fldiv
         ___fltol
         ___xxtofl
       _Tx_config
       _rx_config
   _EEPROM_u8Read
   _EEPROM_voidWrite
   _I2C_SendStuct
     _I2C_u8WriteByteBlocking
     _I2C_voidSendStartCond
     _I2C_voidSendStopCond
     _IdleI2C
   _I2C_u8ReadRegByte
     _I2C_u8ReadByteBlocking
     _I2C_u8WriteByteBlocking
     _I2C_voidSendRebeatStartCond
     _I2C_voidSendStartCond
     _I2C_voidSendStopCond
   _KEYPAD_u8KeyPadPressed
   _LCD4Bit_voidSendCommand
   _LCD4Bit_voidSendNumber
   _LCD4Bit_voidSendString_Pos
   _LCD_ChoisePrint
     _APP_Get_Number
     _LCD4Bit_voidSendCommand
     _LCD4Bit_voidSendNumber
     _LCD4Bit_voidSendString_Pos
     _LCD_voidSetCursorPos_4Bit
   _LCD_voidSetCursorPos_4Bit
   _LED_voidLedOff
     _GPIO_VoidSetPinMode
   _LED_voidLedOn
     _GPIO_VoidSetPinMode

 _InterruptManger (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4F      7D       1       99.2%
BITBIGSFRhhlhh      1A      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRllllhl      6      0       0      46        0.0%
BITBIGSFRllllhh      4      0       0      43        0.0%
BITBIGSFRllllhl      4      0       0      47        0.0%
BITBIGSFRllllhh      4      0       0      44        0.0%
BITBIGSFRllllhl      4      0       0      48        0.0%
BITBIGSFRllllhh      1      0       0      42        0.0%
BITBIGSFRllllhh      1      0       0      45        0.0%
BITBIGSFRlllh        1      0       0      41        0.0%
BITBIGSFRllhll       1      0       0      40        0.0%
BITBIGSFRhhll        1      0       0      38        0.0%
BITBIGSFRhl          1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      49        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 24 23:43:24 2024

           LCD4Bit_voidLCD_Init@Copy_stLCD4Bit 000D                                   ___fldiv@aexp 0027  
                                 ___fldiv@bexp 0026                                   ___fldiv@sign 001F  
                                  _SSPSTATbits 0FC7                                             l80 02E0  
                                 ___awdiv@sign 0006                                             _t2 00FD  
                          ___wmul@multiplicand 0003                    I2C_u8ReadRegByte@Copy_stI2C 0004  
          LCD4Bit_voidSendNumber@Copy_u8Column 0034                               ?_ADC_voidADCInit 000C  
                                          l211 27F2                                            l300 259C  
                                          l205 2CCC                                            l214 3354  
                                          l231 1A50                                            l127 0AEE  
                                          l208 239C                                            l217 33A8  
                                          l237 1A50                                            l342 1F9E  
                                          l351 386C                            I2C_SendStuct@MyData 0004  
                                          _ADC 00CB                                            l520 3584  
                                          l416 2E8C                                            l360 384E  
                                          l504 3082                                            l513 38C2  
                                          l345 34EC                                            l193 28A6  
                                          l426 2E02                                            l290 2F12  
                                          l186 36EE                                            l195 28AE  
                                          l524 3694                                            l348 353A  
                                          l357 3228                                            l390 296A  
                                          l550 382C                                            l527 36BA  
                                          l800 2ACA                                            l537 200E  
                                          l545 2120                                            l393 328E  
                                          l554 376C                                            l459 2D68  
                                          l731 35BC                                            l475 300E  
                                          l467 2F90                                            l548 382A  
                                          l732 35C8                                            l557 3774  
                                          l559 3778                                            l831 21E8  
                                          l735 3886                                            l903 32F0  
                                          l840 228A                                            l833 21EE  
                                          l729 35AE                                            l826 2182  
                                          l850 3808                                            l851 380A  
                                          l836 2238                                            l828 2188  
                                          l837 2288                                            l838 223E  
                                          l870 33D2                                            l862 37D6  
                                          l855 37B2                                            l784 2B7A  
                                          l872 33E0                                            l848 37FA  
                                          l864 37E4                                            l880 341E  
                                          l865 37E6                                            l857 37C0  
                                          l874 33FC                                            l858 37C2  
                                          l787 364C                                            l892 2672  
                                          l884 344E                                            l878 3410  
                                          l895 38A0                                            _PR2 0FCB  
                          _BaudRateConfig$4564 0049                                            _abs 36F0  
                                 ___awmod@sign 0006                                            wreg 0FE8  
                 CCP_u16CaptureReadValue@F2628 0070                                APP_Get_Number@x 0046  
                              APP_Get_Number@y 0042                                   ___fltol@exp1 0041  
                                         l2010 3684                                           l2003 3752  
                                         ?_abs 0007                                           l1300 0B16  
                                         l1302 0BCC                                           l1303 0C82  
                                         l1304 0D38                                           l1312 316E  
                                         l1320 3106                                           l1305 0DEE  
                                         l1313 31BE                                           l1321 3156  
                                         l1306 0EA2                                           l1314 3174  
                                         l1322 310C                                           l1307 0FE0  
                                         l1315 31C0                                           l1323 3158  
                                         l2061 3722                                           l2054 360C  
                                         l1326 379E                                           l2048 1C3A  
                                         l2073 2C24                                           l2058 370A  
                                         l1267 3352                                           l2084 38C4  
                                         l1623 24A2                                           l5000 124E  
                                         l1570 2A1A                                           l5010 12BA  
                                         l5002 1258                                           l5012 12CA  
                                         l5004 125E                                           l5100 1508  
                                         l1557 2736                                           l5030 134C  
                                         l5022 1324                                           l5006 1284  
                                         l5014 12DA                                           l1910 169A  
                                         l5110 1534                                           l5102 150E  
                                         l6000 232E                                           l5032 1354  
                                         l5024 132E                                           l5016 1300  
                                         l5008 12B8                                           l5040 1378  
                                         l5200 17E0                                           l5120 156E  
                                         l5112 1544                                           l5104 1514  
                                         l1921 1758                                           l1913 165E  
                                         l6010 238E                                           l6002 2344  
                                         l5050 13CA                                           l5042 137C  
                                         l5034 1358                                           l5026 133C  
                                         l5018 1310                                           l5210 182E  
                                         l5202 17FA                                           l1922 1746  
                                         l5122 1584                                           l5114 1554  
                                         l5106 1522                                           l6012 239A  
                                         l6004 2350                                           l5060 1430  
                                         l5052 13D6                                           l5044 138A  
                                         l5036 1368                                           l5028 133E  
                                         l5212 1830                                           l5204 1816  
                                         l5140 15D8                                           l1908 183A  
                                         l5124 1594                                           l5132 15B4  
                                         l5116 1556                                           l5108 1524  
                                         l5220 239E                                           l5300 1DBE  
                                         l6100 02D4                                           l5310 2D6A  
                                         l6006 2360                                           l5070 1478  
                                         l5062 1440                                           l5054 13E4  
                                         l5046 13A0                                           l5038 136A  
                                         l1854 11D0                                           l5206 181A  
                                         l5150 162A                                           l5142 15F2  
                                         l5134 15C4                                           l5126 159C  
                                         l5118 155E                                           l5230 23F4  
                                         l5222 23B4                                           l5302 1DCE  
                                         l6110 035A                                           l6102 02F0  
                                         l6030 004A                                           l1871 12EA  
                                         l1863 14A0                                           l1855 11BE  
                                         l1919 16E0                                           l5400 1FEE  
                                         l5320 2DBE                                           l5312 2D82  
                                         l6008 2378                                           l5072 147A  
                                         l5064 1460                                           l5056 141E  
                                         l1880 13BA                                           l1856 1184  
                                         l5208 1828                                           l5160 1686  
                                         l5152 163A                                           l5144 1602  
                                         l5136 15C4                                           l5128 15A0  
                                         l5232 2404                                           l5304 1DDC  
                                         l6200 05B4                                           l6120 0386  
                                         l6104 030C                                           l6040 00C0  
                                         l6032 0072                                           l1881 13A8  
                                         l5410 2056                                           l5402 2000  
                                         l5330 24A6                                           l5322 2DD2  
                                         l5314 2D86                                           l5074 1480  
                                         l5066 1464                                           l5058 1420  
                                         l5170 16C6                                           l5162 1688  
                                         l5154 164E                                           l5146 1612  
                                         l5090 14CE                                           l5082 14A2  
                                         l5242 242E                                           l5234 2408  
                                         l5226 23C8                                           l5306 1DDE  
                                         l6210 060E                                           l6202 05C4  
                                         l6130 03B8                                           l6122 0396  
                                         l6106 0324                                           l6114 0366  
                                         l6050 0122                                           l6042 00D8  
                                         l6034 0088                                           l6026 0012  
                                         l5412 2068                                           l5404 2020  
                                         l5420 209E                                           l4620 2A22  
                                         l4700 29BA                                           l5324 2DD4  
                                         l5316 2D9E                                           l5076 148E  
                                         l5068 1472                                           l5180 1702  
                                         l5172 16D0                                           l5164 1698  
                                         l5156 165C                                           l5148 1622  
                                         l5092 14DE                                           l5084 14AE  
                                         l5260 2492                                           l5252 2456  
                                         l5244 2438                                           l5236 2416  
                                         l5228 23F2                                           l6300 08A4  
                                         l6220 0654                                           l6212 0626  
                                         l6204 05D6                                           l6140 03F6  
                                         l6132 03C0                                           l6124 039A  
                                         l6108 0344                                           l6116 0376  
                                         l6060 016C                                           l6052 0134  
                                         l6044 00EE                                           l6036 0094  
                                         l6028 0032                                           l1981 1C92  
                                         l5414 207A                                           l5406 2032  
                                         l4622 2A5E                                           l5350 2514  
                                         l5342 24AE                                           l4710 29F4  
                                         l4702 29C2                                           l5326 2DEC  
                                         l5318 2DA2                                           l5430 3754  
                                         l5078 1490                                           l5190 1774  
                                         l5182 1710                                           l5174 16DE  
                                         l5166 16AA                                           l5158 1668  
                                         l5094 14EE                                           l5086 14BC  
                                         l5254 2462                                           l5246 2442  
                                         l5270 1CA2                                           l5510 30F2  
                                         l6310 0914                                           l6302 08BC  
                                         l6230 0696                                           l6222 065E  
                                         l6214 063E                                           l6206 05E8  
                                         l6150 0432                                           l6142 03F8  
                                         l6134 03C8                                           l6126 039E  
                                         l6070 01D8                                           l6062 0182  
                                         l6054 013C                                           l6046 00FA  
                                         l6038 00B0                                           l5416 208C  
                                         l5408 2044                                           l5432 38C0  
                                         l5360 2554                                           l5352 2524  
                                         l5344 24D8                                           l5336 24AA  
                                         l5328 24A4                                           l4632 28B0  
                                         l4800 2E40                                           l4640 2674  
                                         l4704 29D0                                           l4712 29FA  
                                         l4720 2B7C                                           l5192 1782  
                                         l5184 173E                                           l5168 16C0  
                                         l5176 16F0                                           l5096 14F0  
                                         l5088 14BE                                           l5256 2472  
                                         l5280 1CE0                                           l1984 1DEE  
                                         l5272 1CB8                                           l5264 1C3E  
                                         l5504 317A                                           l5600 3350  
                                         l7200 2FF8                                           l6320 0958  
                                         l6312 0926                                           l6304 08CC  
                                         l6240 06D2                                           l6232 0698  
                                         l6224 0670                                           l6208 05F8  
                                         l6160 0484                                           l6152 044A  
                                         l6144 03FE                                           l6136 03E0  
                                         l6128 03A6                                           l6080 022E  
                                         l6072 01E8                                           l6056 014C  
                                         l6048 010A                                           l6064 0192  
                                         l5442 356A                                           l5434 353C  
                                         l4626 2AA0                                           l4618 2A1E  
                                         l5370 258A                                           l5362 2564  
                                         l5346 24DA                                           l4634 322A  
                                         l4810 31C2                                           l4650 26A0  
                                         l4642 2678                                           l4714 2A0A  
                                         l4706 29E6                                           l4730 2BF4  
                                         l4722 2B8C                                           l5522 377A  
                                         l5530 2802                                           l5426 380C  
                                         l5194 17AC                                           l5178 16FE  
                                         l5098 14F8                                           l5258 2482  
                                         l5290 1D68                                           l5282 1D12  
                                         l5266 1C4E                                           l7210 21BC  
                                         l5610 2D34                                           l5602 2CCE  
                                         l7202 3140                                           l6322 0974  
                                         l6330 09B6                                           l6314 092E  
                                         l6306 08E4                                           l6250 0736  
                                         l6242 06DE                                           l6234 06AA  
                                         l6226 0678                                           l6170 04D8  
                                         l6162 049A                                           l6154 045C  
                                         l6146 040A                                           l6138 03E6  
                                         l6082 023E                                           l6090 027C  
                                         l6074 0200                                           l6066 01AE  
                                         l6058 015C                                           l1995 1D86  
                                         l5436 3554                                           l7220 2AB4  
                                         l5372 259A                                           l5364 2576  
                                         l5348 24EA                                           l4636 3254  
                                         l4740 34EE                                           l4812 31C6  
                                         l4804 2E52                                           l4660 26CE  
                                         l4652 26A8                                           l4644 2686  
                                         l4716 2A12                                           l4708 29EE  
                                         l4724 2B9C                                           l4820 35D6  
                                         l5524 3796                                           l5540 2856  
                                         l5532 280C                                           l5428 3824  
                                         l4900 104E                                           l5188 1768  
                                         l5196 17B0                                           l5292 1D76  
                                         l5284 1D14                                           l1988 1D2A  
                                         l5276 1CCC                                           l5268 1C5C  
                                         l5452 263E                                           l7212 2222  
                                         l5620 2134                                           l5604 2CF0  
                                         l5460 0AF2                                           l7204 31A8  
                                         l5516 3112                                           l5700 33F8  
                                         l6340 0A1A                                           l6332 09C8  
                                         l6324 098C                                           l6316 0938  
                                         l6308 08FC                                           l6260 077A  
                                         l6252 0748                                           l6244 06EE  
                                         l6236 06B2                                           l6180 0514  
                                         l6172 04DA                                           l6228 0684  
                                         l6164 04A4                                           l6156 0464  
                                         l6148 041A                                           l6092 028C  
                                         l6084 0256                                           l6076 0212  
                                         l6068 01D4                                           l7222 20B2  
                                         l5366 2578                                           l5358 2528  
                                         l4638 325C                                           l4814 31F2  
                                         l4830 383E                                           l4670 2708  
                                         l4662 26D6                                           l4654 26AC  
                                         l4646 268E                                           l4734 36F0  
                                         l4726 2BA6                                           l4750 1A94  
                                         l4742 1A52                                           l4822 35E6  
                                         l5542 2872                                           l5534 281C  
                                         l5710 3850                                           l4910 1078  
                                         l4902 1060                                           l5198 17CA  
                                         l5294 1D94                                           l5286 1D20  
                                         l5278 1CD4                                           l5446 259E  
                                         l7214 2272                                           l5622 214C  
                                         l5606 2D12                                           l7206 0F74  
                                         l5470 0C26                                           l5702 33FA  
                                         l6350 0A54                                           l6334 09E4  
                                         l6342 0A22                                           l6326 09A2  
                                         l6318 0948                                           l6270 07DC  
                                         l6262 078C                                           l6254 0750  
                                         l6246 0706                                           l6238 06BA  
                                         l6190 0578                                           l6182 0520  
                                         l6174 04EC                                           l6166 04B6  
                                         l6158 046C                                           l6094 02A4  
                                         l6086 026C                                           l6078 022A  
                                         l7224 2B64                                           l4840 2B50  
                                         l4832 2ACE                                           l5392 1FA2  
                                         l5720 36B2                                           l5712 3686  
                                         l5368 2588                                           l4816 31F6  
                                         l4680 272E                                           l4672 270A  
                                         l4664 26E4                                           l4656 26B4  
                                         l4648 2692                                           l4736 36FE  
                                         l4728 2BC2                                           l4760 1B10  
                                         l4752 1AA2                                           l4744 1A76  
                                         l4824 3604                                           l5544 287A  
                                         l5536 282E                                           l5528 27F6  
                                         l4912 1088                                           l4920 10B2  
                                         l4904 1062                                           l5296 1D96  
                                         l5288 1D5C                                           l7216 265C  
                                         l5448 25BA                                           l5632 218E  
                                         l5624 2158                                           l5616 2122  
                                         l5560 1F44                                           l5552 1DF0  
                                         l7208 2D52                                           l5480 0DF2  
                                         l5472 0C88                                           l5464 0B1C  
                                         l5800 3880                                           l6360 0AAE  
                                         l6352 0A6C                                           l6336 09FC  
                                         l6328 09AA                                           l6280 081C  
                                         l6272 07F4                                           l6264 079E  
                                         l6256 075A                                           l6248 071E  
                                         l6192 0582                                           l6184 0530  
                                         l6176 04F4                                           l6168 04C6  
                                         l6096 02BC                                           l4834 2AD2  
                                         l5394 1FB8                                           l5714 3686  
                                         l4850 364A                                           l4738 34A0  
                                         l7218 2E66                                           l4674 2710  
                                         l4666 26EA                                           l4658 26C6  
                                         l4690 2986                                           l4770 1B9A  
                                         l4762 1B28                                           l4754 1AC0  
                                         l4746 1A82                                           l4818 35CA  
                                         l5546 287C                                           l5538 283E  
                                         l4930 10EA                                           l4922 10C2  
                                         l4914 1098                                           l4906 1068  
                                         l5298 1D9A                                           l5458 3888  
                                         l5642 21F4                                           l5634 21D2  
                                         l5626 2170                                           l5618 2132  
                                         l5570 2EBC                                           l5562 2E8E  
                                         l5554 1F0E                                           l5482 0E46  
                                         l5474 0CDC                                           l5466 0B70  
                                         l5490 0F56                                           l5802 3882  
                                         l5810 3586                                           l5706 37C4  
                                         l6362 0AC6                                           l6338 0A12  
                                         l6354 0A82                                           l6290 0856  
                                         l6282 082E                                           l6266 07AE  
                                         l6258 076A                                           l6194 0592  
                                         l6186 0548                                           l6178 04FC  
                                         l6098 02BE                                           l4836 2B0E  
                                         l5396 1FCA                                           l5716 368C  
                                         l5900 1986                                           l4828 382E  
                                         l4860 3724                                           l4668 2700  
                                         l4676 2716                                           l4692 298A  
                                         l4684 296C                                           l4772 1BAA  
                                         l4780 1BF0                                           l4764 1B5C  
                                         l4756 1ADE                                           l4748 1A90  
                                         l5548 2894                                           l5660 3010  
                                         l4940 10FE                                           l4932 10EE  
                                         l4924 10D4                                           l4916 10A8  
                                         l4908 1076                                           l5628 2176  
                                         l5636 21E0                                           l5580 2ED2  
                                         l5572 2EBE                                           l5556 1F1C  
                                         l5484 0EA6                                           l5476 0D3E  
                                         l5468 0BD2                                           l5492 0FAA  
                                         l5804 3884                                           l5820 359E  
                                         l5812 358E                                           l5708 37D4  
                                         l6364 0ADC                                           l6356 0A8A  
                                         l6348 0A38                                           l6292 0868  
                                         l6284 0836                                           l6268 07C4  
                                         l6196 05A4                                           l6188 0560  
                                         l5398 1FDC                                           l5718 36A2  
                                         l5910 19EC                                           l5902 199C  
                                         l4846 3610                                           l4862 372C  
                                         l4678 2726                                           l4694 2998  
                                         l4686 2970                                           l4774 1BBA  
                                         l4766 1B78                                           l4758 1AF6  
                                         l4782 1C06                                           l4870 3656  
                                         l5670 3080                                           l5662 3012  
                                         l4950 1112                                           l4942 1102  
                                         l4934 10F2                                           l4926 10E2  
                                         l4918 10AA                                           l5646 2244  
                                         l5638 21E2                                           l5582 2F00  
                                         l5574 2ECE                                           l5558 1F38  
                                         l5486 0EFA                                           l5478 0D92  
                                         l5590 3308                                           l5830 35AC  
                                         l5822 35A0                                           l5814 3594  
                                         l6366 0AE8                                           l6294 0870  
                                         l6358 0A9E                                           l6278 080A  
                                         l6286 0842                                           l6198 05AC  
                                         l5912 1A02                                           l5904 19AE  
                                         l4848 3610                                           l4792 2E04  
                                         l4864 3736                                           l4696 29A0  
                                         l4688 297E                                           l4776 1BD0  
                                         l4768 1B8A                                           l4872 365E  
                                         l5664 3060                                           l4960 1126  
                                         l4952 1116                                           l4944 1106  
                                         l4936 10F6                                           l4928 10E6  
                                         l4880 0FE2                                           l5584 2F02  
                                         l5568 2E92                                           l5592 3310  
                                         l5824 35A2                                           l5816 3598  
                                         l5808 3586                                           l5680 338C  
                                         l5672 3354                                           l5920 2C26  
                                         l5760 37B0                                           l5840 2F5C  
                                         l5832 2F14                                           l6296 0888  
                                         l6288 0854                                           l5914 1A18  
                                         l5906 19C4                                           l4794 2E0A  
                                         l4866 3738                                           l4698 29B2  
                                         l4778 1BEE                                           l4786 1C16  
                                         l4874 3666                                           l5666 3070  
                                         l4970 119E                                           l4962 1150  
                                         l4954 111A                                           l4946 110A  
                                         l4938 10FA                                           l4890 101E  
                                         l4882 0FEE                                           l5498 315A  
                                         l5594 3328                                           l5586 32F2  
                                         l5826 35A4                                           l5818 359C  
                                         l5690 33B8                                           l5682 339A  
                                         l5674 3362                                           l5930 2C3E  
                                         l5922 2C26                                           l5770 3438  
                                         l5762 33FE                                           l5850 2FB8  
                                         l5834 2F18                                           l6298 0894  
                                         l5916 1A2A                                           l5908 19DA  
                                         l4796 2E1C                                           l4876 367A  
                                         l4868 364E                                           l5668 3078  
                                         l4980 11DE                                           l4972 11A2  
                                         l4964 116C                                           l4956 111E  
                                         l4948 110E                                           l4892 102E  
                                         l4884 0FFC                                           l5596 3330  
                                         l5588 3302                                           l5780 36CC  
                                         l5828 35A8                                           l5692 33BA  
                                         l5684 37E8                                           l5676 3370  
                                         l5940 2C86                                           l5932 2C4C  
                                         l5924 2C2A                                           l5772 3448  
                                         l5764 340E                                           l5860 3290  
                                         l5836 2F3A                                           l5918 1A40  
                                         l5870 1850                                           l4798 2E2E  
                                         l4990 1220                                           l4982 11EE  
                                         l4974 11B0                                           l4966 117C  
                                         l4958 1122                                           l4894 1030  
                                         l4886 0FFE                                           l5598 3348  
                                         l5782 36D4                                           l5790 3874  
                                         l5694 33CE                                           l5686 37F8  
                                         l5678 337E                                           l5950 2CBC  
                                         l5942 2C96                                           l5934 2C64  
                                         l5926 2C2E                                           l5774 344C  
                                         l5766 3422                                           l5758 37A0  
                                         l5862 32A4                                           l5854 2FDA  
                                         l5846 2F92                                           l7198 2F7A  
                                         l5880 18B6                                           l5872 1866  
                                         l4992 122E                                           l4976 11B2  
                                         l4968 1192                                           l4888 100E  
                                         l4896 1038                                           l5784 36E4  
                                         l5792 3878                                           l5696 33E2  
                                         l5688 33AA                                           l5952 2CC0  
                                         l5944 2C9A                                           l5936 2C6C  
                                         l5928 2C3A                                           l5768 3432  
                                         l5864 32EE                                           l5960 2744  
                                         l5848 2F96                                           l5890 1920  
                                         l5882 18CC                                           l5874 1878  
                                         l4994 123A                                           l4986 1202  
                                         l4978 11BC                                           l4898 1048  
                                         l5786 36EC                                           l5778 36BC  
                                         l5794 387A                                           l5698 33EA  
                                         l5954 2CC8                                           l5946 2CA8  
                                         l5938 2C70                                           l5970 27B4  
                                         l5962 2754                                           l5892 1932  
                                         l5884 18E2                                           l5876 188E  
                                         l5868 183C                                           l5980 228C  
                                         l4996 123E                                           l4988 1212  
                                         l5796 387C                                           l5788 386E  
                                         l5948 2CAA                                           l5972 27CC  
                                         l5964 276C                                           l5956 2738  
                                         l5894 1948                                           l5886 18F4  
                                         l5878 18A4                                           l5990 22D8  
                                         l5982 22A4                                           l4998 124C  
                                         l5798 387E                                           l5974 27DA  
                                         l5966 2784                                           l5958 2738  
                                         l5896 195E                                           l5888 190A  
                                         l5992 22EC                                           l5984 22A4  
                                         l5976 27F0                                           l5968 279C  
                                         l5898 1970                                           l5994 22FA  
                                         l5986 22B0                                           l5996 2306  
                                         l5988 22C0                                           l5998 2316  
                                         STR_1 FEF2                                           STR_2 FF67  
                                         STR_3 FE87                                           STR_4 FF41  
                                         STR_5 FE9C                                           STR_6 FEBF  
                                         STR_7 FF13                                           STR_8 FF7F  
                                         STR_9 FEE1                                           _LATA 0F89  
                                         _LATB 0F8A                                           _LATC 0F8B  
                                         u4000 13A0                                           _LATD 0F8C  
                                         u4001 139C                                           _LATE 0F8D  
                                         u4010 13B6                                           u4011 13B2  
                                         u4020 13CA                                           u4100 14BC  
                                         u4021 13C6                                           u4101 14B8  
                                         u4030 13E4                                           u4110 14CE  
                                         u4031 13E0                                           u4111 14CA  
                                         u3400 2700                                           u4040 141E  
                                         u4200 1686                                           u4120 14DE  
                                         u5000 37E4                                           u3401 26FC  
                                         u4041 141A                                           u4201 1682  
                                         u4121 14DA                                           u5001 37E0  
                                         u5010 36A2                                           u3410 2726  
                                         u4050 1430                                           u4210 16AA  
                                         u4130 1522                                           u5011 369E  
                                         u3411 2722                                           u4051 142C  
                                         u4211 16A6                                           u4131 151E  
                                         u3420 297E                                           u3500 2BC2  
                                         u4060 1440                                           u4300 17CA  
                                         u4220 16C0                                           u4140 1534  
                                         u5100 35BC                                           u3421 297A  
                                         u3501 2BBE                                           u4061 143C  
                                         u4301 17C6                                           u4221 16BC  
                                         u4141 1530                                           u5101 35B8  
                                         u3430 2998                                           u3510 2BF4  
                                         u4070 1460                                           u4310 17FA  
                                         u4230 16DE                                           u4150 1544  
                                         u3431 2994                                           u3511 2BF0  
                                         u4071 145C                                           u4311 17F6  
                                         u4231 16DA                                           u4151 1540  
                                         u5200 1948                                           u3344 2A34  
                                         u3360 2686                                           u3440 29B2  
                                         u3520 36FE                                           u3600 1BAA  
                                         u4080 1472                                           u4320 1828  
                                         u4240 16FE                                           u4160 1584  
                                         u4400 1C4E                                           u5040 37B0  
                                         u5120 32A4                                           u5201 1944  
                                         u3345 2A30                                           u3361 2682  
                                         u3441 29AE                                           u3521 36FA  
                                         u3601 1BA6                                           u4081 146E  
                                         u4321 1824                                           u4241 16FA  
                                         u4161 1580                                           u4401 1C4A  
                                         u5041 37AC                                           u5121 32A0  
                                         u5210 195E                                           u5130 1866  
                                         u3354 2A70                                           u3370 26A0  
                                         u3450 29D0                                           u3610 1BBA  
                                         u3530 1A76                                           u4090 148E  
                                         u4250 1710                                           u4170 15C4  
                                         u4330 23B4                                           u4410 1C5C  
                                         u5050 37C0                                           u5211 195A  
                                         u5131 1862                                           u3355 2A6C  
                                         u3371 269C                                           u3451 29CC  
                                         u3611 1BB6                                           u3531 1A72  
                                         u4091 148A                                           u4251 170C  
                                         u4171 15C0                                           u4331 23B0  
                                         u4411 1C58                                           u5115 35C6  
                                         u5051 37BC                                           u5220 1986  
                                         u5140 188E                                           u3700 3752  
                                         u3380 26C6                                           u3460 29E6  
                                         u3620 1C02                                           u3540 1AC0  
                                         u4260 173E                                           u4180 163A  
                                         u4340 23E8                                           u4420 1CB8  
                                         u5116 35C8                                           u5060 340E  
                                         u5221 1982                                           u5141 188A  
                                         u3701 374E                                           u3381 26C2  
                                         u3461 29E2                                           u3621 1BFE  
                                         u3541 1ABC                                           u4501 2D70  
                                         u4261 173A                                           u4181 1636  
                                         u4421 1CB4                                           u5061 340A  
                                         u5230 199C                                           u5150 18A4  
                                         u3630 31EC                                           u3390 26E4  
                                         u3470 2A0A                                           u3550 1ADE  
                                         u3710 0FFC                                           u4270 1754  
                                         u4190 165C                                           u4350 2416  
                                         u4430 1D0E                                           u5070 341E  
                                         u5310 00B0                                           u5231 1998  
                                         u5151 18A0                                           u3391 26E0  
                                         u3471 2A06                                           u3551 1ADA  
                                         u4511 2D7C                                           u3711 0FF8  
                                         u4271 1750                                           u4191 1658  
                                         u4351 2412                                           u4431 1D0A  
                                         u5071 341A                                           u5311 00AC  
                                         u5240 19C4                                           u5160 18CC  
                                         u3640 3218                                           u3480 2B8C  
                                         u3560 1B24                                           u4520 2DEC  
                                         u4600 376C                                           u3800 1150  
                                         u3720 100E                                           u4280 1768  
                                         u4360 242A                                           u4440 1D58  
                                         u5080 3432                                           u5400 04D8  
                                         u5320 01AE                                           u5241 19C0  
                                         u5161 18C8                                           u3481 2B88  
                                         u3561 1B1E                                           u4521 2DE8  
                                         u4601 3768                                           u3801 114C  
                                         u3721 100A                                           u4281 1764  
                                         u4361 2426                                           u4345 23DE  
                                         u4441 1D54                                           u5081 342E  
                                         u5401 04D4                                           u5321 01AA  
                                         u4610 3554                                           u5250 19DA  
                                         u5170 18E2                                           u4530 24EA  
                                         u3650 3228                                           u3490 2B9C  
                                         u3570 1B26                                           u3810 1168  
                                         u3730 101E                                           u4290 1782  
                                         u4370 2452                                           u4450 1D76  
                                         u5090 3448                                           u5410 05C4  
                                         u5330 022A                                           u4611 3550  
                                         u5251 19D6                                           u5171 18DE  
                                         u4531 24E6                                           u3651 3224  
                                         u3491 2B98                                           u3811 1162  
                                         u3731 101A                                           u4291 177E  
                                         u4371 244E                                           u4451 1D72  
                                         u5091 3444                                           u5411 05C0  
                                         u5331 0226                                           u5260 1A02  
                                         u5180 190A                                           u4540 2564  
                                         u3580 1B8A                                           u3660 3604  
                                         u4700 282E                                           u3900 124C  
                                         u3820 116A                                           u3740 1060  
                                         u4380 2472                                           u4460 1D86  
                                         u4620 0B12                                           u5500 0854  
                                         u5420 05D6                                           u5340 02F0  
                                         u5261 19FE                                           u5181 1906  
                                         u4541 2560                                           u3637 31E2  
                                         u3581 1B86                                           u3661 3600  
                                         u4701 282A                                           u3901 1248  
                                         u3741 105C                                           u4381 246E  
                                         u4461 1D82                                           u4621 0B0E  
                                         u5501 0850                                           u5421 05D2  
                                         u5341 02EC                                           u5270 1A18  
                                         u5190 1920                                           u4550 2588  
                                         u3590 1B9A                                           u4710 283E  
                                         u3910 1284                                           u3830 1192  
                                         u3750 1076                                           u4390 2482  
                                         u4470 1D94                                           u4630 316A  
                                         u5510 0948                                           u5430 05E8  
                                         u5350 0376                                           u5271 1A14  
                                         u5191 191C                                           u4551 2584  
                                         u3647 320E                                           u3591 1B96  
                                         u4711 283A                                           u3911 1280  
                                         u3831 118E                                           u3751 1072  
                                         u4391 247E                                           u4471 1D90  
                                         u4631 3166                                           u5511 0944  
                                         u5431 05E4                                           u5351 0372  
                                         u5280 1A40                                           u4560 259A  
                                         u4720 28A6                                           u3920 12CA  
                                         u3840 11B0                                           u3760 1088  
                                         u4480 1DCE                                           u4800 2170  
                                         u4640 3194                                           u5520 0958  
                                         u5440 0650                                           u5360 0386  
                                         u5281 1A3C                                           u4561 2596  
                                         u4721 28A2                                           u3921 12C6  
                                         u3841 11AC                                           u3761 1084  
                                         u4481 1DCA                                           u4801 216C  
                                         u4641 318E                                           u5521 0954  
                                         u5441 064C                                           u5361 0382  
                                         u3674 2AE4                                           u3930 1300  
                                         u3850 11D0                                           u3770 1098  
                                         u4490 1DDC                                           u4810 21A8  
                                         u4730 2ECE                                           u4650 3196  
                                         u5290 2CBC                                           u5530 09C8  
                                         u5450 0696                                           u5370 0396  
                                         u3675 2AE0                                           u3931 12FC  
                                         u3851 11CC                                           u3771 1094  
                                         u4491 1DD8                                           u4811 21A2  
                                         u4731 2ECA                                           u5291 2CB8  
                                         u5531 09C4                                           u5451 0692  
                                         u5371 0392                                           u6307 0176  
                                         u3684 2B20                                           u3940 1310  
                                         u3860 11DE                                           u3780 10D4  
                                         u4820 21AA                                           u4740 2F12  
                                         u4660 3102                                           u4900 338C  
                                         u5540 0A34                                           u5460 077A  
                                         u5380 03F6                                           u3685 2B1C  
                                         u3941 130C                                           u3861 11DA  
                                         u3781 10D0                                           u4741 2F0E  
                                         u4661 30FE                                           u4901 3388  
                                         u5541 0A30                                           u5461 0776  
                                         u5381 03F2                                           u6317 0260  
                                         u3694 363E                                           u4590 3824  
                                         u3950 133C                                           u3870 11EE  
                                         u3790 10E2                                           u4830 220E  
                                         u4670 312C                                           u4750 3302  
                                         u4910 339A                                           u5470 078C  
                                         u5390 04B6                                           u3695 363A  
                                         u4591 3820                                           u3951 1338  
                                         u3871 11EA                                           u3791 10DE  
                                         u4831 2208                                           u4671 3126  
                                         u4751 32FE                                           u4911 3396  
                                         u6407 0996                                           u5471 0788  
                                         u5391 04B2                                           u6327 02C8  
                                         u3960 134C                                           u3880 1220  
                                         u4840 2210                                           u4680 312E  
                                         u4760 3328                                           u4920 33A8  
                                         u5480 079E                                           u3961 1348  
                                         u3881 121C                                           u4761 3324  
                                         u4921 33A4                                           u6417 0A06  
                                         u5481 079A                                           u6337 034E  
                                         u4690 281C                                           u3970 1368  
                                         u3890 122E                                           u4850 225E  
                                         u4770 3348                                           u4930 37F8  
                                         u5490 0806                                           u4691 2818  
                                         u6507 2296                                           u3971 1364  
                                         u3891 122A                                           u4851 2258  
                                         u4771 3344                                           u4931 37F4  
                                         u6427 0A76                                           u5491 0802  
                                         u6347 03D2                                           u3980 1378  
                                         u4860 2260                                           u4780 2132  
                                         u4940 3808                                           u6517 2338  
                                         u3981 1374                                           u4781 212E  
                                         u4941 3804                                           u6437 0AD0  
                                         u6357 0506                                           u3990 138A  
                                         u4790 214C                                           u4950 33B8  
                                         u4870 3362                                           u6527 2382  
                                         u3991 1386                                           u4791 2148  
                                         u4951 33B4                                           u4871 335E  
                                         u6447 2C56                                           u6367 0618  
                                         u6287 007C                                           u4960 33CE  
                                         u4880 3370                                           u6537 2848  
                                         u4961 33CA                                           u4881 336C  
                                         u6457 2C8C                                           u6377 06C4  
                                         u6297 00E2                                           u4970 33E0  
                                         u4890 337E                                           u6547 3256  
                                         u4971 33DC                                           u4891 337A  
                                         u6467 2CA0                                           u6387 07CE  
                                         u4980 33F8                                           u6557 3288  
                                         u6477 1F14                                           u4981 33F4  
                                         u6397 087A                                           u4990 37D4  
                                         u6567 251A                                           u6487 1F2E  
                                         u4991 37D0                                           u6497 1F46  
                                         _TMR2 0FCC                                           _Data 0061  
              EEPROM_voidWrite@Copy_u16Address 0001                                           _User 007A  
                                         abs@a 0007                                           _dbuf 0100  
                                         _main 0012                       ??_KEYPAD_u8KeyPadPressed 000A  
                                         _prec 00ED                          ??_GPIO_VoidSetPinMode 0003  
              LCD4Bit_voidSendChar@Copy_u8Char 000C                                           fsr0h 0FEA  
                                         fsr1h 0FE2                                           indf0 0FEF  
                                         fsr2h 0FDA                                           fsr0l 0FE9  
                                         indf1 0FE7                                           indf2 0FDF  
                                         fsr1l 0FE1                                           fsr2l 0FD9  
                                         btemp 007E                    ?_ADC_ConversionResultConfig 0001  
                      _Timer1InterruptHandeler 00F3                         ??_KEYPAD_voidKeyPadInt 000A  
                                         prodh 0FF4                                           prodl 0FF3  
            __end_of_USART_voidAsynchUsartInit 3354                                           start 000E  
            __end_of_LCD_voidSetCursorPos_4Bit 2E8E                       ??_LCD4Bit_voidSendNumber 0035  
                              ___fldiv@new_exp 0020                                __end_of_IdleI2C 33AA  
                     ??_LCD4Bit_voidSendString 0010                                   ___param_bank 0000  
               App_SetTemperature@RequiredTemp 004D                                          ??_abs 0009  
                 __end_of_LCD4Bit_voidLCD_Init 1FA0            LCD_voidSetCursorPos_4Bit@Copy_u8Row 000E  
         I2C_u8ReadRegByte@Copy_u8Byte_Address 0006                                  ___fltol@sign1 0040  
                              __end_of___fladd 14A2                                          ?_main 0001  
                              __end_of___fldiv 183C                                __end_of___awdiv 2738  
                     ?_LCD4Bit_voidSendCommand 000B                                          _EEADR 0FA9  
                                        STR_10 FEAE                                          STR_11 FFC2  
                                        STR_20 FFE6                                          STR_12 FFE6  
                                        STR_21 FFF8                                          STR_13 FFF6  
                                        STR_14 FF73                                          STR_30 FF03  
                                        STR_22 FED0                                          STR_31 FFBA  
                                        STR_23 FF5B                                          STR_15 FF4E  
                                        STR_16 FFE6                                          STR_32 FFF1  
                                        STR_24 FFB1                                          STR_17 FFF8  
                                        STR_25 FFE0                                          STR_33 FF23  
                                        STR_34 FFD2                                          STR_26 FFCA  
                                        STR_18 FF95                                          STR_27 FFCA  
                                        STR_35 FFD9                                          STR_19 FF8A  
                                        STR_36 FFEC                                          STR_28 FF32  
                              __end_of___awmod 2A1C                                          STR_29 FFA8  
                                        STR_37 FF9F                                          STR_38 FFFB  
                              __end_of___fltol 24A4                                ___awdiv@divisor 0003  
                                        _LCD_1 0055                                          i2l926 38BC  
                              ___awdiv@counter 0005                                          _RCREG 0FAE  
                 ?_I2C_voidSendRebeatStartCond 0001                                   vfpfcnvrt@fmt 000C  
                                        _TMR0H 0FD7                                          _TMR1H 0FCF  
                                        _TMR0L 0FD6                                          _TMR1L 0FCE  
                                        _TMR3H 0FB3                                          _TMR3L 0FB2  
                                        _SPBRG 0FAF                                          _PORTA 0F80  
                                        _PORTB 0F81                                          _PORTC 0F82  
                                        _PORTD 0F83                                          _PORTE 0F84  
                                        _TRISA 0F92                                          _TRISB 0F93  
                                        _TRISC 0F94                                          _TRISD 0F95  
                                        _TRISE 0F96                                          _TXREG 0FAD  
                             _EEPROM_voidWrite 3586                                          _flags 0076  
     LCD4Bit_voidSendString_Pos@Copy_stLCD4Bit 0012                                          _fputc 2B7C  
          LCD_voidSend4bit@Copy_u8Command_Data 000A                                          _width 00EB  
                                        _putch 38C4                          _GLOP_u16Timer3Preload 0068  
                                        tablat 0FF5                               ??_APP_Get_Number 0044  
                                        ttemp5 007F                                          ttemp6 0082  
                                        ttemp7 0086                                          status 0FD8  
                                        wtemp8 007F                                __end_of_sprintf 3686  
                             ?_LCD_ChoisePrint 0001                  I2C_u8ReadRegByte@returnedData 0007  
                              __initialization 3084                                   __end_of_main 0AF2  
                     _LCD4Bit_voidSendChar_Pos 3850                              ??_APP_CheckLights 0011  
                        __end_of_EEPROM_u8Read 3888                                  _lat_registers 009A  
                 __end_of_LCD4Bit_voidSendChar 353C          LCD_voidSendEnable_4Bit@Copy_stLCD4Bit 0009  
                    ?_ADC_voidStatrtConversion 0001                                         ??_main 004E  
                                __activetblptr 0003                     __end_of_App_SetTemperature 239E  
                     __end_of_Application_Init 36F0                                         ?_fputc 0001  
                                       _ADRESH 0FC4                                         _EEADRH 0FAA  
                                       _ADRESL 0FC3                                         _EEDATA 0FA8  
                                       _CCPR1L 0FBE                                         _CCPR2L 0FBB  
                                       _EECON2 0FA7                               ___awdiv@dividend 0001  
                                       ?_putch 0001                                _PASSWORD_STATUS 007B  
                               _GPIO_u8ReadPin 360E                                      ??_IdleI2C 0001  
                                vfpfcnvrt@done 0010                                         _SPBRGH 0FB0  
            KEYPAD_voidKeyPadInt@Copy_stKeyPad 0009                                         _SSPADD 0FC8  
                                       _SSPBUF 0FC9                               __end_of___xxtofl 1DF0  
                  LCD4Bit_voidSendNumber@F3173 00DF                    LCD4Bit_voidSendNumber@F3175 00D9  
                                 vfprintf@cfmt 001C                                      ??___fladd 0030  
                     ?_LCD_voidSendEnable_4Bit 0009                                         ___wmul 377A  
                                    ??___fldiv 0017                                      ??___awdiv 0005  
              __end_of_LCD4Bit_voidSendCommand 34EE                                      ??___awmod 0005  
                        Tx_config@Copy_stUsart 0001                                      ??___fltol 003C  
                                       _flag_1 0079                  GPIO_u8ReadPin@Localu8Returned 0007  
                                       _memset 3724                    EEPROM_voidWrite@Copy_u8Data 0003  
                                       clear_0 30CA                                         clear_1 30D6  
                                       clear_2 30E2                          APP_CheckLights@MyData 0010  
                             ___awdiv@quotient 0007                                ___awmod@divisor 0003  
                      ??_I2C_voidSendStartCond 0002                                         isa$std 0001  
                              ___awmod@counter 0005                       ?_I2C_u8WriteByteBlocking 0001  
                  ?_LCD4Bit_voidSendString_Pos 0012                        _Timer2InterruptHandeler 00F1  
                                _I2C_SendStuct 2C26                                         fputc@c 0001  
                                 __pdataCOMRAM 0050                                   __mediumconst FE86  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8         LCD4Bit_voidSendChar_Pos@Copy_stLCD4Bit 0012  
                                       putch@c 0001             ADC_voidStatrtConversion@Copy_stADC 0001  
                             __end_of_vfprintf 360E                         __end_of_GPIO_u8ReadPin 364E  
                        rx_config@Copy_stUsart 0001                                      ??_sprintf 0023  
                              _InterruptManger 0008                      ?_GPIO_VoidSetPinDirection 0001  
                   ADC_u16GetConversion@result 000E                                  _LED_voidLedOn 2F14  
                                 ___xxtofl@arg 000B                   __end_of_I2C_voidSendStopCond 37E8  
                                 ___xxtofl@exp 000A                           _LCD4Bit_voidLCD_Init 1DF0  
                                 ___xxtofl@val 0001                              ??_I2C_voidI2CInit 0046  
                                  _Counter_Try 007D                                     __accesstop 0080  
                      __end_of__initialization 30E8                           APP_Get_Number@number 0048  
                    KEYPAD_voidKeyPadInt@i_958 000B                    ??_USART_voidAsynchUsartInit 004E  
                                ___rparam_used 0001                    ??_LCD_voidSetCursorPos_4Bit 0010  
                                   ___fltol@f1 0038                                 __pcstackCOMRAM 0001  
           I2C_u8WriteByteBlocking@Copy_u8Data 0002                                   __pidataBANK0 3450  
                 ??_ADC_u16GetConversionResult 0003                                  __end_of_fputc 2C26  
                                __end_of_putch 38C6          LCD4Bit_voidSendChar_Pos@Copy_u8Column 0014  
                       _KEYPAD_u8KeyPadPressed 24A4                                 ?_I2C_SendStuct 0004  
                       _LCD4Bit_voidSendNumber 2D6A                         _LCD4Bit_voidSendString 31C2  
                    ADC_voidADCInit@Copy_stADC 000C                                ?_GPIO_u8ReadPin 0001  
                                      ??_fputc 0004                                 ?_LED_voidLedOn 0009  
                                      ??_putch 0001                                     __pbssBANK0 00CF  
                                   __pbssBANK1 0100                          ?_LCD4Bit_voidLCD_Init 000D  
                 __end_of_ADC_u16GetConversion 36BC                     __end_of_I2C_MasterMode_CFG 2674  
          BaudRateConfig@Local_f32BaudRateTemp 0045                           _LCD4Bit_voidSendChar 34EE  
                    I2C_SendStuct@SizeOfStruct 0008                __end_of_LCD_voidSendEnable_4Bit 3290  
          I2C_u8ReadRegByte@Copy_u8I2C_Address 0005           LCD4Bit_voidSendString@Copy_stLCD4Bit 000D  
                     ??_I2C_u8ReadByteBlocking 0003                       __end_of_EEPROM_voidWrite 35CA  
                                      ?___wmul 0001                __end_of_I2C_u8WriteByteBlocking 33FE  
                            __end_of_Tx_config 31C2          USART_voidAsynchUsartInit@Copy_stUsart 004D  
            I2C_u8WriteByteBlocking@Copy_stI2C 0001                                        ?_memset 0001  
                     LED_voidLedOff@Copy_stLed 0009                      _USART_voidAsynchUsartInit 32F2  
                    _LCD_voidSetCursorPos_4Bit 2E04                                      ?___xxtofl 0001  
                      __end_of_InterruptManger 38C0          LCD4Bit_voidSendCommand@Copy_u8Command 000C  
                     _TIMER0_InterruptHandeler 00F5                   I2C_MasterMode_CFG@Copy_stI2C 0042  
                  __end_of_GPIO_VoidSetPinMode 2ACC                                        _IdleI2C 3354  
                               _tris_registers 00A4                     ??_LCD4Bit_voidSendChar_Pos 0016  
                        ?_LCD4Bit_voidSendChar 000B                        _Timer3InterruptHandeler 00EF  
                                      _i2c_obj 005C                                _APP_CheckLights 183C  
             __end_of_ADC_voidStatrtConversion 38C4                                        __Hparam 0000  
                                      __Lparam 0000            KEYPAD_u8KeyPadPressed@Copy_stKeyPad 0009  
                                      ___fladd 0FE2                                        ___fldiv 14A2  
                                      ___awdiv 2674                                        ___awmod 296C  
                                      ___fltol 239E                                      ?_vfprintf 0018  
                              ??_I2C_SendStuct 0005                                        __pcinit 3084  
                                      __ramtop 1000                    I2C_SlaveMode_CFG@Copy_stI2C 0001  
                                      __ptext0 0012                                        __ptext1 2F14  
                                      __ptext2 2F92                                        __ptext3 2738  
                                      __ptext4 3290                                        __ptext5 37A0  
                                      __ptext6 33FE                                        __ptext7 2C26  
                                      __ptext8 3354                                        __ptext9 37C4  
                         _I2C_voidSendStopCond 37C4                                      _T0CONbits 0FD5  
                                    _T1CONbits 0FCD                                      _T2CONbits 0FCA  
                                   ??___xxtofl 0005                                      _T3CONbits 0FB1  
                             ___awmod@dividend 0001                   __end_of_ADC_VoltageRefConfig 377A  
                 LCD4Bit_voidSendNumber@Number 003B                                        _uart_TX 00C5  
                                      _preload 006C                                ??_LED_voidLedOn 000A  
                            ?_Application_Init 0001                                 I2C_SendStuct@i 0009  
                               _BaudRateConfig 0AF2                         ??_LCD4Bit_voidLCD_Init 000E  
                                      _sprintf 364E                                 __pintcode_body 38BA  
         LCD4Bit_voidSendString_Pos@Copy_u8Row 0013                                      _ID_STATUS 007C  
                         end_of_initialization 30E8                             ??_Application_Init 004E  
                             _LCD_voidSend4bit 28B0          LCD4Bit_voidSendCommand@Copy_stLCD4Bit 000B  
                                      fputc@fp 0003                                        memset@c 0002  
                                      memset@n 0004                                        memset@p 0006  
                                      int_func 38BA                      I2C_voidI2CInit@Copy_stI2C 0045  
                                 _KeyPadNumber 0074                             _App_SetTemperature 228C  
                    APP_Get_Number@counter_KEY 0047                  LCD4Bit_voidSendNumber@Number2 0035  
                            __end_of_vfpfcnvrt 1C3C                                      _RCSTAbits 0FAB  
           __end_of_ADC_u16GetConversionResult 3586                     _ADC_u16GetConversionResult 353C  
                  ADC_u16GetConversion@channel 000D                            ?_App_SetTemperature 0001  
                            __end_of_rx_config 315A              KEYPAD_u16KeypadReturnNumber@F2561 00E5  
                                      postdec1 0FE5                                        postdec2 0FDD  
                                      postinc0 0FEE                                        postinc1 0FE6  
                                      postinc2 0FDE                               vfpfcnvrt@convarg 0013  
  KEYPAD_u8KeyPadPressed@Local_u8KeypadPressed 000B                                     ??_vfprintf 001C  
                        ?_I2C_voidSendStopCond 0001               __end_of_GPIO_VoidSetPinDirection 2B7C  
                         _ADC_u16GetConversion 3686                  __end_of_I2C_voidSendStartCond 380C  
                               _LED_voidLedOff 2F92                                 _LED_voidLedInt 2CCE  
                                  ___fladd@grs 0037                  GPIO_VoidSetPinMode@Copy_u8Pin 0001  
                              _I2C_voidI2CInit 2122                               ?_InterruptManger 0001  
                                ___xxtofl@sign 0009                         __end_of_BaudRateConfig 0FE2  
                                    _TRISCbits 0F94                           ??_App_SetTemperature 004B  
                        APP_Get_Number@pressed 004A                                    ___fldiv@grs 0022  
                                  ___fldiv@rem 001B                        __end_of_APP_CheckLights 1A52  
                       _SPI_INTERRUPT_HANDELER 00F7                         ??_LCD4Bit_voidSendChar 000D  
                      LED_voidLedOn@Copy_stLed 0009                       GPIO_u8ReadPin@Copy_u8Pin 0001  
                                  _CCP1CONbits 0FBD                              ??_ADC_voidADCInit 000D  
                                  _CCP2CONbits 0FBA                                      _TXSTAbits 0FAC  
          LCD4Bit_voidSendChar_Pos@Copy_u8Char 0015                       _ADC_voidStatrtConversion 38C0  
         I2C_u8ReadByteBlocking@Local_u8Return 0003                        ?_KEYPAD_u8KeyPadPressed 0009  
                                  vfpfcnvrt@ap 000D                                    vfpfcnvrt@cp 0011  
                                  vfpfcnvrt@fp 000B                                 __end_of___wmul 37A0  
                                  _BAUDCONbits 0FB8                                  __pidataCOMRAM 38A2  
                      ?_LCD4Bit_voidSendNumber 0030                 LCD_voidSend4bit@Copy_stLCD4Bit 0009  
                       __end_of_LED_voidLedOff 3010                         __end_of_LED_voidLedInt 2D6A  
                        ?_ADC_u16GetConversion 000C                                 __end_of_memset 3754  
                      ?_LCD4Bit_voidSendString 000D            __end_of_I2C_voidSendRebeatStartCond 37C4  
                  _I2C_voidSendRebeatStartCond 37A0                       LED_voidLedInt@Copy_stLed 0009  
                             ??_GPIO_u8ReadPin 0002                            start_initialization 3084  
                  LCD8Bit_voidSendNumber@F3181 00CF                                ?_BaudRateConfig 0042  
                                  __end_of_abs 3724                         _I2C_u8ReadByteBlocking 33FE  
                ??_I2C_voidSendRebeatStartCond 0002                        _LCD4Bit_voidSendCommand 34A0  
               GPIO_VoidSetPinMode@Copy_u8Mode 0002                 GPIO_VoidSetPinMode@Copy_u8Port 0008  
         LCD4Bit_voidSendNumber@Copy_u16Number 0031                   ??_ADC_ConversionResultConfig 0002  
                                  vfprintf@fmt 0019                           _ADC_VoltageRefConfig 3754  
               __end_of_KEYPAD_u8KeyPadPressed 259E                          KEYPAD_voidKeyPadInt@i 000A  
                                     ??___wmul 0005                              ?_EEPROM_voidWrite 0001  
                      __end_of_I2C_voidI2CInit 228C                 __end_of_LCD4Bit_voidSendNumber 2E04  
                                  __pdataBANK0 0080                         ??_I2C_voidSendStopCond 0002  
                           _I2C_MasterMode_CFG 259E                                       ??_memset 0006  
               __end_of_LCD4Bit_voidSendString 322A                             ??_EEPROM_voidWrite 0004  
                                   memset@dest 0001                                ?_LED_voidLedOff 0009  
                              ?_LED_voidLedInt 0009                                  _EEPROM_u8Read 386E  
                            _ADC_ChannelConfig 1FA0                                      ___fladd@a 002C  
                                    ___fladd@b 0028                                      _Tx_config 315A  
                       _CCP1_InterruptHandeler 00FB                              ??_LCD_ChoisePrint 004B  
                                    ___fldiv@a 0013                                      ___fldiv@b 000F  
                          ?_I2C_MasterMode_CFG 0042                             ?_ADC_ChannelConfig 0001  
                                  __pbssCOMRAM 0068                      GPIO_u8ReadPin@Copy_u8Port 0006  
      LCD_voidSetCursorPos_4Bit@Copy_stLCD4Bit 000D                       _GPIO_VoidSetPinDirection 2ACC  
                             ?_APP_CheckLights 0010                            ??_ADC_ChannelConfig 0009  
             I2C_u8ReadByteBlocking@Copy_u8Ack 0002                                       ?_IdleI2C 0001  
             I2C_u8ReadByteBlocking@Copy_stI2C 0001           ADC_ConversionResultConfig@Copy_stADC 0001  
           LCD4Bit_voidSendChar@Copy_stLCD4Bit 000B                           ??_I2C_MasterMode_CFG 0043  
        I2C_u8WriteByteBlocking@Local_u8Return 0003                          ?_ADC_VoltageRefConfig 0001  
                                    __pintcode 0008                                  __pmediumconst FE86  
                                     ?___fladd 0028                                       ?___fldiv 000F  
                                     ?___awdiv 0001                                       ?___awmod 0001  
                                     ?___fltol 0038                      __end_of_ADC_ChannelConfig 2122  
                       ??_ADC_u16GetConversion 000E                       __end_of_LCD_voidSend4bit 296C  
                               ?_EEPROM_u8Read 0001               LCD4Bit_voidSendNumber@Copy_u8Row 0033  
                                   ?_Tx_config 0001                   __end_of_KEYPAD_voidKeyPadInt 2F14  
                      _LCD_voidSendEnable_4Bit 322A                      ??_LCD4Bit_voidSendCommand 000D  
        I2C_voidSendRebeatStartCond@Copy_stI2C 0001           LCD4Bit_voidSendNumber@Copy_stLCD4Bit 0030  
                                     ?_sprintf 001E                        _I2C_u8WriteByteBlocking 33AA  
                      KEYPAD_u8KeyPadPressed@i 000E                        KEYPAD_u8KeyPadPressed@j 000F  
                      KEYPAD_u8KeyPadPressed@q 000D                           _GLOP_u8Timer2Preload 0077  
      LCD4Bit_voidSendString_Pos@Copy_u8Column 0014                                       _LED_LOCK 0065  
                               ___wmul@product 0005                                       _RB4_flag 0053  
                                     _PIE1bits 0F9D                                       _PIE2bits 0FA0  
                                     _RB5_flag 0052                                       _RB6_flag 0051  
                                     _RB7_flag 0050                                   _Set_Password 0072  
                                     _PIR1bits 0F9E                                    _DC_MotorCCP 00BE  
                                     _PIR2bits 0FA1       GPIO_VoidSetPinDirection@Copy_u8Direction 0002  
                                     _RCONbits 0FD0                    ?_ADC_u16GetConversionResult 0001  
                                    _uart_flag 0078                I2C_voidSendStartCond@Copy_stI2C 0001  
                               _APP_Get_Number 27F4                        LCD4Bit_voidSendNumber@i 0041  
               ADC_u16GetConversion@Copy_stADC 000C                               ?_I2C_voidI2CInit 0045  
                            _I2C_SlaveMode_CFG 3888                                      _vfpfcnvrt 1A52  
                    ?_LCD4Bit_voidSendChar_Pos 0012                                      _rx_config 30F2  
                                   _ADCON0bits 0FC2                                     _ADCON1bits 0FC1  
                                   _ADCON2bits 0FC0                              ___wmul@multiplier 0001  
                        __end_of_I2C_SendStuct 2CCE                             ?_I2C_SlaveMode_CFG 0001  
                             I2C_SendStuct@ptr 0007                   ??_LCD4Bit_voidSendString_Pos 0017  
           LCD4Bit_voidSendChar_Pos@Copy_u8Row 0013                                _ADC_voidADCInit 3010  
                          ??_I2C_SlaveMode_CFG 0002                                     vfpfcnvrt@c 0017  
       LCD_voidSetCursorPos_4Bit@Copy_u8Column 000F                                      copy_data0 3098  
                                    copy_data1 30B8                          __end_of_LED_voidLedOn 2F92  
                                     _KeyPad_1 00AE              LCD4Bit_voidSendString@Copy_Pu8Str 000E  
                   ??_ADC_voidStatrtConversion 0002             __end_of_ADC_ConversionResultConfig 382E  
                   _ADC_ConversionResultConfig 380C                                     _ACK_STATUS 0054  
                                   _EECON1bits 0FA6                         ??_ADC_VoltageRefConfig 0002  
                 EEPROM_u8Read@Copy_u16Address 0001                                       __Hrparam 0000  
                       __end_of_APP_Get_Number 28B0                                     vfprintf@ap 001B  
                                     __Lrparam 0000                                     vfprintf@fp 0018  
                    __end_of_I2C_SlaveMode_CFG 38A2                                ??_EEPROM_u8Read 0003  
                                   ?_vfpfcnvrt 000B                               ??_BaudRateConfig 0043  
                                   ?_rx_config 0001                      ??_LCD_voidSendEnable_4Bit 000A  
               ADC_VoltageRefConfig@Copy_stADC 0001                                    ??_Tx_config 0002  
                                 _PreloadVlaue 006A                        ?_I2C_u8ReadByteBlocking 0001  
                                   sprintf@fmt 001F                                       ___xxtofl 1C3C  
                        _I2C_voidSendStartCond 37E8                      ??_I2C_u8WriteByteBlocking 0003  
               I2C_voidSendStopCond@Copy_stI2C 0001                                       __ptext10 37E8  
                                     __ptext11 33AA                                       __ptext20 1DF0  
                                     __ptext12 3586                                       __ptext21 2E8E  
                                     __ptext13 386E                                       __ptext30 3754  
                                     __ptext22 2122                                       __ptext14 36BC  
                                     __ptext31 380C                                       __ptext23 3888  
                                     __ptext15 32F2                                       __ptext40 2B7C  
                                     __ptext32 228C                                       __ptext24 259E  
                                     __ptext16 30F2                                       __ptext41 38C4  
                                     __ptext33 3850                                       __ptext25 1C3C  
                                     __ptext17 315A                                       __ptext50 34EE  
                                     __ptext42 36F0                                       __ptext34 27F4  
                                     __ptext26 239E                                       __ptext18 0AF2  
                                     __ptext51 322A                                       __ptext43 296C  
                                     __ptext35 377A                                       __ptext27 14A2  
                                     __ptext19 2CCE                                       __ptext60 1FA0  
                                     __ptext52 28B0                                       __ptext44 2674  
                                     __ptext36 2D6A                                       __ptext28 0FE2  
                                     __ptext61 2ACC                                       __ptext53 24A4  
                                     __ptext45 3724                                       __ptext37 364E  
                                     __ptext29 3010                                       __ptext54 360E  
                                     __ptext46 382E                                       __ptext38 35CA  
                                     __ptext55 2A1C                                       __ptext47 2E04  
                                     __ptext39 1A52                                       __ptext56 183C  
                                     __ptext48 34A0                                       __ptext57 3686  
                                     __ptext49 31C2                                       __ptext58 38C0  
                                     __ptext59 353C                                ?_APP_Get_Number 0042  
                         _KEYPAD_voidKeyPadInt 2E8E                                _LCD_ChoisePrint 2738  
                                     isa$xinst 0000                               ??_LED_voidLedOff 000A  
                             ??_LED_voidLedInt 000A                                       int$flags 007E  
                                     _vfprintf 35CA          LCD4Bit_voidSendString_Pos@Copy_Pu8Str 0015  
                   ??_GPIO_VoidSetPinDirection 0003                        __end_of_ADC_voidADCInit 3084  
EEPROM_voidWrite@Local_u8GlobalInterruptStatus 0004                 __end_of_I2C_u8ReadByteBlocking 3450  
                                   _INTCONbits 0FF2                              _I2C_u8ReadRegByte 3290  
   KEYPAD_u8KeyPadPressed@Local_u8GPIOReturned 000C                      APP_CheckLights@Adc_result 0011  
                           ?_I2C_u8ReadRegByte 0004                                       intlevel2 0000  
                                    sprintf@ap 0023                     LCD_ChoisePrint@User_choise 004B  
                          ??_I2C_u8ReadRegByte 0007           ADC_u16GetConversionResult@Copy_stADC 0001  
                        ?_KEYPAD_voidKeyPadInt 0009                                     _OSCCONbits 0FD3  
                             _Application_Init 36BC                                    ??_vfpfcnvrt 000E  
                                  ??_rx_config 0002                              ?_LCD_voidSend4bit 0009  
                    __end_of_I2C_u8ReadRegByte 32F2            GPIO_VoidSetPinDirection@Copy_u8Port 0008  
           __end_of_LCD4Bit_voidSendString_Pos 3850                     _LCD4Bit_voidSendString_Pos 382E  
                                     sprintf@f 0024                                       sprintf@s 001E  
                       _CCP2_InterruptHandeler 00F9                            _GPIO_VoidSetPinMode 2A1C  
                     ADC_ChannelConfig@channel 000B                             ??_LCD_voidSend4bit 000B  
                       ?_I2C_voidSendStartCond 0001                                 _port_registers 0090  
                   BaudRateConfig@Copy_stUsart 0042                                    _SSPCON1bits 0FC6  
                                  _SSPCON2bits 0FC5                                     _WDTCONbits 0FD1  
                                ___fladd@signs 0034             GPIO_VoidSetPinDirection@Copy_u8Pin 0001  
                                  _Au8elements 0080                   CCP_voidCompareSetValue@F2635 006E  
                                 ___fladd@aexp 0035                                   ___fladd@bexp 0036  
                      __end_of_LCD_ChoisePrint 27F4                     ?_USART_voidAsynchUsartInit 004D  
                   ?_LCD_voidSetCursorPos_4Bit 000D                           ?_GPIO_VoidSetPinMode 0001  
             __end_of_LCD4Bit_voidSendChar_Pos 386E                              ??_InterruptManger 0001  
